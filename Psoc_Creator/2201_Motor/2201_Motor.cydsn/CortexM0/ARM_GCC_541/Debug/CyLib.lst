ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.0
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2020, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 106 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 107 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 122 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 30000340 		.word	1073938480
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 4


  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB1:
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 139 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 148 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 149 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 30000340 		.word	1073938480
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 5


  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB2:
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
 324:Generated_Source\PSoC4/CyLib.c **** 
 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 11


 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 12


 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 585 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 13


 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 593 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 625 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0321     		movs	r1, #3
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 14


 106              		.loc 1 636 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 639 0
 112 0014 1460     		str	r4, [r2]
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 641 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 642:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 642 0
 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 28000340 		.word	1073938472
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB3:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 662 0
 136              		.cfi_startproc
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 15


 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 675 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 144              		.loc 1 677 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 1B01     		lsls	r3, r3, #4
 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 154              		.loc 1 681 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 1B09     		lsrs	r3, r3, #4
 158 001a 0321     		movs	r1, #3
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 162              		.loc 1 683 0
 163 0022 1368     		ldr	r3, [r2]
 164 0024 3021     		movs	r1, #48
 165 0026 8B43     		bics	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 686 0
 169              		@ sp needed
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 16


 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 28000340 		.word	1073938472
 175 0030 00000000 		.word	.LANCHOR0
 176              		.cfi_endproc
 177              	.LFE3:
 178              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 179              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 180              		.align	2
 181              		.global	CySysClkGetSysclkSource
 182              		.code	16
 183              		.thumb_func
 184              		.type	CySysClkGetSysclkSource, %function
 185              	CySysClkGetSysclkSource:
 186              	.LFB4:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 187              		.loc 1 699 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 10B5     		push	{r4, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 4, -8
 194              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 195              		.loc 1 703 0
 196 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 197              	.LVL8:
 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 198              		.loc 1 713 0
 199 0006 044B     		ldr	r3, .L16
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 17


 200 0008 1B68     		ldr	r3, [r3]
 201 000a 0324     		movs	r4, #3
 202 000c 1C40     		ands	r4, r3
 203              	.LVL9:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 204              		.loc 1 722 0
 205 000e FFF7FEFF 		bl	CyExitCriticalSection
 206              	.LVL10:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 207              		.loc 1 725 0
 208 0012 2000     		movs	r0, r4
 209              		@ sp needed
 210              	.LVL11:
 211 0014 10BD     		pop	{r4, pc}
 212              	.L17:
 213 0016 C046     		.align	2
 214              	.L16:
 215 0018 28000340 		.word	1073938472
 216              		.cfi_endproc
 217              	.LFE4:
 218              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 219              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 220              		.align	2
 221              		.global	CySysClkWriteSysclkDiv
 222              		.code	16
 223              		.thumb_func
 224              		.type	CySysClkWriteSysclkDiv, %function
 225              	CySysClkWriteSysclkDiv:
 226              	.LFB5:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 18


 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 227              		.loc 1 760 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              	.LVL12:
 232 0000 10B5     		push	{r4, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
 236 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 237              		.loc 1 763 0
 238 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 239              	.LVL13:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 240              		.loc 1 765 0
 241 0008 A401     		lsls	r4, r4, #6
 242              	.LVL14:
 243 000a FF23     		movs	r3, #255
 244 000c 2340     		ands	r3, r4
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 245              		.loc 1 767 0
 246 000e 0449     		ldr	r1, .L19
 247 0010 0A68     		ldr	r2, [r1]
 248 0012 C024     		movs	r4, #192
 249 0014 A243     		bics	r2, r4
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 250              		.loc 1 766 0
 251 0016 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 252              		.loc 1 765 0
 253 0018 0B60     		str	r3, [r1]
 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 254              		.loc 1 770 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 19


 255 001a FFF7FEFF 		bl	CyExitCriticalSection
 256              	.LVL15:
 771:Generated_Source\PSoC4/CyLib.c **** }
 257              		.loc 1 771 0
 258              		@ sp needed
 259 001e 10BD     		pop	{r4, pc}
 260              	.L20:
 261              		.align	2
 262              	.L19:
 263 0020 28000340 		.word	1073938472
 264              		.cfi_endproc
 265              	.LFE5:
 266              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 267              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 268              		.align	2
 269              		.global	CySysClkWriteHfclkDiv
 270              		.code	16
 271              		.thumb_func
 272              		.type	CySysClkWriteHfclkDiv, %function
 273              	CySysClkWriteHfclkDiv:
 274              	.LFB7:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 20


 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 21


 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 22


 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 23


 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 24


1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 25


1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 26


1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
 275              		.loc 1 1156 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              	.LVL16:
 280 0000 70B5     		push	{r4, r5, r6, lr}
 281              		.cfi_def_cfa_offset 16
 282              		.cfi_offset 4, -16
 283              		.cfi_offset 5, -12
 284              		.cfi_offset 6, -8
 285              		.cfi_offset 14, -4
 286 0002 0400     		movs	r4, r0
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 287              		.loc 1 1159 0
 288 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 289              	.LVL17:
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 290              		.loc 1 1161 0
 291 0008 0549     		ldr	r1, .L22
 292 000a 0A68     		ldr	r2, [r1]
 293 000c 0C25     		movs	r5, #12
 294 000e AA43     		bics	r2, r5
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 295              		.loc 1 1163 0
 296 0010 A300     		lsls	r3, r4, #2
 297 0012 2C00     		movs	r4, r5
 298              	.LVL18:
 299 0014 1C40     		ands	r4, r3
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 300              		.loc 1 1162 0
 301 0016 1443     		orrs	r4, r2
1161:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 302              		.loc 1 1161 0
 303 0018 0C60     		str	r4, [r1]
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 304              		.loc 1 1165 0
 305 001a FFF7FEFF 		bl	CyExitCriticalSection
 306              	.LVL19:
1166:Generated_Source\PSoC4/CyLib.c ****     }
 307              		.loc 1 1166 0
 308              		@ sp needed
 309 001e 70BD     		pop	{r4, r5, r6, pc}
 310              	.L23:
 311              		.align	2
 312              	.L22:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 27


 313 0020 28000340 		.word	1073938472
 314              		.cfi_endproc
 315              	.LFE7:
 316              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 317              		.section	.text.CySysGetResetReason,"ax",%progbits
 318              		.align	2
 319              		.global	CySysGetResetReason
 320              		.code	16
 321              		.thumb_func
 322              		.type	CySysGetResetReason, %function
 323              	CySysGetResetReason:
 324              	.LFB8:
1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 28


1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 29


1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 30


1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 31


1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 32


1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 33


1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 34


1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 35


1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 36


1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 37


1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 38


1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 39


1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 40


1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 41


1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 42


2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 43


2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 44


2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 45


2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 46


2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 47


2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 48


2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 49


2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 50


2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 51


2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 52


2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 53


2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 54


2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2696:Generated_Source\PSoC4/CyLib.c ****     }
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2713:Generated_Source\PSoC4/CyLib.c ****     }
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2729:Generated_Source\PSoC4/CyLib.c ****     }
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 55


2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 325              		.loc 1 2753 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330              	.LVL20:
 331 0000 0200     		movs	r2, r0
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 332              		.loc 1 2756 0
 333 0002 1920     		movs	r0, #25
 334              	.LVL21:
 335 0004 0240     		ands	r2, r0
 336              	.LVL22:
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 337              		.loc 1 2757 0
 338 0006 0249     		ldr	r1, .L25
 339 0008 0B68     		ldr	r3, [r1]
 340 000a 1840     		ands	r0, r3
 341              	.LVL23:
2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 342              		.loc 1 2759 0
 343 000c 0A60     		str	r2, [r1]
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 344              		.loc 1 2762 0
 345              		@ sp needed
 346 000e 7047     		bx	lr
 347              	.L26:
 348              		.align	2
 349              	.L25:
 350 0010 54000340 		.word	1073938516
 351              		.cfi_endproc
 352              	.LFE8:
 353              		.size	CySysGetResetReason, .-CySysGetResetReason
 354              		.section	.text.CyDisableInts,"ax",%progbits
 355              		.align	2
 356              		.global	CyDisableInts
 357              		.code	16
 358              		.thumb_func
 359              		.type	CyDisableInts, %function
 360              	CyDisableInts:
 361              	.LFB9:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 56


2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 362              		.loc 1 2776 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 367              		.loc 1 2780 0
 368 0000 024B     		ldr	r3, .L28
 369 0002 1868     		ldr	r0, [r3]
 370              	.LVL24:
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 371              		.loc 1 2783 0
 372 0004 0122     		movs	r2, #1
 373 0006 5242     		rsbs	r2, r2, #0
 374 0008 1A60     		str	r2, [r3]
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 375              		.loc 1 2786 0
 376              		@ sp needed
 377 000a 7047     		bx	lr
 378              	.L29:
 379              		.align	2
 380              	.L28:
 381 000c 80E100E0 		.word	-536813184
 382              		.cfi_endproc
 383              	.LFE9:
 384              		.size	CyDisableInts, .-CyDisableInts
 385              		.section	.text.CyEnableInts,"ax",%progbits
 386              		.align	2
 387              		.global	CyEnableInts
 388              		.code	16
 389              		.thumb_func
 390              		.type	CyEnableInts, %function
 391              	CyEnableInts:
 392              	.LFB10:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 57


2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 393              		.loc 1 2799 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398              	.LVL25:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 399              		.loc 1 2800 0
 400 0000 014B     		ldr	r3, .L31
 401 0002 1860     		str	r0, [r3]
2801:Generated_Source\PSoC4/CyLib.c **** }
 402              		.loc 1 2801 0
 403              		@ sp needed
 404 0004 7047     		bx	lr
 405              	.L32:
 406 0006 C046     		.align	2
 407              	.L31:
 408 0008 00E100E0 		.word	-536813312
 409              		.cfi_endproc
 410              	.LFE10:
 411              		.size	CyEnableInts, .-CyEnableInts
 412              		.section	.text.CyIntEnable,"ax",%progbits
 413              		.align	2
 414              		.global	CyIntEnable
 415              		.code	16
 416              		.thumb_func
 417              		.type	CyIntEnable, %function
 418              	CyIntEnable:
 419              	.LFB17:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 58


2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2864:Generated_Source\PSoC4/CyLib.c **** }
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 59


2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2914:Generated_Source\PSoC4/CyLib.c **** }
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 60


2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2969:Generated_Source\PSoC4/CyLib.c **** }
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
 420              		.loc 1 2982 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425              	.LVL26:
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 426              		.loc 1 2983 0
 427 0000 1F23     		movs	r3, #31
 428 0002 1840     		ands	r0, r3
 429              	.LVL27:
 430 0004 1E3B     		subs	r3, r3, #30
 431 0006 8340     		lsls	r3, r3, r0
 432 0008 014A     		ldr	r2, .L34
 433 000a 1360     		str	r3, [r2]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 61


2984:Generated_Source\PSoC4/CyLib.c **** }
 434              		.loc 1 2984 0
 435              		@ sp needed
 436 000c 7047     		bx	lr
 437              	.L35:
 438 000e C046     		.align	2
 439              	.L34:
 440 0010 00E100E0 		.word	-536813312
 441              		.cfi_endproc
 442              	.LFE17:
 443              		.size	CyIntEnable, .-CyIntEnable
 444              		.section	.text.CyIntGetState,"ax",%progbits
 445              		.align	2
 446              		.global	CyIntGetState
 447              		.code	16
 448              		.thumb_func
 449              		.type	CyIntGetState, %function
 450              	CyIntGetState:
 451              	.LFB18:
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
 452              		.loc 1 3000 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL28:
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 458              		.loc 1 3002 0
 459 0000 044B     		ldr	r3, .L37
 460 0002 1B68     		ldr	r3, [r3]
 461 0004 1F22     		movs	r2, #31
 462 0006 1040     		ands	r0, r2
 463              	.LVL29:
 464 0008 C340     		lsrs	r3, r3, r0
 465 000a 1800     		movs	r0, r3
 466 000c 0123     		movs	r3, #1
 467 000e 1840     		ands	r0, r3
3003:Generated_Source\PSoC4/CyLib.c **** }
 468              		.loc 1 3003 0
 469              		@ sp needed
 470 0010 7047     		bx	lr
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 62


 471              	.L38:
 472 0012 C046     		.align	2
 473              	.L37:
 474 0014 00E100E0 		.word	-536813312
 475              		.cfi_endproc
 476              	.LFE18:
 477              		.size	CyIntGetState, .-CyIntGetState
 478              		.section	.text.CyIntDisable,"ax",%progbits
 479              		.align	2
 480              		.global	CyIntDisable
 481              		.code	16
 482              		.thumb_func
 483              		.type	CyIntDisable, %function
 484              	CyIntDisable:
 485              	.LFB19:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
 486              		.loc 1 3016 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491              	.LVL30:
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 492              		.loc 1 3017 0
 493 0000 1F23     		movs	r3, #31
 494 0002 1840     		ands	r0, r3
 495              	.LVL31:
 496 0004 1E3B     		subs	r3, r3, #30
 497 0006 8340     		lsls	r3, r3, r0
 498 0008 014A     		ldr	r2, .L40
 499 000a 1360     		str	r3, [r2]
3018:Generated_Source\PSoC4/CyLib.c **** }
 500              		.loc 1 3018 0
 501              		@ sp needed
 502 000c 7047     		bx	lr
 503              	.L41:
 504 000e C046     		.align	2
 505              	.L40:
 506 0010 80E100E0 		.word	-536813184
 507              		.cfi_endproc
 508              	.LFE19:
 509              		.size	CyIntDisable, .-CyIntDisable
 510              		.section	.text.CyIntSetPending,"ax",%progbits
 511              		.align	2
 512              		.global	CyIntSetPending
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 63


 513              		.code	16
 514              		.thumb_func
 515              		.type	CyIntSetPending, %function
 516              	CyIntSetPending:
 517              	.LFB20:
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
 518              		.loc 1 3030 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL32:
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 524              		.loc 1 3031 0
 525 0000 1F23     		movs	r3, #31
 526 0002 1840     		ands	r0, r3
 527              	.LVL33:
 528 0004 1E3B     		subs	r3, r3, #30
 529 0006 8340     		lsls	r3, r3, r0
 530 0008 014A     		ldr	r2, .L43
 531 000a 1360     		str	r3, [r2]
3032:Generated_Source\PSoC4/CyLib.c **** }
 532              		.loc 1 3032 0
 533              		@ sp needed
 534 000c 7047     		bx	lr
 535              	.L44:
 536 000e C046     		.align	2
 537              	.L43:
 538 0010 00E200E0 		.word	-536813056
 539              		.cfi_endproc
 540              	.LFE20:
 541              		.size	CyIntSetPending, .-CyIntSetPending
 542              		.section	.text.CyIntClearPending,"ax",%progbits
 543              		.align	2
 544              		.global	CyIntClearPending
 545              		.code	16
 546              		.thumb_func
 547              		.type	CyIntClearPending, %function
 548              	CyIntClearPending:
 549              	.LFB21:
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 64


3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
 550              		.loc 1 3045 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 555              	.LVL34:
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 556              		.loc 1 3046 0
 557 0000 1F23     		movs	r3, #31
 558 0002 1840     		ands	r0, r3
 559              	.LVL35:
 560 0004 1E3B     		subs	r3, r3, #30
 561 0006 8340     		lsls	r3, r3, r0
 562 0008 014A     		ldr	r2, .L46
 563 000a 1360     		str	r3, [r2]
3047:Generated_Source\PSoC4/CyLib.c **** }
 564              		.loc 1 3047 0
 565              		@ sp needed
 566 000c 7047     		bx	lr
 567              	.L47:
 568 000e C046     		.align	2
 569              	.L46:
 570 0010 80E200E0 		.word	-536812928
 571              		.cfi_endproc
 572              	.LFE21:
 573              		.size	CyIntClearPending, .-CyIntClearPending
 574              		.section	.text.CyHalt,"ax",%progbits
 575              		.align	2
 576              		.global	CyHalt
 577              		.code	16
 578              		.thumb_func
 579              		.type	CyHalt, %function
 580              	CyHalt:
 581              	.LFB22:
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
 582              		.loc 1 3060 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 65


 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587              	.LVL36:
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 588              		.loc 1 3069 0
 589              		.syntax divided
 590              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 591 0000 01BE     		    bkpt    1
 592              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 593              		.loc 1 3073 0
 594              		.thumb
 595              		.syntax unified
 596              		@ sp needed
 597 0002 7047     		bx	lr
 598              		.cfi_endproc
 599              	.LFE22:
 600              		.size	CyHalt, .-CyHalt
 601              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 602              		.align	2
 603              		.global	CySysClkWriteImoFreq
 604              		.code	16
 605              		.thumb_func
 606              		.type	CySysClkWriteImoFreq, %function
 607              	CySysClkWriteImoFreq:
 608              	.LFB6:
1003:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 609              		.loc 1 1003 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              	.LVL37:
 614 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 615              		.cfi_def_cfa_offset 24
 616              		.cfi_offset 3, -24
 617              		.cfi_offset 4, -20
 618              		.cfi_offset 5, -16
 619              		.cfi_offset 6, -12
 620              		.cfi_offset 7, -8
 621              		.cfi_offset 14, -4
 622 0002 0400     		movs	r4, r0
1020:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 623              		.loc 1 1020 0
 624 0004 1828     		cmp	r0, #24
 625 0006 0BD0     		beq	.L50
1020:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 66


 626              		.loc 1 1020 0 is_stmt 0 discriminator 1
 627 0008 1C28     		cmp	r0, #28
 628 000a 09D0     		beq	.L50
1020:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 629              		.loc 1 1020 0 discriminator 2
 630 000c 2028     		cmp	r0, #32
 631 000e 07D0     		beq	.L50
1020:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 632              		.loc 1 1020 0 discriminator 3
 633 0010 2428     		cmp	r0, #36
 634 0012 05D0     		beq	.L50
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 635              		.loc 1 1021 0 is_stmt 1
 636 0014 2828     		cmp	r0, #40
 637 0016 03D0     		beq	.L50
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 638              		.loc 1 1021 0 is_stmt 0 discriminator 1
 639 0018 2C28     		cmp	r0, #44
 640 001a 01D0     		beq	.L50
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 641              		.loc 1 1021 0 discriminator 2
 642 001c 3028     		cmp	r0, #48
 643 001e 3CD1     		bne	.L51
 644              	.L50:
1025:Generated_Source\PSoC4/CyLib.c **** 
 645              		.loc 1 1025 0 is_stmt 1
 646 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 647              	.LVL38:
 648 0024 0500     		movs	r5, r0
 649              	.LVL39:
1056:Generated_Source\PSoC4/CyLib.c **** 
 650              		.loc 1 1056 0
 651 0026 1F4A     		ldr	r2, .L54
 652 0028 1368     		ldr	r3, [r2]
 653 002a 0721     		movs	r1, #7
 654 002c 8B43     		bics	r3, r1
 655 002e 1360     		str	r3, [r2]
1074:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 656              		.loc 1 1074 0
 657 0030 1D4B     		ldr	r3, .L54+4
 658 0032 E318     		adds	r3, r4, r3
 659 0034 1B78     		ldrb	r3, [r3]
 660 0036 DBB2     		uxtb	r3, r3
 661              	.LVL40:
1076:Generated_Source\PSoC4/CyLib.c **** 
 662              		.loc 1 1076 0
 663 0038 1C4A     		ldr	r2, .L54+8
 664 003a 1360     		str	r3, [r2]
1079:Generated_Source\PSoC4/CyLib.c **** 
 665              		.loc 1 1079 0
 666 003c 1C4A     		ldr	r2, .L54+12
 667 003e 1368     		ldr	r3, [r2]
 668              	.LVL41:
 669 0040 8B43     		bics	r3, r1
 670 0042 1360     		str	r3, [r2]
 671              	.LVL42:
1082:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 67


 672              		.loc 1 1082 0
 673 0044 1B48     		ldr	r0, .L54+16
 674 0046 0368     		ldr	r3, [r0]
 675 0048 7F22     		movs	r2, #127
 676 004a 9343     		bics	r3, r2
 677 004c 1900     		movs	r1, r3
1083:Generated_Source\PSoC4/CyLib.c **** 
 678              		.loc 1 1083 0
 679 004e 1A4B     		ldr	r3, .L54+20
 680 0050 E318     		adds	r3, r4, r3
 681 0052 1B78     		ldrb	r3, [r3]
 682 0054 1340     		ands	r3, r2
1082:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 683              		.loc 1 1082 0
 684 0056 0B43     		orrs	r3, r1
 685 0058 0360     		str	r3, [r0]
1085:Generated_Source\PSoC4/CyLib.c **** 
 686              		.loc 1 1085 0
 687 005a 3220     		movs	r0, #50
 688 005c FFF7FEFF 		bl	CyDelayCycles
 689              	.LVL43:
1087:Generated_Source\PSoC4/CyLib.c ****             {
 690              		.loc 1 1087 0
 691 0060 182C     		cmp	r4, #24
 692 0062 16D9     		bls	.L52
1090:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 693              		.loc 1 1090 0
 694 0064 0F4E     		ldr	r6, .L54
 695 0066 3368     		ldr	r3, [r6]
 696 0068 0727     		movs	r7, #7
 697 006a BB43     		bics	r3, r7
 698 006c 1A00     		movs	r2, r3
1091:Generated_Source\PSoC4/CyLib.c **** 
 699              		.loc 1 1091 0
 700 006e 2300     		movs	r3, r4
 701 0070 1C3B     		subs	r3, r3, #28
 702 0072 9B08     		lsrs	r3, r3, #2
 703 0074 3B40     		ands	r3, r7
1090:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 704              		.loc 1 1090 0
 705 0076 1343     		orrs	r3, r2
 706 0078 3360     		str	r3, [r6]
1093:Generated_Source\PSoC4/CyLib.c **** 
 707              		.loc 1 1093 0
 708 007a 3220     		movs	r0, #50
 709 007c FFF7FEFF 		bl	CyDelayCycles
 710              	.LVL44:
1097:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 711              		.loc 1 1097 0
 712 0080 3268     		ldr	r2, [r6]
 713 0082 BA43     		bics	r2, r7
1098:Generated_Source\PSoC4/CyLib.c ****             }
 714              		.loc 1 1098 0
 715 0084 2300     		movs	r3, r4
 716 0086 183B     		subs	r3, r3, #24
 717 0088 9B08     		lsrs	r3, r3, #2
 718 008a 3C00     		movs	r4, r7
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 68


 719              	.LVL45:
 720 008c 1C40     		ands	r4, r3
1097:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 721              		.loc 1 1097 0
 722 008e 1443     		orrs	r4, r2
 723 0090 3460     		str	r4, [r6]
 724              	.L52:
1116:Generated_Source\PSoC4/CyLib.c ****         }
 725              		.loc 1 1116 0
 726 0092 2800     		movs	r0, r5
 727 0094 FFF7FEFF 		bl	CyExitCriticalSection
 728              	.LVL46:
 729 0098 02E0     		b	.L49
 730              	.LVL47:
 731              	.L51:
1121:Generated_Source\PSoC4/CyLib.c ****         }
 732              		.loc 1 1121 0 discriminator 1
 733 009a 0020     		movs	r0, #0
 734              	.LVL48:
 735 009c FFF7FEFF 		bl	CyHalt
 736              	.LVL49:
 737              	.L49:
1123:Generated_Source\PSoC4/CyLib.c **** 
 738              		.loc 1 1123 0
 739              		@ sp needed
 740 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 741              	.L55:
 742 00a2 C046     		.align	2
 743              	.L54:
 744 00a4 080F0340 		.word	1073942280
 745 00a8 CDF1FF0F 		.word	268431821
 746 00ac 0C0F0340 		.word	1073942284
 747 00b0 100F0340 		.word	1073942288
 748 00b4 180F0340 		.word	1073942296
 749 00b8 B4F1FF0F 		.word	268431796
 750              		.cfi_endproc
 751              	.LFE6:
 752              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 753              		.section	.text.CyIntSetSysVector,"ax",%progbits
 754              		.align	2
 755              		.global	CyIntSetSysVector
 756              		.code	16
 757              		.thumb_func
 758              		.type	CyIntSetSysVector, %function
 759              	CyIntSetSysVector:
 760              	.LFB11:
2824:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 761              		.loc 1 2824 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              	.LVL50:
 766 0000 70B5     		push	{r4, r5, r6, lr}
 767              		.cfi_def_cfa_offset 16
 768              		.cfi_offset 4, -16
 769              		.cfi_offset 5, -12
 770              		.cfi_offset 6, -8
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 69


 771              		.cfi_offset 14, -4
 772 0002 0400     		movs	r4, r0
 773 0004 0D00     		movs	r5, r1
 774              	.LVL51:
2828:Generated_Source\PSoC4/CyLib.c **** 
 775              		.loc 1 2828 0
 776 0006 0F28     		cmp	r0, #15
 777 0008 02D9     		bls	.L57
2828:Generated_Source\PSoC4/CyLib.c **** 
 778              		.loc 1 2828 0 is_stmt 0 discriminator 1
 779 000a 0020     		movs	r0, #0
 780              	.LVL52:
 781 000c FFF7FEFF 		bl	CyHalt
 782              	.LVL53:
 783              	.L57:
2831:Generated_Source\PSoC4/CyLib.c **** 
 784              		.loc 1 2831 0 is_stmt 1
 785 0010 A400     		lsls	r4, r4, #2
 786 0012 8023     		movs	r3, #128
 787 0014 9B05     		lsls	r3, r3, #22
 788 0016 9C46     		mov	ip, r3
 789 0018 6444     		add	r4, r4, ip
 790 001a 2068     		ldr	r0, [r4]
 791              	.LVL54:
2834:Generated_Source\PSoC4/CyLib.c **** 
 792              		.loc 1 2834 0
 793 001c 2560     		str	r5, [r4]
2837:Generated_Source\PSoC4/CyLib.c **** 
 794              		.loc 1 2837 0
 795              		@ sp needed
 796              	.LVL55:
 797 001e 70BD     		pop	{r4, r5, r6, pc}
 798              		.cfi_endproc
 799              	.LFE11:
 800              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 801              		.section	.text.CyIntGetSysVector,"ax",%progbits
 802              		.align	2
 803              		.global	CyIntGetSysVector
 804              		.code	16
 805              		.thumb_func
 806              		.type	CyIntGetSysVector, %function
 807              	CyIntGetSysVector:
 808              	.LFB12:
2858:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 809              		.loc 1 2858 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              	.LVL56:
 814 0000 10B5     		push	{r4, lr}
 815              		.cfi_def_cfa_offset 8
 816              		.cfi_offset 4, -8
 817              		.cfi_offset 14, -4
 818 0002 0400     		movs	r4, r0
 819              	.LVL57:
2861:Generated_Source\PSoC4/CyLib.c **** 
 820              		.loc 1 2861 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 70


 821 0004 0F28     		cmp	r0, #15
 822 0006 02D9     		bls	.L59
2861:Generated_Source\PSoC4/CyLib.c **** 
 823              		.loc 1 2861 0 is_stmt 0 discriminator 1
 824 0008 0020     		movs	r0, #0
 825              	.LVL58:
 826 000a FFF7FEFF 		bl	CyHalt
 827              	.LVL59:
 828              	.L59:
2863:Generated_Source\PSoC4/CyLib.c **** }
 829              		.loc 1 2863 0 is_stmt 1
 830 000e A400     		lsls	r4, r4, #2
 831 0010 8023     		movs	r3, #128
 832 0012 9B05     		lsls	r3, r3, #22
 833 0014 9C46     		mov	ip, r3
 834 0016 6444     		add	r4, r4, ip
 835 0018 2068     		ldr	r0, [r4]
2864:Generated_Source\PSoC4/CyLib.c **** 
 836              		.loc 1 2864 0
 837              		@ sp needed
 838 001a 10BD     		pop	{r4, pc}
 839              		.cfi_endproc
 840              	.LFE12:
 841              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 842              		.section	.text.CyIntSetVector,"ax",%progbits
 843              		.align	2
 844              		.global	CyIntSetVector
 845              		.code	16
 846              		.thumb_func
 847              		.type	CyIntSetVector, %function
 848              	CyIntSetVector:
 849              	.LFB13:
2880:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 850              		.loc 1 2880 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              	.LVL60:
 855 0000 70B5     		push	{r4, r5, r6, lr}
 856              		.cfi_def_cfa_offset 16
 857              		.cfi_offset 4, -16
 858              		.cfi_offset 5, -12
 859              		.cfi_offset 6, -8
 860              		.cfi_offset 14, -4
 861 0002 0400     		movs	r4, r0
 862 0004 0D00     		movs	r5, r1
 863              	.LVL61:
2884:Generated_Source\PSoC4/CyLib.c **** 
 864              		.loc 1 2884 0
 865 0006 1F28     		cmp	r0, #31
 866 0008 02D9     		bls	.L61
2884:Generated_Source\PSoC4/CyLib.c **** 
 867              		.loc 1 2884 0 is_stmt 0 discriminator 1
 868 000a 0020     		movs	r0, #0
 869              	.LVL62:
 870 000c FFF7FEFF 		bl	CyHalt
 871              	.LVL63:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 71


 872              	.L61:
2887:Generated_Source\PSoC4/CyLib.c **** 
 873              		.loc 1 2887 0 is_stmt 1
 874 0010 1034     		adds	r4, r4, #16
 875 0012 A400     		lsls	r4, r4, #2
 876 0014 8023     		movs	r3, #128
 877 0016 9B05     		lsls	r3, r3, #22
 878 0018 9C46     		mov	ip, r3
 879 001a 6444     		add	r4, r4, ip
 880 001c 2068     		ldr	r0, [r4]
 881              	.LVL64:
2890:Generated_Source\PSoC4/CyLib.c **** 
 882              		.loc 1 2890 0
 883 001e 2560     		str	r5, [r4]
2893:Generated_Source\PSoC4/CyLib.c **** 
 884              		.loc 1 2893 0
 885              		@ sp needed
 886              	.LVL65:
 887 0020 70BD     		pop	{r4, r5, r6, pc}
 888              		.cfi_endproc
 889              	.LFE13:
 890              		.size	CyIntSetVector, .-CyIntSetVector
 891 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 892              		.align	2
 893              		.global	CyIntGetVector
 894              		.code	16
 895              		.thumb_func
 896              		.type	CyIntGetVector, %function
 897              	CyIntGetVector:
 898              	.LFB14:
2908:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 899              		.loc 1 2908 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              	.LVL66:
 904 0000 10B5     		push	{r4, lr}
 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 4, -8
 907              		.cfi_offset 14, -4
 908 0002 0400     		movs	r4, r0
 909              	.LVL67:
2911:Generated_Source\PSoC4/CyLib.c **** 
 910              		.loc 1 2911 0
 911 0004 1F28     		cmp	r0, #31
 912 0006 02D9     		bls	.L63
2911:Generated_Source\PSoC4/CyLib.c **** 
 913              		.loc 1 2911 0 is_stmt 0 discriminator 1
 914 0008 0020     		movs	r0, #0
 915              	.LVL68:
 916 000a FFF7FEFF 		bl	CyHalt
 917              	.LVL69:
 918              	.L63:
2913:Generated_Source\PSoC4/CyLib.c **** }
 919              		.loc 1 2913 0 is_stmt 1
 920 000e 1034     		adds	r4, r4, #16
 921 0010 A400     		lsls	r4, r4, #2
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 72


 922 0012 8023     		movs	r3, #128
 923 0014 9B05     		lsls	r3, r3, #22
 924 0016 9C46     		mov	ip, r3
 925 0018 6444     		add	r4, r4, ip
 926 001a 2068     		ldr	r0, [r4]
2914:Generated_Source\PSoC4/CyLib.c **** 
 927              		.loc 1 2914 0
 928              		@ sp needed
 929 001c 10BD     		pop	{r4, pc}
 930              		.cfi_endproc
 931              	.LFE14:
 932              		.size	CyIntGetVector, .-CyIntGetVector
 933 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 934              		.align	2
 935              		.global	CyIntSetPriority
 936              		.code	16
 937              		.thumb_func
 938              		.type	CyIntSetPriority, %function
 939              	CyIntSetPriority:
 940              	.LFB15:
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 941              		.loc 1 2927 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              	.LVL70:
 946 0000 70B5     		push	{r4, r5, r6, lr}
 947              		.cfi_def_cfa_offset 16
 948              		.cfi_offset 4, -16
 949              		.cfi_offset 5, -12
 950              		.cfi_offset 6, -8
 951              		.cfi_offset 14, -4
 952 0002 0400     		movs	r4, r0
 953 0004 0E00     		movs	r6, r1
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 954              		.loc 1 2932 0
 955 0006 0329     		cmp	r1, #3
 956 0008 02D9     		bls	.L65
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 957              		.loc 1 2932 0 is_stmt 0 discriminator 1
 958 000a 0020     		movs	r0, #0
 959              	.LVL71:
 960 000c FFF7FEFF 		bl	CyHalt
 961              	.LVL72:
 962              	.L65:
2933:Generated_Source\PSoC4/CyLib.c **** 
 963              		.loc 1 2933 0 is_stmt 1
 964 0010 1F2C     		cmp	r4, #31
 965 0012 02D9     		bls	.L66
2933:Generated_Source\PSoC4/CyLib.c **** 
 966              		.loc 1 2933 0 is_stmt 0 discriminator 1
 967 0014 0020     		movs	r0, #0
 968 0016 FFF7FEFF 		bl	CyHalt
 969              	.LVL73:
 970              	.L66:
2935:Generated_Source\PSoC4/CyLib.c **** 
 971              		.loc 1 2935 0 is_stmt 1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 73


 972 001a 0325     		movs	r5, #3
 973 001c 2540     		ands	r5, r4
 974 001e ED00     		lsls	r5, r5, #3
 975 0020 0635     		adds	r5, r5, #6
 976              	.LVL74:
2937:Generated_Source\PSoC4/CyLib.c **** 
 977              		.loc 1 2937 0
 978 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 979              	.LVL75:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 980              		.loc 1 2939 0
 981 0026 A408     		lsrs	r4, r4, #2
 982 0028 A400     		lsls	r4, r4, #2
 983 002a 074B     		ldr	r3, .L67
 984 002c 9C46     		mov	ip, r3
 985 002e 6444     		add	r4, r4, ip
 986 0030 2168     		ldr	r1, [r4]
 987              	.LVL76:
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 988              		.loc 1 2940 0
 989 0032 0323     		movs	r3, #3
 990 0034 AB40     		lsls	r3, r3, r5
 991 0036 9943     		bics	r1, r3
 992              	.LVL77:
 993 0038 0B00     		movs	r3, r1
 994              	.LVL78:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 995              		.loc 1 2941 0
 996 003a 3100     		movs	r1, r6
 997              	.LVL79:
 998 003c A940     		lsls	r1, r1, r5
 999 003e 1943     		orrs	r1, r3
 1000              	.LVL80:
2942:Generated_Source\PSoC4/CyLib.c **** 
 1001              		.loc 1 2942 0
 1002 0040 2160     		str	r1, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 1003              		.loc 1 2944 0
 1004 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1005              	.LVL81:
2945:Generated_Source\PSoC4/CyLib.c **** 
 1006              		.loc 1 2945 0
 1007              		@ sp needed
 1008              	.LVL82:
 1009 0046 70BD     		pop	{r4, r5, r6, pc}
 1010              	.L68:
 1011              		.align	2
 1012              	.L67:
 1013 0048 00E400E0 		.word	-536812544
 1014              		.cfi_endproc
 1015              	.LFE15:
 1016              		.size	CyIntSetPriority, .-CyIntSetPriority
 1017              		.section	.text.CyIntGetPriority,"ax",%progbits
 1018              		.align	2
 1019              		.global	CyIntGetPriority
 1020              		.code	16
 1021              		.thumb_func
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 74


 1022              		.type	CyIntGetPriority, %function
 1023              	CyIntGetPriority:
 1024              	.LFB16:
2961:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1025              		.loc 1 2961 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              	.LVL83:
 1030 0000 10B5     		push	{r4, lr}
 1031              		.cfi_def_cfa_offset 8
 1032              		.cfi_offset 4, -8
 1033              		.cfi_offset 14, -4
 1034 0002 0400     		movs	r4, r0
2964:Generated_Source\PSoC4/CyLib.c **** 
 1035              		.loc 1 2964 0
 1036 0004 1F28     		cmp	r0, #31
 1037 0006 02D9     		bls	.L70
2964:Generated_Source\PSoC4/CyLib.c **** 
 1038              		.loc 1 2964 0 is_stmt 0 discriminator 1
 1039 0008 0020     		movs	r0, #0
 1040              	.LVL84:
 1041 000a FFF7FEFF 		bl	CyHalt
 1042              	.LVL85:
 1043              	.L70:
2966:Generated_Source\PSoC4/CyLib.c **** 
 1044              		.loc 1 2966 0 is_stmt 1
 1045 000e A308     		lsrs	r3, r4, #2
 1046 0010 9B00     		lsls	r3, r3, #2
 1047 0012 054A     		ldr	r2, .L71
 1048 0014 9446     		mov	ip, r2
 1049 0016 6344     		add	r3, r3, ip
 1050 0018 1868     		ldr	r0, [r3]
 1051 001a 0323     		movs	r3, #3
 1052 001c 1C40     		ands	r4, r3
 1053 001e E400     		lsls	r4, r4, #3
 1054 0020 0634     		adds	r4, r4, #6
 1055 0022 E040     		lsrs	r0, r0, r4
 1056              	.LVL86:
2968:Generated_Source\PSoC4/CyLib.c **** }
 1057              		.loc 1 2968 0
 1058 0024 1840     		ands	r0, r3
 1059              	.LVL87:
2969:Generated_Source\PSoC4/CyLib.c **** 
 1060              		.loc 1 2969 0
 1061              		@ sp needed
 1062 0026 10BD     		pop	{r4, pc}
 1063              	.L72:
 1064              		.align	2
 1065              	.L71:
 1066 0028 00E400E0 		.word	-536812544
 1067              		.cfi_endproc
 1068              	.LFE16:
 1069              		.size	CyIntGetPriority, .-CyIntGetPriority
 1070              		.section	.text.CySoftwareReset,"ax",%progbits
 1071              		.align	2
 1072              		.global	CySoftwareReset
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 75


 1073              		.code	16
 1074              		.thumb_func
 1075              		.type	CySoftwareReset, %function
 1076              	CySoftwareReset:
 1077              	.LFB23:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 1078              		.loc 1 3084 0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 0
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1083              		.loc 1 3089 0
 1084 0000 034A     		ldr	r2, .L74
 1085 0002 1368     		ldr	r3, [r2]
 1086 0004 1B04     		lsls	r3, r3, #16
 1087 0006 1B0C     		lsrs	r3, r3, #16
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1088              		.loc 1 3090 0
 1089 0008 0249     		ldr	r1, .L74+4
 1090 000a 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1091              		.loc 1 3089 0
 1092 000c 1360     		str	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 1093              		.loc 1 3091 0
 1094              		@ sp needed
 1095 000e 7047     		bx	lr
 1096              	.L75:
 1097              		.align	2
 1098              	.L74:
 1099 0010 0CED00E0 		.word	-536810228
 1100 0014 0400FA05 		.word	100270084
 1101              		.cfi_endproc
 1102              	.LFE23:
 1103              		.size	CySoftwareReset, .-CySoftwareReset
 1104              		.section	.text.CyDelay,"ax",%progbits
 1105              		.align	2
 1106              		.global	CyDelay
 1107              		.code	16
 1108              		.thumb_func
 1109              		.type	CyDelay, %function
 1110              	CyDelay:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 76


 1111              	.LFB24:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1112              		.loc 1 3104 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              	.LVL88:
 1117 0000 10B5     		push	{r4, lr}
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 4, -8
 1120              		.cfi_offset 14, -4
 1121 0002 0400     		movs	r4, r0
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1122              		.loc 1 3105 0
 1123 0004 06E0     		b	.L77
 1124              	.LVL89:
 1125              	.L78:
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1126              		.loc 1 3110 0
 1127 0006 084B     		ldr	r3, .L79
 1128 0008 5868     		ldr	r0, [r3, #4]
 1129 000a FFF7FEFF 		bl	CyDelayCycles
 1130              	.LVL90:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1131              		.loc 1 3111 0
 1132 000e 074B     		ldr	r3, .L79+4
 1133 0010 9C46     		mov	ip, r3
 1134 0012 6444     		add	r4, r4, ip
 1135              	.LVL91:
 1136              	.L77:
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1137              		.loc 1 3105 0
 1138 0014 8023     		movs	r3, #128
 1139 0016 1B02     		lsls	r3, r3, #8
 1140 0018 9C42     		cmp	r4, r3
 1141 001a F4D8     		bhi	.L78
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1142              		.loc 1 3114 0
 1143 001c 024B     		ldr	r3, .L79
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 77


 1144 001e 9868     		ldr	r0, [r3, #8]
 1145 0020 6043     		muls	r0, r4
 1146 0022 FFF7FEFF 		bl	CyDelayCycles
 1147              	.LVL92:
3115:Generated_Source\PSoC4/CyLib.c **** }
 1148              		.loc 1 3115 0
 1149              		@ sp needed
 1150              	.LVL93:
 1151 0026 10BD     		pop	{r4, pc}
 1152              	.L80:
 1153              		.align	2
 1154              	.L79:
 1155 0028 00000000 		.word	.LANCHOR0
 1156 002c 0080FFFF 		.word	-32768
 1157              		.cfi_endproc
 1158              	.LFE24:
 1159              		.size	CyDelay, .-CyDelay
 1160              		.section	.text.CyDelayUs,"ax",%progbits
 1161              		.align	2
 1162              		.global	CyDelayUs
 1163              		.code	16
 1164              		.thumb_func
 1165              		.type	CyDelayUs, %function
 1166              	CyDelayUs:
 1167              	.LFB25:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 1168              		.loc 1 3127 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172              	.LVL94:
 1173 0000 10B5     		push	{r4, lr}
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 4, -8
 1176              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1177              		.loc 1 3128 0
 1178 0002 034B     		ldr	r3, .L82
 1179 0004 1B7B     		ldrb	r3, [r3, #12]
 1180 0006 5843     		muls	r0, r3
 1181              	.LVL95:
 1182 0008 FFF7FEFF 		bl	CyDelayCycles
 1183              	.LVL96:
3129:Generated_Source\PSoC4/CyLib.c **** }
 1184              		.loc 1 3129 0
 1185              		@ sp needed
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 78


 1186 000c 10BD     		pop	{r4, pc}
 1187              	.L83:
 1188 000e C046     		.align	2
 1189              	.L82:
 1190 0010 00000000 		.word	.LANCHOR0
 1191              		.cfi_endproc
 1192              	.LFE25:
 1193              		.size	CyDelayUs, .-CyDelayUs
 1194              		.global	__aeabi_uidiv
 1195              		.section	.text.CyDelayFreq,"ax",%progbits
 1196              		.align	2
 1197              		.global	CyDelayFreq
 1198              		.code	16
 1199              		.thumb_func
 1200              		.type	CyDelayFreq, %function
 1201              	CyDelayFreq:
 1202              	.LFB26:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 1203              		.loc 1 3141 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207              	.LVL97:
 1208 0000 70B5     		push	{r4, r5, r6, lr}
 1209              		.cfi_def_cfa_offset 16
 1210              		.cfi_offset 4, -16
 1211              		.cfi_offset 5, -12
 1212              		.cfi_offset 6, -8
 1213              		.cfi_offset 14, -4
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1214              		.loc 1 3142 0
 1215 0002 0028     		cmp	r0, #0
 1216 0004 02D0     		beq	.L85
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1217              		.loc 1 3144 0
 1218 0006 0C4B     		ldr	r3, .L87
 1219 0008 1861     		str	r0, [r3, #16]
 1220 000a 02E0     		b	.L86
 1221              	.L85:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1222              		.loc 1 3148 0
 1223 000c 0B4A     		ldr	r2, .L87+4
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 79


 1224 000e 0A4B     		ldr	r3, .L87
 1225 0010 1A61     		str	r2, [r3, #16]
 1226              	.L86:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1227              		.loc 1 3151 0
 1228 0012 094C     		ldr	r4, .L87
 1229 0014 2569     		ldr	r5, [r4, #16]
 1230 0016 0A4B     		ldr	r3, .L87+8
 1231 0018 E818     		adds	r0, r5, r3
 1232              	.LVL98:
 1233 001a 0A49     		ldr	r1, .L87+12
 1234 001c FFF7FEFF 		bl	__aeabi_uidiv
 1235              	.LVL99:
 1236 0020 2073     		strb	r0, [r4, #12]
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1237              		.loc 1 3152 0
 1238 0022 094B     		ldr	r3, .L87+16
 1239 0024 E818     		adds	r0, r5, r3
 1240 0026 FA21     		movs	r1, #250
 1241 0028 8900     		lsls	r1, r1, #2
 1242 002a FFF7FEFF 		bl	__aeabi_uidiv
 1243              	.LVL100:
 1244 002e A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1245              		.loc 1 3153 0
 1246 0030 C003     		lsls	r0, r0, #15
 1247 0032 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1248              		.loc 1 3154 0
 1249              		@ sp needed
 1250 0034 70BD     		pop	{r4, r5, r6, pc}
 1251              	.L88:
 1252 0036 C046     		.align	2
 1253              	.L87:
 1254 0038 00000000 		.word	.LANCHOR0
 1255 003c 006CDC02 		.word	48000000
 1256 0040 3F420F00 		.word	999999
 1257 0044 40420F00 		.word	1000000
 1258 0048 E7030000 		.word	999
 1259              		.cfi_endproc
 1260              	.LFE26:
 1261              		.size	CyDelayFreq, .-CyDelayFreq
 1262              		.section	.text.CySysTickStop,"ax",%progbits
 1263              		.align	2
 1264              		.global	CySysTickStop
 1265              		.code	16
 1266              		.thumb_func
 1267              		.type	CySysTickStop, %function
 1268              	CySysTickStop:
 1269              	.LFB30:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 80


3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 81


3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
 1270              		.loc 1 3249 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1275              		.loc 1 3250 0
 1276 0000 024A     		ldr	r2, .L90
 1277 0002 1368     		ldr	r3, [r2]
 1278 0004 0121     		movs	r1, #1
 1279 0006 8B43     		bics	r3, r1
 1280 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** }
 1281              		.loc 1 3251 0
 1282              		@ sp needed
 1283 000a 7047     		bx	lr
 1284              	.L91:
 1285              		.align	2
 1286              	.L90:
 1287 000c 10E000E0 		.word	-536813552
 1288              		.cfi_endproc
 1289              	.LFE30:
 1290              		.size	CySysTickStop, .-CySysTickStop
 1291              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 82


 1292              		.align	2
 1293              		.global	CySysTickEnableInterrupt
 1294              		.code	16
 1295              		.thumb_func
 1296              		.type	CySysTickEnableInterrupt, %function
 1297              	CySysTickEnableInterrupt:
 1298              	.LFB31:
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
 1299              		.loc 1 3265 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 0
 1302              		@ frame_needed = 0, uses_anonymous_args = 0
 1303              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1304              		.loc 1 3266 0
 1305 0000 024A     		ldr	r2, .L93
 1306 0002 1168     		ldr	r1, [r2]
 1307 0004 0223     		movs	r3, #2
 1308 0006 0B43     		orrs	r3, r1
 1309 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** }
 1310              		.loc 1 3267 0
 1311              		@ sp needed
 1312 000a 7047     		bx	lr
 1313              	.L94:
 1314              		.align	2
 1315              	.L93:
 1316 000c 10E000E0 		.word	-536813552
 1317              		.cfi_endproc
 1318              	.LFE31:
 1319              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1320              		.section	.text.CySysTickEnable,"ax",%progbits
 1321              		.align	2
 1322              		.global	CySysTickEnable
 1323              		.code	16
 1324              		.thumb_func
 1325              		.type	CySysTickEnable, %function
 1326              	CySysTickEnable:
 1327              	.LFB29:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1328              		.loc 1 3232 0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 0
 1331              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 83


 1332 0000 10B5     		push	{r4, lr}
 1333              		.cfi_def_cfa_offset 8
 1334              		.cfi_offset 4, -8
 1335              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1336              		.loc 1 3233 0
 1337 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1338              	.LVL101:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1339              		.loc 1 3234 0
 1340 0006 034A     		ldr	r2, .L96
 1341 0008 1168     		ldr	r1, [r2]
 1342 000a 0123     		movs	r3, #1
 1343 000c 0B43     		orrs	r3, r1
 1344 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1345              		.loc 1 3235 0
 1346              		@ sp needed
 1347 0010 10BD     		pop	{r4, pc}
 1348              	.L97:
 1349 0012 C046     		.align	2
 1350              	.L96:
 1351 0014 10E000E0 		.word	-536813552
 1352              		.cfi_endproc
 1353              	.LFE29:
 1354              		.size	CySysTickEnable, .-CySysTickEnable
 1355              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1356              		.align	2
 1357              		.global	CySysTickDisableInterrupt
 1358              		.code	16
 1359              		.thumb_func
 1360              		.type	CySysTickDisableInterrupt, %function
 1361              	CySysTickDisableInterrupt:
 1362              	.LFB32:
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
 1363              		.loc 1 3281 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1368              		.loc 1 3282 0
 1369 0000 024A     		ldr	r2, .L99
 1370 0002 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 84


 1371 0004 0221     		movs	r1, #2
 1372 0006 8B43     		bics	r3, r1
 1373 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** }
 1374              		.loc 1 3283 0
 1375              		@ sp needed
 1376 000a 7047     		bx	lr
 1377              	.L100:
 1378              		.align	2
 1379              	.L99:
 1380 000c 10E000E0 		.word	-536813552
 1381              		.cfi_endproc
 1382              	.LFE32:
 1383              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1384              		.section	.text.CySysTickSetReload,"ax",%progbits
 1385              		.align	2
 1386              		.global	CySysTickSetReload
 1387              		.code	16
 1388              		.thumb_func
 1389              		.type	CySysTickSetReload, %function
 1390              	CySysTickSetReload:
 1391              	.LFB33:
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
 1392              		.loc 1 3298 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 0
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 1396              		@ link register save eliminated.
 1397              	.LVL102:
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1398              		.loc 1 3299 0
 1399 0000 0002     		lsls	r0, r0, #8
 1400              	.LVL103:
 1401 0002 000A     		lsrs	r0, r0, #8
 1402 0004 014B     		ldr	r3, .L102
 1403 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** }
 1404              		.loc 1 3300 0
 1405              		@ sp needed
 1406 0008 7047     		bx	lr
 1407              	.L103:
 1408 000a C046     		.align	2
 1409              	.L102:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 85


 1410 000c 14E000E0 		.word	-536813548
 1411              		.cfi_endproc
 1412              	.LFE33:
 1413              		.size	CySysTickSetReload, .-CySysTickSetReload
 1414              		.section	.text.CySysTickGetReload,"ax",%progbits
 1415              		.align	2
 1416              		.global	CySysTickGetReload
 1417              		.code	16
 1418              		.thumb_func
 1419              		.type	CySysTickGetReload, %function
 1420              	CySysTickGetReload:
 1421              	.LFB34:
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
 1422              		.loc 1 3314 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 0
 1425              		@ frame_needed = 0, uses_anonymous_args = 0
 1426              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1427              		.loc 1 3315 0
 1428 0000 024B     		ldr	r3, .L105
 1429 0002 1868     		ldr	r0, [r3]
 1430 0004 0002     		lsls	r0, r0, #8
 1431 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** }
 1432              		.loc 1 3316 0
 1433              		@ sp needed
 1434 0008 7047     		bx	lr
 1435              	.L106:
 1436 000a C046     		.align	2
 1437              	.L105:
 1438 000c 14E000E0 		.word	-536813548
 1439              		.cfi_endproc
 1440              	.LFE34:
 1441              		.size	CySysTickGetReload, .-CySysTickGetReload
 1442              		.section	.text.CySysTickGetValue,"ax",%progbits
 1443              		.align	2
 1444              		.global	CySysTickGetValue
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	CySysTickGetValue, %function
 1448              	CySysTickGetValue:
 1449              	.LFB35:
3317:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 86


3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
 1450              		.loc 1 3330 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1455              		.loc 1 3331 0
 1456 0000 024B     		ldr	r3, .L108
 1457 0002 1868     		ldr	r0, [r3]
 1458 0004 0002     		lsls	r0, r0, #8
 1459 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** }
 1460              		.loc 1 3332 0
 1461              		@ sp needed
 1462 0008 7047     		bx	lr
 1463              	.L109:
 1464 000a C046     		.align	2
 1465              	.L108:
 1466 000c 18E000E0 		.word	-536813544
 1467              		.cfi_endproc
 1468              	.LFE35:
 1469              		.size	CySysTickGetValue, .-CySysTickGetValue
 1470              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1471              		.align	2
 1472              		.global	CySysTickSetClockSource
 1473              		.code	16
 1474              		.thumb_func
 1475              		.type	CySysTickSetClockSource, %function
 1476              	CySysTickSetClockSource:
 1477              	.LFB36:
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 87


3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
 1478              		.loc 1 3362 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
 1482              		@ link register save eliminated.
 1483              	.LVL104:
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1484              		.loc 1 3363 0
 1485 0000 0128     		cmp	r0, #1
 1486 0002 05D1     		bne	.L111
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1487              		.loc 1 3365 0
 1488 0004 054A     		ldr	r2, .L113
 1489 0006 1168     		ldr	r1, [r2]
 1490 0008 0423     		movs	r3, #4
 1491 000a 0B43     		orrs	r3, r1
 1492 000c 1360     		str	r3, [r2]
 1493 000e 04E0     		b	.L110
 1494              	.L111:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1495              		.loc 1 3369 0
 1496 0010 024A     		ldr	r2, .L113
 1497 0012 1368     		ldr	r3, [r2]
 1498 0014 0421     		movs	r1, #4
 1499 0016 8B43     		bics	r3, r1
 1500 0018 1360     		str	r3, [r2]
 1501              	.L110:
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
 1502              		.loc 1 3371 0
 1503              		@ sp needed
 1504 001a 7047     		bx	lr
 1505              	.L114:
 1506              		.align	2
 1507              	.L113:
 1508 001c 10E000E0 		.word	-536813552
 1509              		.cfi_endproc
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 88


 1510              	.LFE36:
 1511              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1512              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1513              		.align	2
 1514              		.global	CySysTickGetClockSource
 1515              		.code	16
 1516              		.thumb_func
 1517              		.type	CySysTickGetClockSource, %function
 1518              	CySysTickGetClockSource:
 1519              	.LFB37:
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
 1520              		.loc 1 3387 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1525              		.loc 1 3388 0
 1526 0000 024B     		ldr	r3, .L116
 1527 0002 1868     		ldr	r0, [r3]
 1528 0004 8008     		lsrs	r0, r0, #2
 1529 0006 0123     		movs	r3, #1
 1530 0008 1840     		ands	r0, r3
3389:Generated_Source\PSoC4/CyLib.c ****     }
 1531              		.loc 1 3389 0
 1532              		@ sp needed
 1533 000a 7047     		bx	lr
 1534              	.L117:
 1535              		.align	2
 1536              	.L116:
 1537 000c 10E000E0 		.word	-536813552
 1538              		.cfi_endproc
 1539              	.LFE37:
 1540              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1541              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1542              		.align	2
 1543              		.global	CySysTickGetCountFlag
 1544              		.code	16
 1545              		.thumb_func
 1546              		.type	CySysTickGetCountFlag, %function
 1547              	CySysTickGetCountFlag:
 1548              	.LFB38:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 89


3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
 1549              		.loc 1 3410 0
 1550              		.cfi_startproc
 1551              		@ args = 0, pretend = 0, frame = 0
 1552              		@ frame_needed = 0, uses_anonymous_args = 0
 1553              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1554              		.loc 1 3411 0
 1555 0000 024B     		ldr	r3, .L119
 1556 0002 1868     		ldr	r0, [r3]
 1557 0004 000C     		lsrs	r0, r0, #16
 1558 0006 0123     		movs	r3, #1
 1559 0008 1840     		ands	r0, r3
3412:Generated_Source\PSoC4/CyLib.c **** }
 1560              		.loc 1 3412 0
 1561              		@ sp needed
 1562 000a 7047     		bx	lr
 1563              	.L120:
 1564              		.align	2
 1565              	.L119:
 1566 000c 10E000E0 		.word	-536813552
 1567              		.cfi_endproc
 1568              	.LFE38:
 1569              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1570              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1571              		.align	2
 1572              		.code	16
 1573              		.thumb_func
 1574              		.type	CySysTickServiceCallbacks, %function
 1575              	CySysTickServiceCallbacks:
 1576              	.LFB42:
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 90


3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 91


3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 1577              		.loc 1 3495 0
 1578              		.cfi_startproc
 1579              		@ args = 0, pretend = 0, frame = 0
 1580              		@ frame_needed = 0, uses_anonymous_args = 0
 1581 0000 10B5     		push	{r4, lr}
 1582              		.cfi_def_cfa_offset 8
 1583              		.cfi_offset 4, -8
 1584              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1585              		.loc 1 3499 0
 1586 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1587              	.LVL105:
 1588 0006 0128     		cmp	r0, #1
 1589 0008 0BD1     		bne	.L121
 1590 000a 07E0     		b	.L126
 1591              	.LVL106:
 1592              	.L125:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1593              		.loc 1 3503 0
 1594 000c A300     		lsls	r3, r4, #2
 1595 000e 054A     		ldr	r2, .L127
 1596 0010 9B58     		ldr	r3, [r3, r2]
 1597 0012 002B     		cmp	r3, #0
 1598 0014 00D0     		beq	.L124
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1599              		.loc 1 3505 0
 1600 0016 9847     		blx	r3
 1601              	.LVL107:
 1602              	.L124:
3501:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 92


 1603              		.loc 1 3501 0 discriminator 2
 1604 0018 0134     		adds	r4, r4, #1
 1605              	.LVL108:
 1606 001a 00E0     		b	.L122
 1607              	.LVL109:
 1608              	.L126:
 1609 001c 0024     		movs	r4, #0
 1610              	.L122:
 1611              	.LVL110:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 1612              		.loc 1 3501 0 is_stmt 0 discriminator 1
 1613 001e 042C     		cmp	r4, #4
 1614 0020 F4D9     		bls	.L125
 1615              	.LVL111:
 1616              	.L121:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 1617              		.loc 1 3509 0 is_stmt 1
 1618              		@ sp needed
 1619 0022 10BD     		pop	{r4, pc}
 1620              	.L128:
 1621              		.align	2
 1622              	.L127:
 1623 0024 00000000 		.word	.LANCHOR1
 1624              		.cfi_endproc
 1625              	.LFE42:
 1626              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1627              		.section	.text.CySysTickClear,"ax",%progbits
 1628              		.align	2
 1629              		.global	CySysTickClear
 1630              		.code	16
 1631              		.thumb_func
 1632              		.type	CySysTickClear, %function
 1633              	CySysTickClear:
 1634              	.LFB39:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1635              		.loc 1 3423 0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 1640              		.loc 1 3424 0
 1641 0000 0022     		movs	r2, #0
 1642 0002 014B     		ldr	r3, .L130
 1643 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 1644              		.loc 1 3425 0
 1645              		@ sp needed
 1646 0006 7047     		bx	lr
 1647              	.L131:
 1648              		.align	2
 1649              	.L130:
 1650 0008 18E000E0 		.word	-536813544
 1651              		.cfi_endproc
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 93


 1652              	.LFE39:
 1653              		.size	CySysTickClear, .-CySysTickClear
 1654              		.section	.text.CySysTickInit,"ax",%progbits
 1655              		.align	2
 1656              		.global	CySysTickInit
 1657              		.code	16
 1658              		.thumb_func
 1659              		.type	CySysTickInit, %function
 1660              	CySysTickInit:
 1661              	.LFB28:
3202:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1662              		.loc 1 3202 0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 0
 1665              		@ frame_needed = 0, uses_anonymous_args = 0
 1666 0000 10B5     		push	{r4, lr}
 1667              		.cfi_def_cfa_offset 8
 1668              		.cfi_offset 4, -8
 1669              		.cfi_offset 14, -4
 1670              	.LVL112:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1671              		.loc 1 3205 0
 1672 0002 0023     		movs	r3, #0
 1673 0004 04E0     		b	.L133
 1674              	.LVL113:
 1675              	.L134:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1676              		.loc 1 3207 0 discriminator 3
 1677 0006 9900     		lsls	r1, r3, #2
 1678 0008 0020     		movs	r0, #0
 1679 000a 0B4A     		ldr	r2, .L135
 1680 000c 8850     		str	r0, [r1, r2]
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1681              		.loc 1 3205 0 discriminator 3
 1682 000e 0133     		adds	r3, r3, #1
 1683              	.LVL114:
 1684              	.L133:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1685              		.loc 1 3205 0 is_stmt 0 discriminator 1
 1686 0010 042B     		cmp	r3, #4
 1687 0012 F8D9     		bls	.L134
3210:Generated_Source\PSoC4/CyLib.c **** 
 1688              		.loc 1 3210 0 is_stmt 1
 1689 0014 0949     		ldr	r1, .L135+4
 1690 0016 0F20     		movs	r0, #15
 1691 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1692              	.LVL115:
3213:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1693              		.loc 1 3213 0
 1694 001c 0120     		movs	r0, #1
 1695 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1696              	.LVL116:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1697              		.loc 1 3216 0
 1698 0022 074B     		ldr	r3, .L135+8
 1699 0024 1869     		ldr	r0, [r3, #16]
 1700 0026 FA21     		movs	r1, #250
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 94


 1701 0028 8900     		lsls	r1, r1, #2
 1702 002a FFF7FEFF 		bl	__aeabi_uidiv
 1703              	.LVL117:
 1704 002e FFF7FEFF 		bl	CySysTickSetReload
 1705              	.LVL118:
3217:Generated_Source\PSoC4/CyLib.c **** }
 1706              		.loc 1 3217 0
 1707 0032 FFF7FEFF 		bl	CySysTickClear
 1708              	.LVL119:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1709              		.loc 1 3218 0
 1710              		@ sp needed
 1711 0036 10BD     		pop	{r4, pc}
 1712              	.L136:
 1713              		.align	2
 1714              	.L135:
 1715 0038 00000000 		.word	.LANCHOR1
 1716 003c 00000000 		.word	CySysTickServiceCallbacks
 1717 0040 00000000 		.word	.LANCHOR0
 1718              		.cfi_endproc
 1719              	.LFE28:
 1720              		.size	CySysTickInit, .-CySysTickInit
 1721              		.section	.text.CySysTickStart,"ax",%progbits
 1722              		.align	2
 1723              		.global	CySysTickStart
 1724              		.code	16
 1725              		.thumb_func
 1726              		.type	CySysTickStart, %function
 1727              	CySysTickStart:
 1728              	.LFB27:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1729              		.loc 1 3173 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733 0000 10B5     		push	{r4, lr}
 1734              		.cfi_def_cfa_offset 8
 1735              		.cfi_offset 4, -8
 1736              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 1737              		.loc 1 3174 0
 1738 0002 064B     		ldr	r3, .L139
 1739 0004 5B69     		ldr	r3, [r3, #20]
 1740 0006 002B     		cmp	r3, #0
 1741 0008 04D1     		bne	.L138
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1742              		.loc 1 3176 0
 1743 000a FFF7FEFF 		bl	CySysTickInit
 1744              	.LVL120:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 1745              		.loc 1 3177 0
 1746 000e 0122     		movs	r2, #1
 1747 0010 024B     		ldr	r3, .L139
 1748 0012 5A61     		str	r2, [r3, #20]
 1749              	.L138:
3180:Generated_Source\PSoC4/CyLib.c **** }
 1750              		.loc 1 3180 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 95


 1751 0014 FFF7FEFF 		bl	CySysTickEnable
 1752              	.LVL121:
3181:Generated_Source\PSoC4/CyLib.c **** 
 1753              		.loc 1 3181 0
 1754              		@ sp needed
 1755 0018 10BD     		pop	{r4, pc}
 1756              	.L140:
 1757 001a C046     		.align	2
 1758              	.L139:
 1759 001c 00000000 		.word	.LANCHOR1
 1760              		.cfi_endproc
 1761              	.LFE27:
 1762              		.size	CySysTickStart, .-CySysTickStart
 1763              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1764              		.align	2
 1765              		.global	CySysTickSetCallback
 1766              		.code	16
 1767              		.thumb_func
 1768              		.type	CySysTickSetCallback, %function
 1769              	CySysTickSetCallback:
 1770              	.LFB40:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1771              		.loc 1 3458 0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
 1776              	.LVL122:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1777              		.loc 1 3461 0
 1778 0000 024A     		ldr	r2, .L142
 1779 0002 8300     		lsls	r3, r0, #2
 1780 0004 9858     		ldr	r0, [r3, r2]
 1781              	.LVL123:
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1782              		.loc 1 3462 0
 1783 0006 9950     		str	r1, [r3, r2]
3464:Generated_Source\PSoC4/CyLib.c **** 
 1784              		.loc 1 3464 0
 1785              		@ sp needed
 1786 0008 7047     		bx	lr
 1787              	.L143:
 1788 000a C046     		.align	2
 1789              	.L142:
 1790 000c 00000000 		.word	.LANCHOR1
 1791              		.cfi_endproc
 1792              	.LFE40:
 1793              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1794              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1795              		.align	2
 1796              		.global	CySysTickGetCallback
 1797              		.code	16
 1798              		.thumb_func
 1799              		.type	CySysTickGetCallback, %function
 1800              	CySysTickGetCallback:
 1801              	.LFB41:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 96


 1802              		.loc 1 3482 0
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 0
 1805              		@ frame_needed = 0, uses_anonymous_args = 0
 1806              		@ link register save eliminated.
 1807              	.LVL124:
3483:Generated_Source\PSoC4/CyLib.c **** }
 1808              		.loc 1 3483 0
 1809 0000 8000     		lsls	r0, r0, #2
 1810              	.LVL125:
 1811 0002 014B     		ldr	r3, .L145
 1812 0004 C058     		ldr	r0, [r0, r3]
3484:Generated_Source\PSoC4/CyLib.c **** 
 1813              		.loc 1 3484 0
 1814              		@ sp needed
 1815 0006 7047     		bx	lr
 1816              	.L146:
 1817              		.align	2
 1818              	.L145:
 1819 0008 00000000 		.word	.LANCHOR1
 1820              		.cfi_endproc
 1821              	.LFE41:
 1822              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1823              		.section	.text.CyGetUniqueId,"ax",%progbits
 1824              		.align	2
 1825              		.global	CyGetUniqueId
 1826              		.code	16
 1827              		.thumb_func
 1828              		.type	CyGetUniqueId, %function
 1829              	CyGetUniqueId:
 1830              	.LFB43:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 1831              		.loc 1 3527 0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835              		@ link register save eliminated.
 1836              	.LVL126:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 97


 1837              		.loc 1 3529 0
 1838 0000 134B     		ldr	r3, .L148
 1839 0002 1B78     		ldrb	r3, [r3]
 1840 0004 DAB2     		uxtb	r2, r3
 1841 0006 0260     		str	r2, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1842              		.loc 1 3530 0
 1843 0008 124B     		ldr	r3, .L148+4
 1844 000a 1B78     		ldrb	r3, [r3]
 1845 000c 1B02     		lsls	r3, r3, #8
 1846 000e 1343     		orrs	r3, r2
 1847 0010 0360     		str	r3, [r0]
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1848              		.loc 1 3531 0
 1849 0012 114A     		ldr	r2, .L148+8
 1850 0014 1278     		ldrb	r2, [r2]
 1851 0016 1204     		lsls	r2, r2, #16
 1852 0018 1343     		orrs	r3, r2
 1853 001a 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1854              		.loc 1 3532 0
 1855 001c 0F4A     		ldr	r2, .L148+12
 1856 001e 1278     		ldrb	r2, [r2]
 1857 0020 1206     		lsls	r2, r2, #24
 1858 0022 1343     		orrs	r3, r2
 1859 0024 0360     		str	r3, [r0]
3533:Generated_Source\PSoC4/CyLib.c **** 
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1860              		.loc 1 3534 0
 1861 0026 0E4B     		ldr	r3, .L148+16
 1862 0028 1B78     		ldrb	r3, [r3]
 1863 002a DAB2     		uxtb	r2, r3
 1864 002c 4260     		str	r2, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1865              		.loc 1 3535 0
 1866 002e 0D4B     		ldr	r3, .L148+20
 1867 0030 1B78     		ldrb	r3, [r3]
 1868 0032 1B02     		lsls	r3, r3, #8
 1869 0034 1343     		orrs	r3, r2
 1870 0036 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1871              		.loc 1 3536 0
 1872 0038 0B4A     		ldr	r2, .L148+24
 1873 003a 1278     		ldrb	r2, [r2]
 1874 003c 1204     		lsls	r2, r2, #16
 1875 003e 1343     		orrs	r3, r2
 1876 0040 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1877              		.loc 1 3537 0
 1878 0042 0A4A     		ldr	r2, .L148+28
 1879 0044 1278     		ldrb	r2, [r2]
 1880 0046 1206     		lsls	r2, r2, #24
 1881 0048 1343     		orrs	r3, r2
 1882 004a 4360     		str	r3, [r0, #4]
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 98


3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 1883              		.loc 1 3549 0
 1884              		@ sp needed
 1885 004c 7047     		bx	lr
 1886              	.L149:
 1887 004e C046     		.align	2
 1888              	.L148:
 1889 0050 78F1FF0F 		.word	268431736
 1890 0054 79F1FF0F 		.word	268431737
 1891 0058 7AF1FF0F 		.word	268431738
 1892 005c 7BF1FF0F 		.word	268431739
 1893 0060 7CF1FF0F 		.word	268431740
 1894 0064 7DF1FF0F 		.word	268431741
 1895 0068 7EF1FF0F 		.word	268431742
 1896 006c 7FF1FF0F 		.word	268431743
 1897              		.cfi_endproc
 1898              	.LFE43:
 1899              		.size	CyGetUniqueId, .-CyGetUniqueId
 1900              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 1901              		.align	2
 1902              		.global	CySysSetRamAccessArbPriority
 1903              		.code	16
 1904              		.thumb_func
 1905              		.type	CySysSetRamAccessArbPriority, %function
 1906              	CySysSetRamAccessArbPriority:
 1907              	.LFB44:
3550:Generated_Source\PSoC4/CyLib.c **** 
3551:Generated_Source\PSoC4/CyLib.c **** 
3552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3553:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3554:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3555:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3556:Generated_Source\PSoC4/CyLib.c ****     *
3557:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3558:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3559:Generated_Source\PSoC4/CyLib.c ****     *  details.
3560:Generated_Source\PSoC4/CyLib.c ****     *
3561:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3562:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3563:Generated_Source\PSoC4/CyLib.c ****     *
3564:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3565:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3566:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3567:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3568:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3569:Generated_Source\PSoC4/CyLib.c ****     *
3570:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3571:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3572:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 99


 1908              		.loc 1 3572 0
 1909              		.cfi_startproc
 1910              		@ args = 0, pretend = 0, frame = 0
 1911              		@ frame_needed = 0, uses_anonymous_args = 0
 1912              		@ link register save eliminated.
 1913              	.LVL127:
3573:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3574:Generated_Source\PSoC4/CyLib.c **** 
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 1914              		.loc 1 3575 0
 1915 0000 0549     		ldr	r1, .L151
 1916 0002 0A68     		ldr	r2, [r1]
 1917 0004 054B     		ldr	r3, .L151+4
 1918 0006 1A40     		ands	r2, r3
 1919              	.LVL128:
3576:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 1920              		.loc 1 3576 0
 1921 0008 4004     		lsls	r0, r0, #17
 1922              	.LVL129:
 1923 000a C023     		movs	r3, #192
 1924 000c DB02     		lsls	r3, r3, #11
 1925 000e 1840     		ands	r0, r3
 1926 0010 1043     		orrs	r0, r2
 1927              	.LVL130:
3577:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 1928              		.loc 1 3577 0
 1929 0012 0860     		str	r0, [r1]
3578:Generated_Source\PSoC4/CyLib.c ****     }
 1930              		.loc 1 3578 0
 1931              		@ sp needed
 1932 0014 7047     		bx	lr
 1933              	.L152:
 1934 0016 C046     		.align	2
 1935              	.L151:
 1936 0018 38001040 		.word	1074790456
 1937 001c FFFFF9FF 		.word	-393217
 1938              		.cfi_endproc
 1939              	.LFE44:
 1940              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 1941              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 1942              		.align	2
 1943              		.global	CySysSetFlashAccessArbPriority
 1944              		.code	16
 1945              		.thumb_func
 1946              		.type	CySysSetFlashAccessArbPriority, %function
 1947              	CySysSetFlashAccessArbPriority:
 1948              	.LFB45:
3579:Generated_Source\PSoC4/CyLib.c **** 
3580:Generated_Source\PSoC4/CyLib.c **** 
3581:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3582:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3583:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3584:Generated_Source\PSoC4/CyLib.c ****     *
3585:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3586:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3587:Generated_Source\PSoC4/CyLib.c ****     *  details.
3588:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 100


3589:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3590:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3591:Generated_Source\PSoC4/CyLib.c ****     *
3592:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3593:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3594:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3595:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3596:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3597:Generated_Source\PSoC4/CyLib.c ****     *
3598:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3599:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3600:Generated_Source\PSoC4/CyLib.c ****     {
 1949              		.loc 1 3600 0
 1950              		.cfi_startproc
 1951              		@ args = 0, pretend = 0, frame = 0
 1952              		@ frame_needed = 0, uses_anonymous_args = 0
 1953              		@ link register save eliminated.
 1954              	.LVL131:
3601:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3602:Generated_Source\PSoC4/CyLib.c **** 
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 1955              		.loc 1 3603 0
 1956 0000 0549     		ldr	r1, .L154
 1957 0002 0A68     		ldr	r2, [r1]
 1958 0004 054B     		ldr	r3, .L154+4
 1959 0006 1A40     		ands	r2, r3
 1960              	.LVL132:
3604:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 1961              		.loc 1 3604 0
 1962 0008 4004     		lsls	r0, r0, #17
 1963              	.LVL133:
 1964 000a C023     		movs	r3, #192
 1965 000c DB02     		lsls	r3, r3, #11
 1966 000e 1840     		ands	r0, r3
 1967 0010 1043     		orrs	r0, r2
 1968              	.LVL134:
3605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 1969              		.loc 1 3605 0
 1970 0012 0860     		str	r0, [r1]
3606:Generated_Source\PSoC4/CyLib.c ****     }
 1971              		.loc 1 3606 0
 1972              		@ sp needed
 1973 0014 7047     		bx	lr
 1974              	.L155:
 1975 0016 C046     		.align	2
 1976              	.L154:
 1977 0018 30001040 		.word	1074790448
 1978 001c FFFFF9FF 		.word	-393217
 1979              		.cfi_endproc
 1980              	.LFE45:
 1981              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 1982              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 1983              		.align	2
 1984              		.global	CySysSetDmacAccessArbPriority
 1985              		.code	16
 1986              		.thumb_func
 1987              		.type	CySysSetDmacAccessArbPriority, %function
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 101


 1988              	CySysSetDmacAccessArbPriority:
 1989              	.LFB46:
3607:Generated_Source\PSoC4/CyLib.c **** 
3608:Generated_Source\PSoC4/CyLib.c **** 
3609:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3610:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3611:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3612:Generated_Source\PSoC4/CyLib.c ****     *
3613:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3614:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3615:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3616:Generated_Source\PSoC4/CyLib.c ****     *
3617:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3618:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3619:Generated_Source\PSoC4/CyLib.c ****     *
3620:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3621:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3622:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3623:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3624:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3625:Generated_Source\PSoC4/CyLib.c ****     *
3626:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3627:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3628:Generated_Source\PSoC4/CyLib.c ****     {
 1990              		.loc 1 3628 0
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 0
 1993              		@ frame_needed = 0, uses_anonymous_args = 0
 1994              		@ link register save eliminated.
 1995              	.LVL135:
3629:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3630:Generated_Source\PSoC4/CyLib.c **** 
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 1996              		.loc 1 3631 0
 1997 0000 0549     		ldr	r1, .L157
 1998 0002 0A68     		ldr	r2, [r1]
 1999 0004 054B     		ldr	r3, .L157+4
 2000 0006 1A40     		ands	r2, r3
 2001              	.LVL136:
3632:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2002              		.loc 1 3632 0
 2003 0008 4004     		lsls	r0, r0, #17
 2004              	.LVL137:
 2005 000a C023     		movs	r3, #192
 2006 000c DB02     		lsls	r3, r3, #11
 2007 000e 1840     		ands	r0, r3
 2008 0010 1043     		orrs	r0, r2
 2009              	.LVL138:
3633:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2010              		.loc 1 3633 0
 2011 0012 0860     		str	r0, [r1]
3634:Generated_Source\PSoC4/CyLib.c ****     }
 2012              		.loc 1 3634 0
 2013              		@ sp needed
 2014 0014 7047     		bx	lr
 2015              	.L158:
 2016 0016 C046     		.align	2
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 102


 2017              	.L157:
 2018 0018 3C001040 		.word	1074790460
 2019 001c FFFFF9FF 		.word	-393217
 2020              		.cfi_endproc
 2021              	.LFE46:
 2022              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2023              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2024              		.align	2
 2025              		.global	CySysSetPeripheralAccessArbPriority
 2026              		.code	16
 2027              		.thumb_func
 2028              		.type	CySysSetPeripheralAccessArbPriority, %function
 2029              	CySysSetPeripheralAccessArbPriority:
 2030              	.LFB47:
3635:Generated_Source\PSoC4/CyLib.c **** 
3636:Generated_Source\PSoC4/CyLib.c **** 
3637:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3638:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3639:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3640:Generated_Source\PSoC4/CyLib.c ****     *
3641:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3642:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3643:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3644:Generated_Source\PSoC4/CyLib.c ****     *
3645:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3646:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3647:Generated_Source\PSoC4/CyLib.c ****     *
3648:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3649:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3650:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3651:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3652:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3653:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3654:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3655:Generated_Source\PSoC4/CyLib.c ****     *
3656:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3657:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3658:Generated_Source\PSoC4/CyLib.c ****     {
 2031              		.loc 1 3658 0
 2032              		.cfi_startproc
 2033              		@ args = 0, pretend = 0, frame = 0
 2034              		@ frame_needed = 0, uses_anonymous_args = 0
 2035              	.LVL139:
 2036 0000 10B5     		push	{r4, lr}
 2037              		.cfi_def_cfa_offset 8
 2038              		.cfi_offset 4, -8
 2039              		.cfi_offset 14, -4
3659:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3660:Generated_Source\PSoC4/CyLib.c **** 
3661:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2040              		.loc 1 3661 0
 2041 0002 0028     		cmp	r0, #0
 2042 0004 0AD1     		bne	.L160
3662:Generated_Source\PSoC4/CyLib.c ****         {
3663:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2043              		.loc 1 3663 0
 2044 0006 0748     		ldr	r0, .L162
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 103


 2045              	.LVL140:
 2046 0008 0268     		ldr	r2, [r0]
 2047 000a 074B     		ldr	r3, .L162+4
 2048 000c 1A40     		ands	r2, r3
 2049              	.LVL141:
3664:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2050              		.loc 1 3664 0
 2051 000e 4904     		lsls	r1, r1, #17
 2052              	.LVL142:
 2053 0010 C023     		movs	r3, #192
 2054 0012 DB02     		lsls	r3, r3, #11
 2055 0014 1940     		ands	r1, r3
 2056 0016 1143     		orrs	r1, r2
 2057              	.LVL143:
3665:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2058              		.loc 1 3665 0
 2059 0018 0160     		str	r1, [r0]
 2060 001a 02E0     		b	.L159
 2061              	.LVL144:
 2062              	.L160:
3666:Generated_Source\PSoC4/CyLib.c ****         } else
3667:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3668:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
3669:Generated_Source\PSoC4/CyLib.c ****         {
3670:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3671:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3673:Generated_Source\PSoC4/CyLib.c ****         } else
3674:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3675:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3676:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3677:Generated_Source\PSoC4/CyLib.c ****         {
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3679:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3680:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3681:Generated_Source\PSoC4/CyLib.c ****         } else
3682:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3683:Generated_Source\PSoC4/CyLib.c ****         {
3684:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3685:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2063              		.loc 1 3685 0 discriminator 1
 2064 001c 0020     		movs	r0, #0
 2065              	.LVL145:
 2066 001e FFF7FEFF 		bl	CyHalt
 2067              	.LVL146:
 2068              	.L159:
3686:Generated_Source\PSoC4/CyLib.c ****         }
3687:Generated_Source\PSoC4/CyLib.c ****     }
 2069              		.loc 1 3687 0
 2070              		@ sp needed
 2071 0022 10BD     		pop	{r4, pc}
 2072              	.L163:
 2073              		.align	2
 2074              	.L162:
 2075 0024 00011040 		.word	1074790656
 2076 0028 FFFFF9FF 		.word	-393217
 2077              		.cfi_endproc
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 104


 2078              	.LFE47:
 2079              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2080              		.global	CySysClkPumpConfig
 2081              		.global	CySysTickInitVar
 2082              		.global	cydelay32kMs
 2083              		.global	cydelayFreqMhz
 2084              		.global	cydelayFreqKhz
 2085              		.global	cydelayFreqHz
 2086              		.data
 2087              		.align	2
 2088              		.set	.LANCHOR0,. + 0
 2089              		.type	CySysClkPumpConfig, %object
 2090              		.size	CySysClkPumpConfig, 4
 2091              	CySysClkPumpConfig:
 2092 0000 01000000 		.word	1
 2093              		.type	cydelay32kMs, %object
 2094              		.size	cydelay32kMs, 4
 2095              	cydelay32kMs:
 2096 0004 0000C05D 		.word	1572864000
 2097              		.type	cydelayFreqKhz, %object
 2098              		.size	cydelayFreqKhz, 4
 2099              	cydelayFreqKhz:
 2100 0008 80BB0000 		.word	48000
 2101              		.type	cydelayFreqMhz, %object
 2102              		.size	cydelayFreqMhz, 1
 2103              	cydelayFreqMhz:
 2104 000c 30       		.byte	48
 2105 000d 000000   		.space	3
 2106              		.type	cydelayFreqHz, %object
 2107              		.size	cydelayFreqHz, 4
 2108              	cydelayFreqHz:
 2109 0010 006CDC02 		.word	48000000
 2110              		.bss
 2111              		.align	2
 2112              		.set	.LANCHOR1,. + 0
 2113              		.type	CySysTickCallbacks, %object
 2114              		.size	CySysTickCallbacks, 20
 2115              	CySysTickCallbacks:
 2116 0000 00000000 		.space	20
 2116      00000000 
 2116      00000000 
 2116      00000000 
 2116      00000000 
 2117              		.type	CySysTickInitVar, %object
 2118              		.size	CySysTickInitVar, 4
 2119              	CySysTickInitVar:
 2120 0014 00000000 		.space	4
 2121              		.text
 2122              	.Letext0:
 2123              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2124              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2125              		.section	.debug_info,"",%progbits
 2126              	.Ldebug_info0:
 2127 0000 7B0B0000 		.4byte	0xb7b
 2128 0004 0400     		.2byte	0x4
 2129 0006 00000000 		.4byte	.Ldebug_abbrev0
 2130 000a 04       		.byte	0x4
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 105


 2131 000b 01       		.uleb128 0x1
 2132 000c 67000000 		.4byte	.LASF106
 2133 0010 0C       		.byte	0xc
 2134 0011 D2060000 		.4byte	.LASF107
 2135 0015 8A050000 		.4byte	.LASF108
 2136 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2137 001d 00000000 		.4byte	0
 2138 0021 00000000 		.4byte	.Ldebug_line0
 2139 0025 02       		.uleb128 0x2
 2140 0026 01       		.byte	0x1
 2141 0027 06       		.byte	0x6
 2142 0028 7F010000 		.4byte	.LASF0
 2143 002c 02       		.uleb128 0x2
 2144 002d 01       		.byte	0x1
 2145 002e 08       		.byte	0x8
 2146 002f 01050000 		.4byte	.LASF1
 2147 0033 02       		.uleb128 0x2
 2148 0034 02       		.byte	0x2
 2149 0035 05       		.byte	0x5
 2150 0036 0F050000 		.4byte	.LASF2
 2151 003a 02       		.uleb128 0x2
 2152 003b 02       		.byte	0x2
 2153 003c 07       		.byte	0x7
 2154 003d 11030000 		.4byte	.LASF3
 2155 0041 02       		.uleb128 0x2
 2156 0042 04       		.byte	0x4
 2157 0043 05       		.byte	0x5
 2158 0044 BE010000 		.4byte	.LASF4
 2159 0048 02       		.uleb128 0x2
 2160 0049 04       		.byte	0x4
 2161 004a 07       		.byte	0x7
 2162 004b B4020000 		.4byte	.LASF5
 2163 004f 02       		.uleb128 0x2
 2164 0050 08       		.byte	0x8
 2165 0051 05       		.byte	0x5
 2166 0052 71010000 		.4byte	.LASF6
 2167 0056 02       		.uleb128 0x2
 2168 0057 08       		.byte	0x8
 2169 0058 07       		.byte	0x7
 2170 0059 F5000000 		.4byte	.LASF7
 2171 005d 03       		.uleb128 0x3
 2172 005e 04       		.byte	0x4
 2173 005f 05       		.byte	0x5
 2174 0060 696E7400 		.ascii	"int\000"
 2175 0064 02       		.uleb128 0x2
 2176 0065 04       		.byte	0x4
 2177 0066 07       		.byte	0x7
 2178 0067 98020000 		.4byte	.LASF8
 2179 006b 04       		.uleb128 0x4
 2180 006c E9010000 		.4byte	.LASF9
 2181 0070 02       		.byte	0x2
 2182 0071 FB01     		.2byte	0x1fb
 2183 0073 2C000000 		.4byte	0x2c
 2184 0077 04       		.uleb128 0x4
 2185 0078 0F000000 		.4byte	.LASF10
 2186 007c 02       		.byte	0x2
 2187 007d FC01     		.2byte	0x1fc
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 106


 2188 007f 3A000000 		.4byte	0x3a
 2189 0083 04       		.uleb128 0x4
 2190 0084 12020000 		.4byte	.LASF11
 2191 0088 02       		.byte	0x2
 2192 0089 FD01     		.2byte	0x1fd
 2193 008b 48000000 		.4byte	0x48
 2194 008f 02       		.uleb128 0x2
 2195 0090 04       		.byte	0x4
 2196 0091 04       		.byte	0x4
 2197 0092 80040000 		.4byte	.LASF12
 2198 0096 02       		.uleb128 0x2
 2199 0097 08       		.byte	0x8
 2200 0098 04       		.byte	0x4
 2201 0099 05020000 		.4byte	.LASF13
 2202 009d 02       		.uleb128 0x2
 2203 009e 01       		.byte	0x1
 2204 009f 08       		.byte	0x8
 2205 00a0 52050000 		.4byte	.LASF14
 2206 00a4 04       		.uleb128 0x4
 2207 00a5 D8040000 		.4byte	.LASF15
 2208 00a9 02       		.byte	0x2
 2209 00aa A502     		.2byte	0x2a5
 2210 00ac B0000000 		.4byte	0xb0
 2211 00b0 05       		.uleb128 0x5
 2212 00b1 6B000000 		.4byte	0x6b
 2213 00b5 04       		.uleb128 0x4
 2214 00b6 BD030000 		.4byte	.LASF16
 2215 00ba 02       		.byte	0x2
 2216 00bb A702     		.2byte	0x2a7
 2217 00bd C1000000 		.4byte	0xc1
 2218 00c1 05       		.uleb128 0x5
 2219 00c2 83000000 		.4byte	0x83
 2220 00c6 04       		.uleb128 0x4
 2221 00c7 57050000 		.4byte	.LASF17
 2222 00cb 02       		.byte	0x2
 2223 00cc B702     		.2byte	0x2b7
 2224 00ce D2000000 		.4byte	0xd2
 2225 00d2 06       		.uleb128 0x6
 2226 00d3 04       		.byte	0x4
 2227 00d4 D8000000 		.4byte	0xd8
 2228 00d8 07       		.uleb128 0x7
 2229 00d9 02       		.uleb128 0x2
 2230 00da 08       		.byte	0x8
 2231 00db 04       		.byte	0x4
 2232 00dc 25040000 		.4byte	.LASF18
 2233 00e0 02       		.uleb128 0x2
 2234 00e1 04       		.byte	0x4
 2235 00e2 07       		.byte	0x7
 2236 00e3 E6030000 		.4byte	.LASF19
 2237 00e7 04       		.uleb128 0x4
 2238 00e8 9C040000 		.4byte	.LASF20
 2239 00ec 03       		.byte	0x3
 2240 00ed 0801     		.2byte	0x108
 2241 00ef D2000000 		.4byte	0xd2
 2242 00f3 08       		.uleb128 0x8
 2243 00f4 C1060000 		.4byte	.LASF21
 2244 00f8 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 107


 2245 00f9 69       		.byte	0x69
 2246 00fa 00000000 		.4byte	.LFB0
 2247 00fe 14000000 		.4byte	.LFE0-.LFB0
 2248 0102 01       		.uleb128 0x1
 2249 0103 9C       		.byte	0x9c
 2250 0104 08       		.uleb128 0x8
 2251 0105 C6020000 		.4byte	.LASF22
 2252 0109 01       		.byte	0x1
 2253 010a 8A       		.byte	0x8a
 2254 010b 00000000 		.4byte	.LFB1
 2255 010f 10000000 		.4byte	.LFE1-.LFB1
 2256 0113 01       		.uleb128 0x1
 2257 0114 9C       		.byte	0x9c
 2258 0115 09       		.uleb128 0x9
 2259 0116 1F000000 		.4byte	.LASF25
 2260 011a 01       		.byte	0x1
 2261 011b 4802     		.2byte	0x248
 2262 011d 00000000 		.4byte	.LFB2
 2263 0121 20000000 		.4byte	.LFE2-.LFB2
 2264 0125 01       		.uleb128 0x1
 2265 0126 9C       		.byte	0x9c
 2266 0127 6E010000 		.4byte	0x16e
 2267 012b 0A       		.uleb128 0xa
 2268 012c 37050000 		.4byte	.LASF27
 2269 0130 01       		.byte	0x1
 2270 0131 4802     		.2byte	0x248
 2271 0133 83000000 		.4byte	0x83
 2272 0137 00000000 		.4byte	.LLST0
 2273 013b 0B       		.uleb128 0xb
 2274 013c 9C010000 		.4byte	.LASF23
 2275 0140 01       		.byte	0x1
 2276 0141 4A02     		.2byte	0x24a
 2277 0143 6B000000 		.4byte	0x6b
 2278 0147 2C000000 		.4byte	.LLST1
 2279 014b 0B       		.uleb128 0xb
 2280 014c FE060000 		.4byte	.LASF24
 2281 0150 01       		.byte	0x1
 2282 0151 4B02     		.2byte	0x24b
 2283 0153 83000000 		.4byte	0x83
 2284 0157 3F000000 		.4byte	.LLST2
 2285 015b 0C       		.uleb128 0xc
 2286 015c 08000000 		.4byte	.LVL1
 2287 0160 5D0B0000 		.4byte	0xb5d
 2288 0164 0C       		.uleb128 0xc
 2289 0165 1A000000 		.4byte	.LVL5
 2290 0169 680B0000 		.4byte	0xb68
 2291 016d 00       		.byte	0
 2292 016e 09       		.uleb128 0x9
 2293 016f A8030000 		.4byte	.LASF26
 2294 0173 01       		.byte	0x1
 2295 0174 9502     		.2byte	0x295
 2296 0176 00000000 		.4byte	.LFB3
 2297 017a 34000000 		.4byte	.LFE3-.LFB3
 2298 017e 01       		.uleb128 0x1
 2299 017f 9C       		.byte	0x9c
 2300 0180 93010000 		.4byte	0x193
 2301 0184 0D       		.uleb128 0xd
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 108


 2302 0185 FE010000 		.4byte	.LASF28
 2303 0189 01       		.byte	0x1
 2304 018a 9502     		.2byte	0x295
 2305 018c 83000000 		.4byte	0x83
 2306 0190 01       		.uleb128 0x1
 2307 0191 50       		.byte	0x50
 2308 0192 00       		.byte	0
 2309 0193 0E       		.uleb128 0xe
 2310 0194 1E020000 		.4byte	.LASF33
 2311 0198 01       		.byte	0x1
 2312 0199 BA02     		.2byte	0x2ba
 2313 019b 83000000 		.4byte	0x83
 2314 019f 00000000 		.4byte	.LFB4
 2315 01a3 1C000000 		.4byte	.LFE4-.LFB4
 2316 01a7 01       		.uleb128 0x1
 2317 01a8 9C       		.byte	0x9c
 2318 01a9 E0010000 		.4byte	0x1e0
 2319 01ad 0B       		.uleb128 0xb
 2320 01ae 9C010000 		.4byte	.LASF23
 2321 01b2 01       		.byte	0x1
 2322 01b3 BC02     		.2byte	0x2bc
 2323 01b5 6B000000 		.4byte	0x6b
 2324 01b9 5D000000 		.4byte	.LLST3
 2325 01bd 0B       		.uleb128 0xb
 2326 01be 39040000 		.4byte	.LASF29
 2327 01c2 01       		.byte	0x1
 2328 01c3 BD02     		.2byte	0x2bd
 2329 01c5 83000000 		.4byte	0x83
 2330 01c9 70000000 		.4byte	.LLST4
 2331 01cd 0C       		.uleb128 0xc
 2332 01ce 06000000 		.4byte	.LVL8
 2333 01d2 5D0B0000 		.4byte	0xb5d
 2334 01d6 0C       		.uleb128 0xc
 2335 01d7 12000000 		.4byte	.LVL10
 2336 01db 680B0000 		.4byte	0xb68
 2337 01df 00       		.byte	0
 2338 01e0 09       		.uleb128 0x9
 2339 01e1 EE050000 		.4byte	.LASF30
 2340 01e5 01       		.byte	0x1
 2341 01e6 F702     		.2byte	0x2f7
 2342 01e8 00000000 		.4byte	.LFB5
 2343 01ec 24000000 		.4byte	.LFE5-.LFB5
 2344 01f0 01       		.uleb128 0x1
 2345 01f1 9C       		.byte	0x9c
 2346 01f2 29020000 		.4byte	0x229
 2347 01f6 0A       		.uleb128 0xa
 2348 01f7 B9060000 		.4byte	.LASF31
 2349 01fb 01       		.byte	0x1
 2350 01fc F702     		.2byte	0x2f7
 2351 01fe 83000000 		.4byte	0x83
 2352 0202 8E000000 		.4byte	.LLST5
 2353 0206 0B       		.uleb128 0xb
 2354 0207 9C010000 		.4byte	.LASF23
 2355 020b 01       		.byte	0x1
 2356 020c F902     		.2byte	0x2f9
 2357 020e 6B000000 		.4byte	0x6b
 2358 0212 BA000000 		.4byte	.LLST6
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 109


 2359 0216 0C       		.uleb128 0xc
 2360 0217 08000000 		.4byte	.LVL13
 2361 021b 5D0B0000 		.4byte	0xb5d
 2362 021f 0C       		.uleb128 0xc
 2363 0220 1E000000 		.4byte	.LVL15
 2364 0224 680B0000 		.4byte	0xb68
 2365 0228 00       		.byte	0
 2366 0229 09       		.uleb128 0x9
 2367 022a 74050000 		.4byte	.LASF32
 2368 022e 01       		.byte	0x1
 2369 022f 8304     		.2byte	0x483
 2370 0231 00000000 		.4byte	.LFB7
 2371 0235 24000000 		.4byte	.LFE7-.LFB7
 2372 0239 01       		.uleb128 0x1
 2373 023a 9C       		.byte	0x9c
 2374 023b 72020000 		.4byte	0x272
 2375 023f 0A       		.uleb128 0xa
 2376 0240 B9060000 		.4byte	.LASF31
 2377 0244 01       		.byte	0x1
 2378 0245 8304     		.2byte	0x483
 2379 0247 83000000 		.4byte	0x83
 2380 024b CD000000 		.4byte	.LLST7
 2381 024f 0B       		.uleb128 0xb
 2382 0250 9C010000 		.4byte	.LASF23
 2383 0254 01       		.byte	0x1
 2384 0255 8504     		.2byte	0x485
 2385 0257 6B000000 		.4byte	0x6b
 2386 025b F9000000 		.4byte	.LLST8
 2387 025f 0C       		.uleb128 0xc
 2388 0260 08000000 		.4byte	.LVL17
 2389 0264 5D0B0000 		.4byte	0xb5d
 2390 0268 0C       		.uleb128 0xc
 2391 0269 1E000000 		.4byte	.LVL19
 2392 026d 680B0000 		.4byte	0xb68
 2393 0271 00       		.byte	0
 2394 0272 0E       		.uleb128 0xe
 2395 0273 FD020000 		.4byte	.LASF34
 2396 0277 01       		.byte	0x1
 2397 0278 C00A     		.2byte	0xac0
 2398 027a 83000000 		.4byte	0x83
 2399 027e 00000000 		.4byte	.LFB8
 2400 0282 14000000 		.4byte	.LFE8-.LFB8
 2401 0286 01       		.uleb128 0x1
 2402 0287 9C       		.byte	0x9c
 2403 0288 AB020000 		.4byte	0x2ab
 2404 028c 0A       		.uleb128 0xa
 2405 028d 4B050000 		.4byte	.LASF35
 2406 0291 01       		.byte	0x1
 2407 0292 C00A     		.2byte	0xac0
 2408 0294 83000000 		.4byte	0x83
 2409 0298 0C010000 		.4byte	.LLST9
 2410 029c 0F       		.uleb128 0xf
 2411 029d D2030000 		.4byte	.LASF36
 2412 02a1 01       		.byte	0x1
 2413 02a2 C20A     		.2byte	0xac2
 2414 02a4 83000000 		.4byte	0x83
 2415 02a8 01       		.uleb128 0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 110


 2416 02a9 50       		.byte	0x50
 2417 02aa 00       		.byte	0
 2418 02ab 0E       		.uleb128 0xe
 2419 02ac 59000000 		.4byte	.LASF37
 2420 02b0 01       		.byte	0x1
 2421 02b1 D70A     		.2byte	0xad7
 2422 02b3 83000000 		.4byte	0x83
 2423 02b7 00000000 		.4byte	.LFB9
 2424 02bb 10000000 		.4byte	.LFE9-.LFB9
 2425 02bf 01       		.uleb128 0x1
 2426 02c0 9C       		.byte	0x9c
 2427 02c1 D4020000 		.4byte	0x2d4
 2428 02c5 0F       		.uleb128 0xf
 2429 02c6 16000000 		.4byte	.LASF38
 2430 02ca 01       		.byte	0x1
 2431 02cb D90A     		.2byte	0xad9
 2432 02cd 83000000 		.4byte	0x83
 2433 02d1 01       		.uleb128 0x1
 2434 02d2 50       		.byte	0x50
 2435 02d3 00       		.byte	0
 2436 02d4 09       		.uleb128 0x9
 2437 02d5 1D010000 		.4byte	.LASF39
 2438 02d9 01       		.byte	0x1
 2439 02da EE0A     		.2byte	0xaee
 2440 02dc 00000000 		.4byte	.LFB10
 2441 02e0 0C000000 		.4byte	.LFE10-.LFB10
 2442 02e4 01       		.uleb128 0x1
 2443 02e5 9C       		.byte	0x9c
 2444 02e6 F9020000 		.4byte	0x2f9
 2445 02ea 0D       		.uleb128 0xd
 2446 02eb 19020000 		.4byte	.LASF40
 2447 02ef 01       		.byte	0x1
 2448 02f0 EE0A     		.2byte	0xaee
 2449 02f2 83000000 		.4byte	0x83
 2450 02f6 01       		.uleb128 0x1
 2451 02f7 50       		.byte	0x50
 2452 02f8 00       		.byte	0
 2453 02f9 09       		.uleb128 0x9
 2454 02fa 19050000 		.4byte	.LASF41
 2455 02fe 01       		.byte	0x1
 2456 02ff A50B     		.2byte	0xba5
 2457 0301 00000000 		.4byte	.LFB17
 2458 0305 14000000 		.4byte	.LFE17-.LFB17
 2459 0309 01       		.uleb128 0x1
 2460 030a 9C       		.byte	0x9c
 2461 030b 20030000 		.4byte	0x320
 2462 030f 0A       		.uleb128 0xa
 2463 0310 52030000 		.4byte	.LASF42
 2464 0314 01       		.byte	0x1
 2465 0315 A50B     		.2byte	0xba5
 2466 0317 6B000000 		.4byte	0x6b
 2467 031b 2A010000 		.4byte	.LLST10
 2468 031f 00       		.byte	0
 2469 0320 0E       		.uleb128 0xe
 2470 0321 63010000 		.4byte	.LASF43
 2471 0325 01       		.byte	0x1
 2472 0326 B70B     		.2byte	0xbb7
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 111


 2473 0328 6B000000 		.4byte	0x6b
 2474 032c 00000000 		.4byte	.LFB18
 2475 0330 18000000 		.4byte	.LFE18-.LFB18
 2476 0334 01       		.uleb128 0x1
 2477 0335 9C       		.byte	0x9c
 2478 0336 4B030000 		.4byte	0x34b
 2479 033a 0A       		.uleb128 0xa
 2480 033b 52030000 		.4byte	.LASF42
 2481 033f 01       		.byte	0x1
 2482 0340 B70B     		.2byte	0xbb7
 2483 0342 6B000000 		.4byte	0x6b
 2484 0346 4B010000 		.4byte	.LLST11
 2485 034a 00       		.byte	0
 2486 034b 09       		.uleb128 0x9
 2487 034c C7010000 		.4byte	.LASF44
 2488 0350 01       		.byte	0x1
 2489 0351 C70B     		.2byte	0xbc7
 2490 0353 00000000 		.4byte	.LFB19
 2491 0357 14000000 		.4byte	.LFE19-.LFB19
 2492 035b 01       		.uleb128 0x1
 2493 035c 9C       		.byte	0x9c
 2494 035d 72030000 		.4byte	0x372
 2495 0361 0A       		.uleb128 0xa
 2496 0362 52030000 		.4byte	.LASF42
 2497 0366 01       		.byte	0x1
 2498 0367 C70B     		.2byte	0xbc7
 2499 0369 6B000000 		.4byte	0x6b
 2500 036d 6C010000 		.4byte	.LLST12
 2501 0371 00       		.byte	0
 2502 0372 09       		.uleb128 0x9
 2503 0373 ED020000 		.4byte	.LASF45
 2504 0377 01       		.byte	0x1
 2505 0378 D50B     		.2byte	0xbd5
 2506 037a 00000000 		.4byte	.LFB20
 2507 037e 14000000 		.4byte	.LFE20-.LFB20
 2508 0382 01       		.uleb128 0x1
 2509 0383 9C       		.byte	0x9c
 2510 0384 99030000 		.4byte	0x399
 2511 0388 0A       		.uleb128 0xa
 2512 0389 52030000 		.4byte	.LASF42
 2513 038d 01       		.byte	0x1
 2514 038e D50B     		.2byte	0xbd5
 2515 0390 6B000000 		.4byte	0x6b
 2516 0394 8D010000 		.4byte	.LLST13
 2517 0398 00       		.byte	0
 2518 0399 09       		.uleb128 0x9
 2519 039a 13040000 		.4byte	.LASF46
 2520 039e 01       		.byte	0x1
 2521 039f E40B     		.2byte	0xbe4
 2522 03a1 00000000 		.4byte	.LFB21
 2523 03a5 14000000 		.4byte	.LFE21-.LFB21
 2524 03a9 01       		.uleb128 0x1
 2525 03aa 9C       		.byte	0x9c
 2526 03ab C0030000 		.4byte	0x3c0
 2527 03af 0A       		.uleb128 0xa
 2528 03b0 52030000 		.4byte	.LASF42
 2529 03b4 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 112


 2530 03b5 E40B     		.2byte	0xbe4
 2531 03b7 6B000000 		.4byte	0x6b
 2532 03bb AE010000 		.4byte	.LLST14
 2533 03bf 00       		.byte	0
 2534 03c0 09       		.uleb128 0x9
 2535 03c1 DD040000 		.4byte	.LASF47
 2536 03c5 01       		.byte	0x1
 2537 03c6 F30B     		.2byte	0xbf3
 2538 03c8 00000000 		.4byte	.LFB22
 2539 03cc 04000000 		.4byte	.LFE22-.LFB22
 2540 03d0 01       		.uleb128 0x1
 2541 03d1 9C       		.byte	0x9c
 2542 03d2 E5030000 		.4byte	0x3e5
 2543 03d6 0D       		.uleb128 0xd
 2544 03d7 4B050000 		.4byte	.LASF35
 2545 03db 01       		.byte	0x1
 2546 03dc F30B     		.2byte	0xbf3
 2547 03de 6B000000 		.4byte	0x6b
 2548 03e2 01       		.uleb128 0x1
 2549 03e3 50       		.byte	0x50
 2550 03e4 00       		.byte	0
 2551 03e5 09       		.uleb128 0x9
 2552 03e6 62030000 		.4byte	.LASF48
 2553 03ea 01       		.byte	0x1
 2554 03eb EA03     		.2byte	0x3ea
 2555 03ed 00000000 		.4byte	.LFB6
 2556 03f1 BC000000 		.4byte	.LFE6-.LFB6
 2557 03f5 01       		.uleb128 0x1
 2558 03f6 9C       		.byte	0x9c
 2559 03f7 80040000 		.4byte	0x480
 2560 03fb 0A       		.uleb128 0xa
 2561 03fc 8B010000 		.4byte	.LASF49
 2562 0400 01       		.byte	0x1
 2563 0401 EA03     		.2byte	0x3ea
 2564 0403 83000000 		.4byte	0x83
 2565 0407 CF010000 		.4byte	.LLST15
 2566 040b 0B       		.uleb128 0xb
 2567 040c 9C010000 		.4byte	.LASF23
 2568 0410 01       		.byte	0x1
 2569 0411 EC03     		.2byte	0x3ec
 2570 0413 6B000000 		.4byte	0x6b
 2571 0417 1F020000 		.4byte	.LLST16
 2572 041b 0B       		.uleb128 0xb
 2573 041c 2D060000 		.4byte	.LASF50
 2574 0420 01       		.byte	0x1
 2575 0421 ED03     		.2byte	0x3ed
 2576 0423 6B000000 		.4byte	0x6b
 2577 0427 32020000 		.4byte	.LLST17
 2578 042b 0C       		.uleb128 0xc
 2579 042c 24000000 		.4byte	.LVL38
 2580 0430 5D0B0000 		.4byte	0xb5d
 2581 0434 10       		.uleb128 0x10
 2582 0435 60000000 		.4byte	.LVL43
 2583 0439 730B0000 		.4byte	0xb73
 2584 043d 48040000 		.4byte	0x448
 2585 0441 11       		.uleb128 0x11
 2586 0442 01       		.uleb128 0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 113


 2587 0443 50       		.byte	0x50
 2588 0444 02       		.uleb128 0x2
 2589 0445 08       		.byte	0x8
 2590 0446 32       		.byte	0x32
 2591 0447 00       		.byte	0
 2592 0448 10       		.uleb128 0x10
 2593 0449 80000000 		.4byte	.LVL44
 2594 044d 730B0000 		.4byte	0xb73
 2595 0451 5C040000 		.4byte	0x45c
 2596 0455 11       		.uleb128 0x11
 2597 0456 01       		.uleb128 0x1
 2598 0457 50       		.byte	0x50
 2599 0458 02       		.uleb128 0x2
 2600 0459 08       		.byte	0x8
 2601 045a 32       		.byte	0x32
 2602 045b 00       		.byte	0
 2603 045c 10       		.uleb128 0x10
 2604 045d 98000000 		.4byte	.LVL46
 2605 0461 680B0000 		.4byte	0xb68
 2606 0465 70040000 		.4byte	0x470
 2607 0469 11       		.uleb128 0x11
 2608 046a 01       		.uleb128 0x1
 2609 046b 50       		.byte	0x50
 2610 046c 02       		.uleb128 0x2
 2611 046d 75       		.byte	0x75
 2612 046e 00       		.sleb128 0
 2613 046f 00       		.byte	0
 2614 0470 12       		.uleb128 0x12
 2615 0471 A0000000 		.4byte	.LVL49
 2616 0475 C0030000 		.4byte	0x3c0
 2617 0479 11       		.uleb128 0x11
 2618 047a 01       		.uleb128 0x1
 2619 047b 50       		.byte	0x50
 2620 047c 01       		.uleb128 0x1
 2621 047d 30       		.byte	0x30
 2622 047e 00       		.byte	0
 2623 047f 00       		.byte	0
 2624 0480 0E       		.uleb128 0xe
 2625 0481 96030000 		.4byte	.LASF51
 2626 0485 01       		.byte	0x1
 2627 0486 070B     		.2byte	0xb07
 2628 0488 C6000000 		.4byte	0xc6
 2629 048c 00000000 		.4byte	.LFB11
 2630 0490 20000000 		.4byte	.LFE11-.LFB11
 2631 0494 01       		.uleb128 0x1
 2632 0495 9C       		.byte	0x9c
 2633 0496 E8040000 		.4byte	0x4e8
 2634 049a 0A       		.uleb128 0xa
 2635 049b 52030000 		.4byte	.LASF42
 2636 049f 01       		.byte	0x1
 2637 04a0 070B     		.2byte	0xb07
 2638 04a2 6B000000 		.4byte	0x6b
 2639 04a6 56020000 		.4byte	.LLST18
 2640 04aa 0A       		.uleb128 0xa
 2641 04ab 31040000 		.4byte	.LASF52
 2642 04af 01       		.byte	0x1
 2643 04b0 070B     		.2byte	0xb07
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 114


 2644 04b2 C6000000 		.4byte	0xc6
 2645 04b6 77020000 		.4byte	.LLST19
 2646 04ba 0F       		.uleb128 0xf
 2647 04bb 4B000000 		.4byte	.LASF53
 2648 04bf 01       		.byte	0x1
 2649 04c0 090B     		.2byte	0xb09
 2650 04c2 C6000000 		.4byte	0xc6
 2651 04c6 01       		.uleb128 0x1
 2652 04c7 50       		.byte	0x50
 2653 04c8 13       		.uleb128 0x13
 2654 04c9 00000000 		.4byte	.LASF54
 2655 04cd 01       		.byte	0x1
 2656 04ce 0A0B     		.2byte	0xb0a
 2657 04d0 E8040000 		.4byte	0x4e8
 2658 04d4 00000020 		.4byte	0x20000000
 2659 04d8 12       		.uleb128 0x12
 2660 04d9 10000000 		.4byte	.LVL53
 2661 04dd C0030000 		.4byte	0x3c0
 2662 04e1 11       		.uleb128 0x11
 2663 04e2 01       		.uleb128 0x1
 2664 04e3 50       		.byte	0x50
 2665 04e4 01       		.uleb128 0x1
 2666 04e5 30       		.byte	0x30
 2667 04e6 00       		.byte	0
 2668 04e7 00       		.byte	0
 2669 04e8 06       		.uleb128 0x6
 2670 04e9 04       		.byte	0x4
 2671 04ea C6000000 		.4byte	0xc6
 2672 04ee 0E       		.uleb128 0xe
 2673 04ef 25050000 		.4byte	.LASF55
 2674 04f3 01       		.byte	0x1
 2675 04f4 290B     		.2byte	0xb29
 2676 04f6 C6000000 		.4byte	0xc6
 2677 04fa 00000000 		.4byte	.LFB12
 2678 04fe 1C000000 		.4byte	.LFE12-.LFB12
 2679 0502 01       		.uleb128 0x1
 2680 0503 9C       		.byte	0x9c
 2681 0504 38050000 		.4byte	0x538
 2682 0508 0A       		.uleb128 0xa
 2683 0509 52030000 		.4byte	.LASF42
 2684 050d 01       		.byte	0x1
 2685 050e 290B     		.2byte	0xb29
 2686 0510 6B000000 		.4byte	0x6b
 2687 0514 A3020000 		.4byte	.LLST20
 2688 0518 13       		.uleb128 0x13
 2689 0519 00000000 		.4byte	.LASF54
 2690 051d 01       		.byte	0x1
 2691 051e 2B0B     		.2byte	0xb2b
 2692 0520 E8040000 		.4byte	0x4e8
 2693 0524 00000020 		.4byte	0x20000000
 2694 0528 12       		.uleb128 0x12
 2695 0529 0E000000 		.4byte	.LVL59
 2696 052d C0030000 		.4byte	0x3c0
 2697 0531 11       		.uleb128 0x11
 2698 0532 01       		.uleb128 0x1
 2699 0533 50       		.byte	0x50
 2700 0534 01       		.uleb128 0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 115


 2701 0535 30       		.byte	0x30
 2702 0536 00       		.byte	0
 2703 0537 00       		.byte	0
 2704 0538 0E       		.uleb128 0xe
 2705 0539 43030000 		.4byte	.LASF56
 2706 053d 01       		.byte	0x1
 2707 053e 3F0B     		.2byte	0xb3f
 2708 0540 C6000000 		.4byte	0xc6
 2709 0544 00000000 		.4byte	.LFB13
 2710 0548 22000000 		.4byte	.LFE13-.LFB13
 2711 054c 01       		.uleb128 0x1
 2712 054d 9C       		.byte	0x9c
 2713 054e A0050000 		.4byte	0x5a0
 2714 0552 0A       		.uleb128 0xa
 2715 0553 52030000 		.4byte	.LASF42
 2716 0557 01       		.byte	0x1
 2717 0558 3F0B     		.2byte	0xb3f
 2718 055a 6B000000 		.4byte	0x6b
 2719 055e C4020000 		.4byte	.LLST21
 2720 0562 0A       		.uleb128 0xa
 2721 0563 31040000 		.4byte	.LASF52
 2722 0567 01       		.byte	0x1
 2723 0568 3F0B     		.2byte	0xb3f
 2724 056a C6000000 		.4byte	0xc6
 2725 056e E5020000 		.4byte	.LLST22
 2726 0572 0F       		.uleb128 0xf
 2727 0573 4B000000 		.4byte	.LASF53
 2728 0577 01       		.byte	0x1
 2729 0578 410B     		.2byte	0xb41
 2730 057a C6000000 		.4byte	0xc6
 2731 057e 01       		.uleb128 0x1
 2732 057f 50       		.byte	0x50
 2733 0580 13       		.uleb128 0x13
 2734 0581 00000000 		.4byte	.LASF54
 2735 0585 01       		.byte	0x1
 2736 0586 420B     		.2byte	0xb42
 2737 0588 E8040000 		.4byte	0x4e8
 2738 058c 00000020 		.4byte	0x20000000
 2739 0590 12       		.uleb128 0x12
 2740 0591 10000000 		.4byte	.LVL63
 2741 0595 C0030000 		.4byte	0x3c0
 2742 0599 11       		.uleb128 0x11
 2743 059a 01       		.uleb128 0x1
 2744 059b 50       		.byte	0x50
 2745 059c 01       		.uleb128 0x1
 2746 059d 30       		.byte	0x30
 2747 059e 00       		.byte	0
 2748 059f 00       		.byte	0
 2749 05a0 0E       		.uleb128 0xe
 2750 05a1 AE040000 		.4byte	.LASF57
 2751 05a5 01       		.byte	0x1
 2752 05a6 5B0B     		.2byte	0xb5b
 2753 05a8 C6000000 		.4byte	0xc6
 2754 05ac 00000000 		.4byte	.LFB14
 2755 05b0 1E000000 		.4byte	.LFE14-.LFB14
 2756 05b4 01       		.uleb128 0x1
 2757 05b5 9C       		.byte	0x9c
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 116


 2758 05b6 EA050000 		.4byte	0x5ea
 2759 05ba 0A       		.uleb128 0xa
 2760 05bb 52030000 		.4byte	.LASF42
 2761 05bf 01       		.byte	0x1
 2762 05c0 5B0B     		.2byte	0xb5b
 2763 05c2 6B000000 		.4byte	0x6b
 2764 05c6 11030000 		.4byte	.LLST23
 2765 05ca 13       		.uleb128 0x13
 2766 05cb 00000000 		.4byte	.LASF54
 2767 05cf 01       		.byte	0x1
 2768 05d0 5D0B     		.2byte	0xb5d
 2769 05d2 E8040000 		.4byte	0x4e8
 2770 05d6 00000020 		.4byte	0x20000000
 2771 05da 12       		.uleb128 0x12
 2772 05db 0E000000 		.4byte	.LVL69
 2773 05df C0030000 		.4byte	0x3c0
 2774 05e3 11       		.uleb128 0x11
 2775 05e4 01       		.uleb128 0x1
 2776 05e5 50       		.byte	0x50
 2777 05e6 01       		.uleb128 0x1
 2778 05e7 30       		.byte	0x30
 2779 05e8 00       		.byte	0
 2780 05e9 00       		.byte	0
 2781 05ea 09       		.uleb128 0x9
 2782 05eb 6F040000 		.4byte	.LASF58
 2783 05ef 01       		.byte	0x1
 2784 05f0 6E0B     		.2byte	0xb6e
 2785 05f2 00000000 		.4byte	.LFB15
 2786 05f6 4C000000 		.4byte	.LFE15-.LFB15
 2787 05fa 01       		.uleb128 0x1
 2788 05fb 9C       		.byte	0x9c
 2789 05fc 89060000 		.4byte	0x689
 2790 0600 0A       		.uleb128 0xa
 2791 0601 52030000 		.4byte	.LASF42
 2792 0605 01       		.byte	0x1
 2793 0606 6E0B     		.2byte	0xb6e
 2794 0608 6B000000 		.4byte	0x6b
 2795 060c 32030000 		.4byte	.LLST24
 2796 0610 0A       		.uleb128 0xa
 2797 0611 59030000 		.4byte	.LASF59
 2798 0615 01       		.byte	0x1
 2799 0616 6E0B     		.2byte	0xb6e
 2800 0618 6B000000 		.4byte	0x6b
 2801 061c 53030000 		.4byte	.LLST25
 2802 0620 0B       		.uleb128 0xb
 2803 0621 9C010000 		.4byte	.LASF23
 2804 0625 01       		.byte	0x1
 2805 0626 700B     		.2byte	0xb70
 2806 0628 6B000000 		.4byte	0x6b
 2807 062c 74030000 		.4byte	.LLST26
 2808 0630 0B       		.uleb128 0xb
 2809 0631 0C020000 		.4byte	.LASF60
 2810 0635 01       		.byte	0x1
 2811 0636 710B     		.2byte	0xb71
 2812 0638 83000000 		.4byte	0x83
 2813 063c 87030000 		.4byte	.LLST27
 2814 0640 0B       		.uleb128 0xb
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 117


 2815 0641 62020000 		.4byte	.LASF61
 2816 0645 01       		.byte	0x1
 2817 0646 720B     		.2byte	0xb72
 2818 0648 83000000 		.4byte	0x83
 2819 064c 9A030000 		.4byte	.LLST28
 2820 0650 10       		.uleb128 0x10
 2821 0651 10000000 		.4byte	.LVL72
 2822 0655 C0030000 		.4byte	0x3c0
 2823 0659 63060000 		.4byte	0x663
 2824 065d 11       		.uleb128 0x11
 2825 065e 01       		.uleb128 0x1
 2826 065f 50       		.byte	0x50
 2827 0660 01       		.uleb128 0x1
 2828 0661 30       		.byte	0x30
 2829 0662 00       		.byte	0
 2830 0663 10       		.uleb128 0x10
 2831 0664 1A000000 		.4byte	.LVL73
 2832 0668 C0030000 		.4byte	0x3c0
 2833 066c 76060000 		.4byte	0x676
 2834 0670 11       		.uleb128 0x11
 2835 0671 01       		.uleb128 0x1
 2836 0672 50       		.byte	0x50
 2837 0673 01       		.uleb128 0x1
 2838 0674 30       		.byte	0x30
 2839 0675 00       		.byte	0
 2840 0676 0C       		.uleb128 0xc
 2841 0677 26000000 		.4byte	.LVL75
 2842 067b 5D0B0000 		.4byte	0xb5d
 2843 067f 0C       		.uleb128 0xc
 2844 0680 46000000 		.4byte	.LVL81
 2845 0684 680B0000 		.4byte	0xb68
 2846 0688 00       		.byte	0
 2847 0689 0E       		.uleb128 0xe
 2848 068a 36020000 		.4byte	.LASF62
 2849 068e 01       		.byte	0x1
 2850 068f 900B     		.2byte	0xb90
 2851 0691 6B000000 		.4byte	0x6b
 2852 0695 00000000 		.4byte	.LFB16
 2853 0699 2C000000 		.4byte	.LFE16-.LFB16
 2854 069d 01       		.uleb128 0x1
 2855 069e 9C       		.byte	0x9c
 2856 069f D3060000 		.4byte	0x6d3
 2857 06a3 0A       		.uleb128 0xa
 2858 06a4 52030000 		.4byte	.LASF42
 2859 06a8 01       		.byte	0x1
 2860 06a9 900B     		.2byte	0xb90
 2861 06ab 6B000000 		.4byte	0x6b
 2862 06af CE030000 		.4byte	.LLST29
 2863 06b3 0B       		.uleb128 0xb
 2864 06b4 59030000 		.4byte	.LASF59
 2865 06b8 01       		.byte	0x1
 2866 06b9 920B     		.2byte	0xb92
 2867 06bb 6B000000 		.4byte	0x6b
 2868 06bf EF030000 		.4byte	.LLST30
 2869 06c3 12       		.uleb128 0x12
 2870 06c4 0E000000 		.4byte	.LVL85
 2871 06c8 C0030000 		.4byte	0x3c0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 118


 2872 06cc 11       		.uleb128 0x11
 2873 06cd 01       		.uleb128 0x1
 2874 06ce 50       		.byte	0x50
 2875 06cf 01       		.uleb128 0x1
 2876 06d0 30       		.byte	0x30
 2877 06d1 00       		.byte	0
 2878 06d2 00       		.byte	0
 2879 06d3 14       		.uleb128 0x14
 2880 06d4 3A010000 		.4byte	.LASF63
 2881 06d8 01       		.byte	0x1
 2882 06d9 0B0C     		.2byte	0xc0b
 2883 06db 00000000 		.4byte	.LFB23
 2884 06df 18000000 		.4byte	.LFE23-.LFB23
 2885 06e3 01       		.uleb128 0x1
 2886 06e4 9C       		.byte	0x9c
 2887 06e5 09       		.uleb128 0x9
 2888 06e6 44060000 		.4byte	.LASF64
 2889 06ea 01       		.byte	0x1
 2890 06eb 1F0C     		.2byte	0xc1f
 2891 06ed 00000000 		.4byte	.LFB24
 2892 06f1 30000000 		.4byte	.LFE24-.LFB24
 2893 06f5 01       		.uleb128 0x1
 2894 06f6 9C       		.byte	0x9c
 2895 06f7 1E070000 		.4byte	0x71e
 2896 06fb 0A       		.uleb128 0xa
 2897 06fc BD040000 		.4byte	.LASF65
 2898 0700 01       		.byte	0x1
 2899 0701 1F0C     		.2byte	0xc1f
 2900 0703 83000000 		.4byte	0x83
 2901 0707 02040000 		.4byte	.LLST31
 2902 070b 0C       		.uleb128 0xc
 2903 070c 0E000000 		.4byte	.LVL90
 2904 0710 730B0000 		.4byte	0xb73
 2905 0714 0C       		.uleb128 0xc
 2906 0715 26000000 		.4byte	.LVL92
 2907 0719 730B0000 		.4byte	0xb73
 2908 071d 00       		.byte	0
 2909 071e 09       		.uleb128 0x9
 2910 071f 41050000 		.4byte	.LASF66
 2911 0723 01       		.byte	0x1
 2912 0724 360C     		.2byte	0xc36
 2913 0726 00000000 		.4byte	.LFB25
 2914 072a 14000000 		.4byte	.LFE25-.LFB25
 2915 072e 01       		.uleb128 0x1
 2916 072f 9C       		.byte	0x9c
 2917 0730 4E070000 		.4byte	0x74e
 2918 0734 0A       		.uleb128 0xa
 2919 0735 F1060000 		.4byte	.LASF67
 2920 0739 01       		.byte	0x1
 2921 073a 360C     		.2byte	0xc36
 2922 073c 77000000 		.4byte	0x77
 2923 0740 20040000 		.4byte	.LLST32
 2924 0744 0C       		.uleb128 0xc
 2925 0745 0C000000 		.4byte	.LVL96
 2926 0749 730B0000 		.4byte	0xb73
 2927 074d 00       		.byte	0
 2928 074e 15       		.uleb128 0x15
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 119


 2929 074f 90010000 		.4byte	.LASF68
 2930 0753 01       		.byte	0x1
 2931 0754 440C     		.2byte	0xc44
 2932 0756 00000000 		.4byte	.LFB26
 2933 075a 4C000000 		.4byte	.LFE26-.LFB26
 2934 075e 01       		.uleb128 0x1
 2935 075f 9C       		.byte	0x9c
 2936 0760 75070000 		.4byte	0x775
 2937 0764 0A       		.uleb128 0xa
 2938 0765 8B010000 		.4byte	.LASF49
 2939 0769 01       		.byte	0x1
 2940 076a 440C     		.2byte	0xc44
 2941 076c 83000000 		.4byte	0x83
 2942 0770 41040000 		.4byte	.LLST33
 2943 0774 00       		.byte	0
 2944 0775 14       		.uleb128 0x14
 2945 0776 AB060000 		.4byte	.LASF69
 2946 077a 01       		.byte	0x1
 2947 077b B00C     		.2byte	0xcb0
 2948 077d 00000000 		.4byte	.LFB30
 2949 0781 10000000 		.4byte	.LFE30-.LFB30
 2950 0785 01       		.uleb128 0x1
 2951 0786 9C       		.byte	0x9c
 2952 0787 14       		.uleb128 0x14
 2953 0788 4A010000 		.4byte	.LASF70
 2954 078c 01       		.byte	0x1
 2955 078d C00C     		.2byte	0xcc0
 2956 078f 00000000 		.4byte	.LFB31
 2957 0793 10000000 		.4byte	.LFE31-.LFB31
 2958 0797 01       		.uleb128 0x1
 2959 0798 9C       		.byte	0x9c
 2960 0799 09       		.uleb128 0x9
 2961 079a 64050000 		.4byte	.LASF71
 2962 079e 01       		.byte	0x1
 2963 079f 9F0C     		.2byte	0xc9f
 2964 07a1 00000000 		.4byte	.LFB29
 2965 07a5 18000000 		.4byte	.LFE29-.LFB29
 2966 07a9 01       		.uleb128 0x1
 2967 07aa 9C       		.byte	0x9c
 2968 07ab B9070000 		.4byte	0x7b9
 2969 07af 0C       		.uleb128 0xc
 2970 07b0 06000000 		.4byte	.LVL101
 2971 07b4 87070000 		.4byte	0x787
 2972 07b8 00       		.byte	0
 2973 07b9 14       		.uleb128 0x14
 2974 07ba 64060000 		.4byte	.LASF72
 2975 07be 01       		.byte	0x1
 2976 07bf D00C     		.2byte	0xcd0
 2977 07c1 00000000 		.4byte	.LFB32
 2978 07c5 10000000 		.4byte	.LFE32-.LFB32
 2979 07c9 01       		.uleb128 0x1
 2980 07ca 9C       		.byte	0x9c
 2981 07cb 09       		.uleb128 0x9
 2982 07cc 05070000 		.4byte	.LASF73
 2983 07d0 01       		.byte	0x1
 2984 07d1 E10C     		.2byte	0xce1
 2985 07d3 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 120


 2986 07d7 10000000 		.4byte	.LFE33-.LFB33
 2987 07db 01       		.uleb128 0x1
 2988 07dc 9C       		.byte	0x9c
 2989 07dd F2070000 		.4byte	0x7f2
 2990 07e1 0A       		.uleb128 0xa
 2991 07e2 62020000 		.4byte	.LASF61
 2992 07e6 01       		.byte	0x1
 2993 07e7 E10C     		.2byte	0xce1
 2994 07e9 83000000 		.4byte	0x83
 2995 07ed 62040000 		.4byte	.LLST34
 2996 07f1 00       		.byte	0
 2997 07f2 16       		.uleb128 0x16
 2998 07f3 AB010000 		.4byte	.LASF74
 2999 07f7 01       		.byte	0x1
 3000 07f8 F10C     		.2byte	0xcf1
 3001 07fa 83000000 		.4byte	0x83
 3002 07fe 00000000 		.4byte	.LFB34
 3003 0802 10000000 		.4byte	.LFE34-.LFB34
 3004 0806 01       		.uleb128 0x1
 3005 0807 9C       		.byte	0x9c
 3006 0808 16       		.uleb128 0x16
 3007 0809 4F040000 		.4byte	.LASF75
 3008 080d 01       		.byte	0x1
 3009 080e 010D     		.2byte	0xd01
 3010 0810 83000000 		.4byte	0x83
 3011 0814 00000000 		.4byte	.LFB35
 3012 0818 10000000 		.4byte	.LFE35-.LFB35
 3013 081c 01       		.uleb128 0x1
 3014 081d 9C       		.byte	0x9c
 3015 081e 09       		.uleb128 0x9
 3016 081f 2B030000 		.4byte	.LASF76
 3017 0823 01       		.byte	0x1
 3018 0824 210D     		.2byte	0xd21
 3019 0826 00000000 		.4byte	.LFB36
 3020 082a 20000000 		.4byte	.LFE36-.LFB36
 3021 082e 01       		.uleb128 0x1
 3022 082f 9C       		.byte	0x9c
 3023 0830 43080000 		.4byte	0x843
 3024 0834 0D       		.uleb128 0xd
 3025 0835 68020000 		.4byte	.LASF77
 3026 0839 01       		.byte	0x1
 3027 083a 210D     		.2byte	0xd21
 3028 083c 83000000 		.4byte	0x83
 3029 0840 01       		.uleb128 0x1
 3030 0841 50       		.byte	0x50
 3031 0842 00       		.byte	0
 3032 0843 16       		.uleb128 0x16
 3033 0844 4C060000 		.4byte	.LASF78
 3034 0848 01       		.byte	0x1
 3035 0849 3A0D     		.2byte	0xd3a
 3036 084b 83000000 		.4byte	0x83
 3037 084f 00000000 		.4byte	.LFB37
 3038 0853 10000000 		.4byte	.LFE37-.LFB37
 3039 0857 01       		.uleb128 0x1
 3040 0858 9C       		.byte	0x9c
 3041 0859 16       		.uleb128 0x16
 3042 085a 82020000 		.4byte	.LASF79
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 121


 3043 085e 01       		.byte	0x1
 3044 085f 510D     		.2byte	0xd51
 3045 0861 83000000 		.4byte	0x83
 3046 0865 00000000 		.4byte	.LFB38
 3047 0869 10000000 		.4byte	.LFE38-.LFB38
 3048 086d 01       		.uleb128 0x1
 3049 086e 9C       		.byte	0x9c
 3050 086f 17       		.uleb128 0x17
 3051 0870 18070000 		.4byte	.LASF109
 3052 0874 01       		.byte	0x1
 3053 0875 A60D     		.2byte	0xda6
 3054 0877 00000000 		.4byte	.LFB42
 3055 087b 28000000 		.4byte	.LFE42-.LFB42
 3056 087f 01       		.uleb128 0x1
 3057 0880 9C       		.byte	0x9c
 3058 0881 9D080000 		.4byte	0x89d
 3059 0885 18       		.uleb128 0x18
 3060 0886 6900     		.ascii	"i\000"
 3061 0888 01       		.byte	0x1
 3062 0889 A80D     		.2byte	0xda8
 3063 088b 83000000 		.4byte	0x83
 3064 088f 83040000 		.4byte	.LLST35
 3065 0893 0C       		.uleb128 0xc
 3066 0894 06000000 		.4byte	.LVL105
 3067 0898 59080000 		.4byte	0x859
 3068 089c 00       		.byte	0
 3069 089d 14       		.uleb128 0x14
 3070 089e A5020000 		.4byte	.LASF80
 3071 08a2 01       		.byte	0x1
 3072 08a3 5E0D     		.2byte	0xd5e
 3073 08a5 00000000 		.4byte	.LFB39
 3074 08a9 0C000000 		.4byte	.LFE39-.LFB39
 3075 08ad 01       		.uleb128 0x1
 3076 08ae 9C       		.byte	0x9c
 3077 08af 15       		.uleb128 0x15
 3078 08b0 54020000 		.4byte	.LASF81
 3079 08b4 01       		.byte	0x1
 3080 08b5 810C     		.2byte	0xc81
 3081 08b7 00000000 		.4byte	.LFB28
 3082 08bb 44000000 		.4byte	.LFE28-.LFB28
 3083 08bf 01       		.uleb128 0x1
 3084 08c0 9C       		.byte	0x9c
 3085 08c1 15090000 		.4byte	0x915
 3086 08c5 18       		.uleb128 0x18
 3087 08c6 6900     		.ascii	"i\000"
 3088 08c8 01       		.byte	0x1
 3089 08c9 830C     		.2byte	0xc83
 3090 08cb 83000000 		.4byte	0x83
 3091 08cf A1040000 		.4byte	.LLST36
 3092 08d3 10       		.uleb128 0x10
 3093 08d4 1C000000 		.4byte	.LVL115
 3094 08d8 80040000 		.4byte	0x480
 3095 08dc EF080000 		.4byte	0x8ef
 3096 08e0 11       		.uleb128 0x11
 3097 08e1 01       		.uleb128 0x1
 3098 08e2 50       		.byte	0x50
 3099 08e3 01       		.uleb128 0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 122


 3100 08e4 3F       		.byte	0x3f
 3101 08e5 11       		.uleb128 0x11
 3102 08e6 01       		.uleb128 0x1
 3103 08e7 51       		.byte	0x51
 3104 08e8 05       		.uleb128 0x5
 3105 08e9 03       		.byte	0x3
 3106 08ea 00000000 		.4byte	CySysTickServiceCallbacks
 3107 08ee 00       		.byte	0
 3108 08ef 10       		.uleb128 0x10
 3109 08f0 22000000 		.4byte	.LVL116
 3110 08f4 1E080000 		.4byte	0x81e
 3111 08f8 02090000 		.4byte	0x902
 3112 08fc 11       		.uleb128 0x11
 3113 08fd 01       		.uleb128 0x1
 3114 08fe 50       		.byte	0x50
 3115 08ff 01       		.uleb128 0x1
 3116 0900 31       		.byte	0x31
 3117 0901 00       		.byte	0
 3118 0902 0C       		.uleb128 0xc
 3119 0903 32000000 		.4byte	.LVL118
 3120 0907 CB070000 		.4byte	0x7cb
 3121 090b 0C       		.uleb128 0xc
 3122 090c 36000000 		.4byte	.LVL119
 3123 0910 9D080000 		.4byte	0x89d
 3124 0914 00       		.byte	0
 3125 0915 09       		.uleb128 0x9
 3126 0916 C3030000 		.4byte	.LASF82
 3127 091a 01       		.byte	0x1
 3128 091b 640C     		.2byte	0xc64
 3129 091d 00000000 		.4byte	.LFB27
 3130 0921 20000000 		.4byte	.LFE27-.LFB27
 3131 0925 01       		.uleb128 0x1
 3132 0926 9C       		.byte	0x9c
 3133 0927 3E090000 		.4byte	0x93e
 3134 092b 0C       		.uleb128 0xc
 3135 092c 0E000000 		.4byte	.LVL120
 3136 0930 AF080000 		.4byte	0x8af
 3137 0934 0C       		.uleb128 0xc
 3138 0935 18000000 		.4byte	.LVL121
 3139 0939 99070000 		.4byte	0x799
 3140 093d 00       		.byte	0
 3141 093e 0E       		.uleb128 0xe
 3142 093f 05060000 		.4byte	.LASF83
 3143 0943 01       		.byte	0x1
 3144 0944 810D     		.2byte	0xd81
 3145 0946 E7000000 		.4byte	0xe7
 3146 094a 00000000 		.4byte	.LFB40
 3147 094e 10000000 		.4byte	.LFE40-.LFB40
 3148 0952 01       		.uleb128 0x1
 3149 0953 9C       		.byte	0x9c
 3150 0954 85090000 		.4byte	0x985
 3151 0958 0A       		.uleb128 0xa
 3152 0959 52030000 		.4byte	.LASF42
 3153 095d 01       		.byte	0x1
 3154 095e 810D     		.2byte	0xd81
 3155 0960 83000000 		.4byte	0x83
 3156 0964 C0040000 		.4byte	.LLST37
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 123


 3157 0968 0D       		.uleb128 0xd
 3158 0969 46040000 		.4byte	.LASF84
 3159 096d 01       		.byte	0x1
 3160 096e 810D     		.2byte	0xd81
 3161 0970 E7000000 		.4byte	0xe7
 3162 0974 01       		.uleb128 0x1
 3163 0975 51       		.byte	0x51
 3164 0976 0F       		.uleb128 0xf
 3165 0977 52000000 		.4byte	.LASF85
 3166 097b 01       		.byte	0x1
 3167 097c 830D     		.2byte	0xd83
 3168 097e E7000000 		.4byte	0xe7
 3169 0982 01       		.uleb128 0x1
 3170 0983 50       		.byte	0x50
 3171 0984 00       		.byte	0
 3172 0985 0E       		.uleb128 0xe
 3173 0986 D4010000 		.4byte	.LASF86
 3174 098a 01       		.byte	0x1
 3175 098b 990D     		.2byte	0xd99
 3176 098d E7000000 		.4byte	0xe7
 3177 0991 00000000 		.4byte	.LFB41
 3178 0995 0C000000 		.4byte	.LFE41-.LFB41
 3179 0999 01       		.uleb128 0x1
 3180 099a 9C       		.byte	0x9c
 3181 099b B0090000 		.4byte	0x9b0
 3182 099f 0A       		.uleb128 0xa
 3183 09a0 52030000 		.4byte	.LASF42
 3184 09a4 01       		.byte	0x1
 3185 09a5 990D     		.2byte	0xd99
 3186 09a7 83000000 		.4byte	0x83
 3187 09ab E1040000 		.4byte	.LLST38
 3188 09af 00       		.byte	0
 3189 09b0 09       		.uleb128 0x9
 3190 09b1 74020000 		.4byte	.LASF87
 3191 09b5 01       		.byte	0x1
 3192 09b6 C60D     		.2byte	0xdc6
 3193 09b8 00000000 		.4byte	.LFB43
 3194 09bc 70000000 		.4byte	.LFE43-.LFB43
 3195 09c0 01       		.uleb128 0x1
 3196 09c1 9C       		.byte	0x9c
 3197 09c2 D5090000 		.4byte	0x9d5
 3198 09c6 0D       		.uleb128 0xd
 3199 09c7 3B060000 		.4byte	.LASF88
 3200 09cb 01       		.byte	0x1
 3201 09cc C60D     		.2byte	0xdc6
 3202 09ce D5090000 		.4byte	0x9d5
 3203 09d2 01       		.uleb128 0x1
 3204 09d3 50       		.byte	0x50
 3205 09d4 00       		.byte	0
 3206 09d5 06       		.uleb128 0x6
 3207 09d6 04       		.byte	0x4
 3208 09d7 83000000 		.4byte	0x83
 3209 09db 09       		.uleb128 0x9
 3210 09dc E4040000 		.4byte	.LASF89
 3211 09e0 01       		.byte	0x1
 3212 09e1 F30D     		.2byte	0xdf3
 3213 09e3 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 124


 3214 09e7 20000000 		.4byte	.LFE44-.LFB44
 3215 09eb 01       		.uleb128 0x1
 3216 09ec 9C       		.byte	0x9c
 3217 09ed 120A0000 		.4byte	0xa12
 3218 09f1 0A       		.uleb128 0xa
 3219 09f2 DF030000 		.4byte	.LASF90
 3220 09f6 01       		.byte	0x1
 3221 09f7 F30D     		.2byte	0xdf3
 3222 09f9 83000000 		.4byte	0x83
 3223 09fd 02050000 		.4byte	.LLST39
 3224 0a01 0B       		.uleb128 0xb
 3225 0a02 24030000 		.4byte	.LASF91
 3226 0a06 01       		.byte	0x1
 3227 0a07 F50D     		.2byte	0xdf5
 3228 0a09 83000000 		.4byte	0x83
 3229 0a0d 23050000 		.4byte	.LLST40
 3230 0a11 00       		.byte	0
 3231 0a12 09       		.uleb128 0x9
 3232 0a13 77030000 		.4byte	.LASF92
 3233 0a17 01       		.byte	0x1
 3234 0a18 0F0E     		.2byte	0xe0f
 3235 0a1a 00000000 		.4byte	.LFB45
 3236 0a1e 20000000 		.4byte	.LFE45-.LFB45
 3237 0a22 01       		.uleb128 0x1
 3238 0a23 9C       		.byte	0x9c
 3239 0a24 490A0000 		.4byte	0xa49
 3240 0a28 0A       		.uleb128 0xa
 3241 0a29 DF030000 		.4byte	.LASF90
 3242 0a2d 01       		.byte	0x1
 3243 0a2e 0F0E     		.2byte	0xe0f
 3244 0a30 83000000 		.4byte	0x83
 3245 0a34 41050000 		.4byte	.LLST41
 3246 0a38 0B       		.uleb128 0xb
 3247 0a39 24030000 		.4byte	.LASF91
 3248 0a3d 01       		.byte	0x1
 3249 0a3e 110E     		.2byte	0xe11
 3250 0a40 83000000 		.4byte	0x83
 3251 0a44 62050000 		.4byte	.LLST42
 3252 0a48 00       		.byte	0
 3253 0a49 09       		.uleb128 0x9
 3254 0a4a 8D060000 		.4byte	.LASF93
 3255 0a4e 01       		.byte	0x1
 3256 0a4f 2B0E     		.2byte	0xe2b
 3257 0a51 00000000 		.4byte	.LFB46
 3258 0a55 20000000 		.4byte	.LFE46-.LFB46
 3259 0a59 01       		.uleb128 0x1
 3260 0a5a 9C       		.byte	0x9c
 3261 0a5b 800A0000 		.4byte	0xa80
 3262 0a5f 0A       		.uleb128 0xa
 3263 0a60 DF030000 		.4byte	.LASF90
 3264 0a64 01       		.byte	0x1
 3265 0a65 2B0E     		.2byte	0xe2b
 3266 0a67 83000000 		.4byte	0x83
 3267 0a6b 80050000 		.4byte	.LLST43
 3268 0a6f 0B       		.uleb128 0xb
 3269 0a70 24030000 		.4byte	.LASF91
 3270 0a74 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 125


 3271 0a75 2D0E     		.2byte	0xe2d
 3272 0a77 83000000 		.4byte	0x83
 3273 0a7b A1050000 		.4byte	.LLST44
 3274 0a7f 00       		.byte	0
 3275 0a80 09       		.uleb128 0x9
 3276 0a81 EF030000 		.4byte	.LASF94
 3277 0a85 01       		.byte	0x1
 3278 0a86 490E     		.2byte	0xe49
 3279 0a88 00000000 		.4byte	.LFB47
 3280 0a8c 2C000000 		.4byte	.LFE47-.LFB47
 3281 0a90 01       		.uleb128 0x1
 3282 0a91 9C       		.byte	0x9c
 3283 0a92 D60A0000 		.4byte	0xad6
 3284 0a96 0A       		.uleb128 0xa
 3285 0a97 2A010000 		.4byte	.LASF95
 3286 0a9b 01       		.byte	0x1
 3287 0a9c 490E     		.2byte	0xe49
 3288 0a9e 83000000 		.4byte	0x83
 3289 0aa2 BF050000 		.4byte	.LLST45
 3290 0aa6 0A       		.uleb128 0xa
 3291 0aa7 DF030000 		.4byte	.LASF90
 3292 0aab 01       		.byte	0x1
 3293 0aac 490E     		.2byte	0xe49
 3294 0aae 83000000 		.4byte	0x83
 3295 0ab2 F9050000 		.4byte	.LLST46
 3296 0ab6 0B       		.uleb128 0xb
 3297 0ab7 24030000 		.4byte	.LASF91
 3298 0abb 01       		.byte	0x1
 3299 0abc 4B0E     		.2byte	0xe4b
 3300 0abe 83000000 		.4byte	0x83
 3301 0ac2 33060000 		.4byte	.LLST47
 3302 0ac6 12       		.uleb128 0x12
 3303 0ac7 22000000 		.4byte	.LVL146
 3304 0acb C0030000 		.4byte	0x3c0
 3305 0acf 11       		.uleb128 0x11
 3306 0ad0 01       		.uleb128 0x1
 3307 0ad1 50       		.byte	0x50
 3308 0ad2 01       		.uleb128 0x1
 3309 0ad3 30       		.byte	0x30
 3310 0ad4 00       		.byte	0
 3311 0ad5 00       		.byte	0
 3312 0ad6 19       		.uleb128 0x19
 3313 0ad7 E7000000 		.4byte	0xe7
 3314 0adb E60A0000 		.4byte	0xae6
 3315 0adf 1A       		.uleb128 0x1a
 3316 0ae0 E0000000 		.4byte	0xe0
 3317 0ae4 04       		.byte	0x4
 3318 0ae5 00       		.byte	0
 3319 0ae6 1B       		.uleb128 0x1b
 3320 0ae7 1A060000 		.4byte	.LASF96
 3321 0aeb 01       		.byte	0x1
 3322 0aec 22       		.byte	0x22
 3323 0aed D60A0000 		.4byte	0xad6
 3324 0af1 05       		.uleb128 0x5
 3325 0af2 03       		.byte	0x3
 3326 0af3 00000000 		.4byte	CySysTickCallbacks
 3327 0af7 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 126


 3328 0af8 61040000 		.4byte	.LASF97
 3329 0afc 01       		.byte	0x1
 3330 0afd 1B       		.byte	0x1b
 3331 0afe 83000000 		.4byte	0x83
 3332 0b02 05       		.uleb128 0x5
 3333 0b03 03       		.byte	0x3
 3334 0b04 00000000 		.4byte	cydelayFreqHz
 3335 0b08 1C       		.uleb128 0x1c
 3336 0b09 EF010000 		.4byte	.LASF98
 3337 0b0d 01       		.byte	0x1
 3338 0b0e 1C       		.byte	0x1c
 3339 0b0f 83000000 		.4byte	0x83
 3340 0b13 05       		.uleb128 0x5
 3341 0b14 03       		.byte	0x3
 3342 0b15 00000000 		.4byte	cydelayFreqKhz
 3343 0b19 1C       		.uleb128 0x1c
 3344 0b1a 7E060000 		.4byte	.LASF99
 3345 0b1e 01       		.byte	0x1
 3346 0b1f 1D       		.byte	0x1d
 3347 0b20 6B000000 		.4byte	0x6b
 3348 0b24 05       		.uleb128 0x5
 3349 0b25 03       		.byte	0x3
 3350 0b26 00000000 		.4byte	cydelayFreqMhz
 3351 0b2a 1C       		.uleb128 0x1c
 3352 0b2b 47020000 		.4byte	.LASF100
 3353 0b2f 01       		.byte	0x1
 3354 0b30 1E       		.byte	0x1e
 3355 0b31 83000000 		.4byte	0x83
 3356 0b35 05       		.uleb128 0x5
 3357 0b36 03       		.byte	0x3
 3358 0b37 00000000 		.4byte	cydelay32kMs
 3359 0b3b 1C       		.uleb128 0x1c
 3360 0b3c 0C010000 		.4byte	.LASF101
 3361 0b40 01       		.byte	0x1
 3362 0b41 36       		.byte	0x36
 3363 0b42 83000000 		.4byte	0x83
 3364 0b46 05       		.uleb128 0x5
 3365 0b47 03       		.byte	0x3
 3366 0b48 00000000 		.4byte	CySysTickInitVar
 3367 0b4c 1C       		.uleb128 0x1c
 3368 0b4d 38000000 		.4byte	.LASF102
 3369 0b51 01       		.byte	0x1
 3370 0b52 58       		.byte	0x58
 3371 0b53 83000000 		.4byte	0x83
 3372 0b57 05       		.uleb128 0x5
 3373 0b58 03       		.byte	0x3
 3374 0b59 00000000 		.4byte	CySysClkPumpConfig
 3375 0b5d 1D       		.uleb128 0x1d
 3376 0b5e D6020000 		.4byte	.LASF103
 3377 0b62 D6020000 		.4byte	.LASF103
 3378 0b66 03       		.byte	0x3
 3379 0b67 F8       		.byte	0xf8
 3380 0b68 1D       		.uleb128 0x1d
 3381 0b69 86040000 		.4byte	.LASF104
 3382 0b6d 86040000 		.4byte	.LASF104
 3383 0b71 03       		.byte	0x3
 3384 0b72 F9       		.byte	0xf9
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 127


 3385 0b73 1D       		.uleb128 0x1d
 3386 0b74 CA040000 		.4byte	.LASF105
 3387 0b78 CA040000 		.4byte	.LASF105
 3388 0b7c 03       		.byte	0x3
 3389 0b7d EF       		.byte	0xef
 3390 0b7e 00       		.byte	0
 3391              		.section	.debug_abbrev,"",%progbits
 3392              	.Ldebug_abbrev0:
 3393 0000 01       		.uleb128 0x1
 3394 0001 11       		.uleb128 0x11
 3395 0002 01       		.byte	0x1
 3396 0003 25       		.uleb128 0x25
 3397 0004 0E       		.uleb128 0xe
 3398 0005 13       		.uleb128 0x13
 3399 0006 0B       		.uleb128 0xb
 3400 0007 03       		.uleb128 0x3
 3401 0008 0E       		.uleb128 0xe
 3402 0009 1B       		.uleb128 0x1b
 3403 000a 0E       		.uleb128 0xe
 3404 000b 55       		.uleb128 0x55
 3405 000c 17       		.uleb128 0x17
 3406 000d 11       		.uleb128 0x11
 3407 000e 01       		.uleb128 0x1
 3408 000f 10       		.uleb128 0x10
 3409 0010 17       		.uleb128 0x17
 3410 0011 00       		.byte	0
 3411 0012 00       		.byte	0
 3412 0013 02       		.uleb128 0x2
 3413 0014 24       		.uleb128 0x24
 3414 0015 00       		.byte	0
 3415 0016 0B       		.uleb128 0xb
 3416 0017 0B       		.uleb128 0xb
 3417 0018 3E       		.uleb128 0x3e
 3418 0019 0B       		.uleb128 0xb
 3419 001a 03       		.uleb128 0x3
 3420 001b 0E       		.uleb128 0xe
 3421 001c 00       		.byte	0
 3422 001d 00       		.byte	0
 3423 001e 03       		.uleb128 0x3
 3424 001f 24       		.uleb128 0x24
 3425 0020 00       		.byte	0
 3426 0021 0B       		.uleb128 0xb
 3427 0022 0B       		.uleb128 0xb
 3428 0023 3E       		.uleb128 0x3e
 3429 0024 0B       		.uleb128 0xb
 3430 0025 03       		.uleb128 0x3
 3431 0026 08       		.uleb128 0x8
 3432 0027 00       		.byte	0
 3433 0028 00       		.byte	0
 3434 0029 04       		.uleb128 0x4
 3435 002a 16       		.uleb128 0x16
 3436 002b 00       		.byte	0
 3437 002c 03       		.uleb128 0x3
 3438 002d 0E       		.uleb128 0xe
 3439 002e 3A       		.uleb128 0x3a
 3440 002f 0B       		.uleb128 0xb
 3441 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 128


 3442 0031 05       		.uleb128 0x5
 3443 0032 49       		.uleb128 0x49
 3444 0033 13       		.uleb128 0x13
 3445 0034 00       		.byte	0
 3446 0035 00       		.byte	0
 3447 0036 05       		.uleb128 0x5
 3448 0037 35       		.uleb128 0x35
 3449 0038 00       		.byte	0
 3450 0039 49       		.uleb128 0x49
 3451 003a 13       		.uleb128 0x13
 3452 003b 00       		.byte	0
 3453 003c 00       		.byte	0
 3454 003d 06       		.uleb128 0x6
 3455 003e 0F       		.uleb128 0xf
 3456 003f 00       		.byte	0
 3457 0040 0B       		.uleb128 0xb
 3458 0041 0B       		.uleb128 0xb
 3459 0042 49       		.uleb128 0x49
 3460 0043 13       		.uleb128 0x13
 3461 0044 00       		.byte	0
 3462 0045 00       		.byte	0
 3463 0046 07       		.uleb128 0x7
 3464 0047 15       		.uleb128 0x15
 3465 0048 00       		.byte	0
 3466 0049 27       		.uleb128 0x27
 3467 004a 19       		.uleb128 0x19
 3468 004b 00       		.byte	0
 3469 004c 00       		.byte	0
 3470 004d 08       		.uleb128 0x8
 3471 004e 2E       		.uleb128 0x2e
 3472 004f 00       		.byte	0
 3473 0050 3F       		.uleb128 0x3f
 3474 0051 19       		.uleb128 0x19
 3475 0052 03       		.uleb128 0x3
 3476 0053 0E       		.uleb128 0xe
 3477 0054 3A       		.uleb128 0x3a
 3478 0055 0B       		.uleb128 0xb
 3479 0056 3B       		.uleb128 0x3b
 3480 0057 0B       		.uleb128 0xb
 3481 0058 27       		.uleb128 0x27
 3482 0059 19       		.uleb128 0x19
 3483 005a 11       		.uleb128 0x11
 3484 005b 01       		.uleb128 0x1
 3485 005c 12       		.uleb128 0x12
 3486 005d 06       		.uleb128 0x6
 3487 005e 40       		.uleb128 0x40
 3488 005f 18       		.uleb128 0x18
 3489 0060 9742     		.uleb128 0x2117
 3490 0062 19       		.uleb128 0x19
 3491 0063 00       		.byte	0
 3492 0064 00       		.byte	0
 3493 0065 09       		.uleb128 0x9
 3494 0066 2E       		.uleb128 0x2e
 3495 0067 01       		.byte	0x1
 3496 0068 3F       		.uleb128 0x3f
 3497 0069 19       		.uleb128 0x19
 3498 006a 03       		.uleb128 0x3
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 129


 3499 006b 0E       		.uleb128 0xe
 3500 006c 3A       		.uleb128 0x3a
 3501 006d 0B       		.uleb128 0xb
 3502 006e 3B       		.uleb128 0x3b
 3503 006f 05       		.uleb128 0x5
 3504 0070 27       		.uleb128 0x27
 3505 0071 19       		.uleb128 0x19
 3506 0072 11       		.uleb128 0x11
 3507 0073 01       		.uleb128 0x1
 3508 0074 12       		.uleb128 0x12
 3509 0075 06       		.uleb128 0x6
 3510 0076 40       		.uleb128 0x40
 3511 0077 18       		.uleb128 0x18
 3512 0078 9742     		.uleb128 0x2117
 3513 007a 19       		.uleb128 0x19
 3514 007b 01       		.uleb128 0x1
 3515 007c 13       		.uleb128 0x13
 3516 007d 00       		.byte	0
 3517 007e 00       		.byte	0
 3518 007f 0A       		.uleb128 0xa
 3519 0080 05       		.uleb128 0x5
 3520 0081 00       		.byte	0
 3521 0082 03       		.uleb128 0x3
 3522 0083 0E       		.uleb128 0xe
 3523 0084 3A       		.uleb128 0x3a
 3524 0085 0B       		.uleb128 0xb
 3525 0086 3B       		.uleb128 0x3b
 3526 0087 05       		.uleb128 0x5
 3527 0088 49       		.uleb128 0x49
 3528 0089 13       		.uleb128 0x13
 3529 008a 02       		.uleb128 0x2
 3530 008b 17       		.uleb128 0x17
 3531 008c 00       		.byte	0
 3532 008d 00       		.byte	0
 3533 008e 0B       		.uleb128 0xb
 3534 008f 34       		.uleb128 0x34
 3535 0090 00       		.byte	0
 3536 0091 03       		.uleb128 0x3
 3537 0092 0E       		.uleb128 0xe
 3538 0093 3A       		.uleb128 0x3a
 3539 0094 0B       		.uleb128 0xb
 3540 0095 3B       		.uleb128 0x3b
 3541 0096 05       		.uleb128 0x5
 3542 0097 49       		.uleb128 0x49
 3543 0098 13       		.uleb128 0x13
 3544 0099 02       		.uleb128 0x2
 3545 009a 17       		.uleb128 0x17
 3546 009b 00       		.byte	0
 3547 009c 00       		.byte	0
 3548 009d 0C       		.uleb128 0xc
 3549 009e 898201   		.uleb128 0x4109
 3550 00a1 00       		.byte	0
 3551 00a2 11       		.uleb128 0x11
 3552 00a3 01       		.uleb128 0x1
 3553 00a4 31       		.uleb128 0x31
 3554 00a5 13       		.uleb128 0x13
 3555 00a6 00       		.byte	0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 130


 3556 00a7 00       		.byte	0
 3557 00a8 0D       		.uleb128 0xd
 3558 00a9 05       		.uleb128 0x5
 3559 00aa 00       		.byte	0
 3560 00ab 03       		.uleb128 0x3
 3561 00ac 0E       		.uleb128 0xe
 3562 00ad 3A       		.uleb128 0x3a
 3563 00ae 0B       		.uleb128 0xb
 3564 00af 3B       		.uleb128 0x3b
 3565 00b0 05       		.uleb128 0x5
 3566 00b1 49       		.uleb128 0x49
 3567 00b2 13       		.uleb128 0x13
 3568 00b3 02       		.uleb128 0x2
 3569 00b4 18       		.uleb128 0x18
 3570 00b5 00       		.byte	0
 3571 00b6 00       		.byte	0
 3572 00b7 0E       		.uleb128 0xe
 3573 00b8 2E       		.uleb128 0x2e
 3574 00b9 01       		.byte	0x1
 3575 00ba 3F       		.uleb128 0x3f
 3576 00bb 19       		.uleb128 0x19
 3577 00bc 03       		.uleb128 0x3
 3578 00bd 0E       		.uleb128 0xe
 3579 00be 3A       		.uleb128 0x3a
 3580 00bf 0B       		.uleb128 0xb
 3581 00c0 3B       		.uleb128 0x3b
 3582 00c1 05       		.uleb128 0x5
 3583 00c2 27       		.uleb128 0x27
 3584 00c3 19       		.uleb128 0x19
 3585 00c4 49       		.uleb128 0x49
 3586 00c5 13       		.uleb128 0x13
 3587 00c6 11       		.uleb128 0x11
 3588 00c7 01       		.uleb128 0x1
 3589 00c8 12       		.uleb128 0x12
 3590 00c9 06       		.uleb128 0x6
 3591 00ca 40       		.uleb128 0x40
 3592 00cb 18       		.uleb128 0x18
 3593 00cc 9742     		.uleb128 0x2117
 3594 00ce 19       		.uleb128 0x19
 3595 00cf 01       		.uleb128 0x1
 3596 00d0 13       		.uleb128 0x13
 3597 00d1 00       		.byte	0
 3598 00d2 00       		.byte	0
 3599 00d3 0F       		.uleb128 0xf
 3600 00d4 34       		.uleb128 0x34
 3601 00d5 00       		.byte	0
 3602 00d6 03       		.uleb128 0x3
 3603 00d7 0E       		.uleb128 0xe
 3604 00d8 3A       		.uleb128 0x3a
 3605 00d9 0B       		.uleb128 0xb
 3606 00da 3B       		.uleb128 0x3b
 3607 00db 05       		.uleb128 0x5
 3608 00dc 49       		.uleb128 0x49
 3609 00dd 13       		.uleb128 0x13
 3610 00de 02       		.uleb128 0x2
 3611 00df 18       		.uleb128 0x18
 3612 00e0 00       		.byte	0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 131


 3613 00e1 00       		.byte	0
 3614 00e2 10       		.uleb128 0x10
 3615 00e3 898201   		.uleb128 0x4109
 3616 00e6 01       		.byte	0x1
 3617 00e7 11       		.uleb128 0x11
 3618 00e8 01       		.uleb128 0x1
 3619 00e9 31       		.uleb128 0x31
 3620 00ea 13       		.uleb128 0x13
 3621 00eb 01       		.uleb128 0x1
 3622 00ec 13       		.uleb128 0x13
 3623 00ed 00       		.byte	0
 3624 00ee 00       		.byte	0
 3625 00ef 11       		.uleb128 0x11
 3626 00f0 8A8201   		.uleb128 0x410a
 3627 00f3 00       		.byte	0
 3628 00f4 02       		.uleb128 0x2
 3629 00f5 18       		.uleb128 0x18
 3630 00f6 9142     		.uleb128 0x2111
 3631 00f8 18       		.uleb128 0x18
 3632 00f9 00       		.byte	0
 3633 00fa 00       		.byte	0
 3634 00fb 12       		.uleb128 0x12
 3635 00fc 898201   		.uleb128 0x4109
 3636 00ff 01       		.byte	0x1
 3637 0100 11       		.uleb128 0x11
 3638 0101 01       		.uleb128 0x1
 3639 0102 31       		.uleb128 0x31
 3640 0103 13       		.uleb128 0x13
 3641 0104 00       		.byte	0
 3642 0105 00       		.byte	0
 3643 0106 13       		.uleb128 0x13
 3644 0107 34       		.uleb128 0x34
 3645 0108 00       		.byte	0
 3646 0109 03       		.uleb128 0x3
 3647 010a 0E       		.uleb128 0xe
 3648 010b 3A       		.uleb128 0x3a
 3649 010c 0B       		.uleb128 0xb
 3650 010d 3B       		.uleb128 0x3b
 3651 010e 05       		.uleb128 0x5
 3652 010f 49       		.uleb128 0x49
 3653 0110 13       		.uleb128 0x13
 3654 0111 1C       		.uleb128 0x1c
 3655 0112 06       		.uleb128 0x6
 3656 0113 00       		.byte	0
 3657 0114 00       		.byte	0
 3658 0115 14       		.uleb128 0x14
 3659 0116 2E       		.uleb128 0x2e
 3660 0117 00       		.byte	0
 3661 0118 3F       		.uleb128 0x3f
 3662 0119 19       		.uleb128 0x19
 3663 011a 03       		.uleb128 0x3
 3664 011b 0E       		.uleb128 0xe
 3665 011c 3A       		.uleb128 0x3a
 3666 011d 0B       		.uleb128 0xb
 3667 011e 3B       		.uleb128 0x3b
 3668 011f 05       		.uleb128 0x5
 3669 0120 27       		.uleb128 0x27
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 132


 3670 0121 19       		.uleb128 0x19
 3671 0122 11       		.uleb128 0x11
 3672 0123 01       		.uleb128 0x1
 3673 0124 12       		.uleb128 0x12
 3674 0125 06       		.uleb128 0x6
 3675 0126 40       		.uleb128 0x40
 3676 0127 18       		.uleb128 0x18
 3677 0128 9742     		.uleb128 0x2117
 3678 012a 19       		.uleb128 0x19
 3679 012b 00       		.byte	0
 3680 012c 00       		.byte	0
 3681 012d 15       		.uleb128 0x15
 3682 012e 2E       		.uleb128 0x2e
 3683 012f 01       		.byte	0x1
 3684 0130 3F       		.uleb128 0x3f
 3685 0131 19       		.uleb128 0x19
 3686 0132 03       		.uleb128 0x3
 3687 0133 0E       		.uleb128 0xe
 3688 0134 3A       		.uleb128 0x3a
 3689 0135 0B       		.uleb128 0xb
 3690 0136 3B       		.uleb128 0x3b
 3691 0137 05       		.uleb128 0x5
 3692 0138 27       		.uleb128 0x27
 3693 0139 19       		.uleb128 0x19
 3694 013a 11       		.uleb128 0x11
 3695 013b 01       		.uleb128 0x1
 3696 013c 12       		.uleb128 0x12
 3697 013d 06       		.uleb128 0x6
 3698 013e 40       		.uleb128 0x40
 3699 013f 18       		.uleb128 0x18
 3700 0140 9642     		.uleb128 0x2116
 3701 0142 19       		.uleb128 0x19
 3702 0143 01       		.uleb128 0x1
 3703 0144 13       		.uleb128 0x13
 3704 0145 00       		.byte	0
 3705 0146 00       		.byte	0
 3706 0147 16       		.uleb128 0x16
 3707 0148 2E       		.uleb128 0x2e
 3708 0149 00       		.byte	0
 3709 014a 3F       		.uleb128 0x3f
 3710 014b 19       		.uleb128 0x19
 3711 014c 03       		.uleb128 0x3
 3712 014d 0E       		.uleb128 0xe
 3713 014e 3A       		.uleb128 0x3a
 3714 014f 0B       		.uleb128 0xb
 3715 0150 3B       		.uleb128 0x3b
 3716 0151 05       		.uleb128 0x5
 3717 0152 27       		.uleb128 0x27
 3718 0153 19       		.uleb128 0x19
 3719 0154 49       		.uleb128 0x49
 3720 0155 13       		.uleb128 0x13
 3721 0156 11       		.uleb128 0x11
 3722 0157 01       		.uleb128 0x1
 3723 0158 12       		.uleb128 0x12
 3724 0159 06       		.uleb128 0x6
 3725 015a 40       		.uleb128 0x40
 3726 015b 18       		.uleb128 0x18
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 133


 3727 015c 9742     		.uleb128 0x2117
 3728 015e 19       		.uleb128 0x19
 3729 015f 00       		.byte	0
 3730 0160 00       		.byte	0
 3731 0161 17       		.uleb128 0x17
 3732 0162 2E       		.uleb128 0x2e
 3733 0163 01       		.byte	0x1
 3734 0164 03       		.uleb128 0x3
 3735 0165 0E       		.uleb128 0xe
 3736 0166 3A       		.uleb128 0x3a
 3737 0167 0B       		.uleb128 0xb
 3738 0168 3B       		.uleb128 0x3b
 3739 0169 05       		.uleb128 0x5
 3740 016a 27       		.uleb128 0x27
 3741 016b 19       		.uleb128 0x19
 3742 016c 11       		.uleb128 0x11
 3743 016d 01       		.uleb128 0x1
 3744 016e 12       		.uleb128 0x12
 3745 016f 06       		.uleb128 0x6
 3746 0170 40       		.uleb128 0x40
 3747 0171 18       		.uleb128 0x18
 3748 0172 9642     		.uleb128 0x2116
 3749 0174 19       		.uleb128 0x19
 3750 0175 01       		.uleb128 0x1
 3751 0176 13       		.uleb128 0x13
 3752 0177 00       		.byte	0
 3753 0178 00       		.byte	0
 3754 0179 18       		.uleb128 0x18
 3755 017a 34       		.uleb128 0x34
 3756 017b 00       		.byte	0
 3757 017c 03       		.uleb128 0x3
 3758 017d 08       		.uleb128 0x8
 3759 017e 3A       		.uleb128 0x3a
 3760 017f 0B       		.uleb128 0xb
 3761 0180 3B       		.uleb128 0x3b
 3762 0181 05       		.uleb128 0x5
 3763 0182 49       		.uleb128 0x49
 3764 0183 13       		.uleb128 0x13
 3765 0184 02       		.uleb128 0x2
 3766 0185 17       		.uleb128 0x17
 3767 0186 00       		.byte	0
 3768 0187 00       		.byte	0
 3769 0188 19       		.uleb128 0x19
 3770 0189 01       		.uleb128 0x1
 3771 018a 01       		.byte	0x1
 3772 018b 49       		.uleb128 0x49
 3773 018c 13       		.uleb128 0x13
 3774 018d 01       		.uleb128 0x1
 3775 018e 13       		.uleb128 0x13
 3776 018f 00       		.byte	0
 3777 0190 00       		.byte	0
 3778 0191 1A       		.uleb128 0x1a
 3779 0192 21       		.uleb128 0x21
 3780 0193 00       		.byte	0
 3781 0194 49       		.uleb128 0x49
 3782 0195 13       		.uleb128 0x13
 3783 0196 2F       		.uleb128 0x2f
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 134


 3784 0197 0B       		.uleb128 0xb
 3785 0198 00       		.byte	0
 3786 0199 00       		.byte	0
 3787 019a 1B       		.uleb128 0x1b
 3788 019b 34       		.uleb128 0x34
 3789 019c 00       		.byte	0
 3790 019d 03       		.uleb128 0x3
 3791 019e 0E       		.uleb128 0xe
 3792 019f 3A       		.uleb128 0x3a
 3793 01a0 0B       		.uleb128 0xb
 3794 01a1 3B       		.uleb128 0x3b
 3795 01a2 0B       		.uleb128 0xb
 3796 01a3 49       		.uleb128 0x49
 3797 01a4 13       		.uleb128 0x13
 3798 01a5 02       		.uleb128 0x2
 3799 01a6 18       		.uleb128 0x18
 3800 01a7 00       		.byte	0
 3801 01a8 00       		.byte	0
 3802 01a9 1C       		.uleb128 0x1c
 3803 01aa 34       		.uleb128 0x34
 3804 01ab 00       		.byte	0
 3805 01ac 03       		.uleb128 0x3
 3806 01ad 0E       		.uleb128 0xe
 3807 01ae 3A       		.uleb128 0x3a
 3808 01af 0B       		.uleb128 0xb
 3809 01b0 3B       		.uleb128 0x3b
 3810 01b1 0B       		.uleb128 0xb
 3811 01b2 49       		.uleb128 0x49
 3812 01b3 13       		.uleb128 0x13
 3813 01b4 3F       		.uleb128 0x3f
 3814 01b5 19       		.uleb128 0x19
 3815 01b6 02       		.uleb128 0x2
 3816 01b7 18       		.uleb128 0x18
 3817 01b8 00       		.byte	0
 3818 01b9 00       		.byte	0
 3819 01ba 1D       		.uleb128 0x1d
 3820 01bb 2E       		.uleb128 0x2e
 3821 01bc 00       		.byte	0
 3822 01bd 3F       		.uleb128 0x3f
 3823 01be 19       		.uleb128 0x19
 3824 01bf 3C       		.uleb128 0x3c
 3825 01c0 19       		.uleb128 0x19
 3826 01c1 6E       		.uleb128 0x6e
 3827 01c2 0E       		.uleb128 0xe
 3828 01c3 03       		.uleb128 0x3
 3829 01c4 0E       		.uleb128 0xe
 3830 01c5 3A       		.uleb128 0x3a
 3831 01c6 0B       		.uleb128 0xb
 3832 01c7 3B       		.uleb128 0x3b
 3833 01c8 0B       		.uleb128 0xb
 3834 01c9 00       		.byte	0
 3835 01ca 00       		.byte	0
 3836 01cb 00       		.byte	0
 3837              		.section	.debug_loc,"",%progbits
 3838              	.Ldebug_loc0:
 3839              	.LLST0:
 3840 0000 00000000 		.4byte	.LVL0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 135


 3841 0004 07000000 		.4byte	.LVL1-1
 3842 0008 0100     		.2byte	0x1
 3843 000a 50       		.byte	0x50
 3844 000b 07000000 		.4byte	.LVL1-1
 3845 000f 12000000 		.4byte	.LVL3
 3846 0013 0100     		.2byte	0x1
 3847 0015 54       		.byte	0x54
 3848 0016 12000000 		.4byte	.LVL3
 3849 001a 20000000 		.4byte	.LFE2
 3850 001e 0400     		.2byte	0x4
 3851 0020 F3       		.byte	0xf3
 3852 0021 01       		.uleb128 0x1
 3853 0022 50       		.byte	0x50
 3854 0023 9F       		.byte	0x9f
 3855 0024 00000000 		.4byte	0
 3856 0028 00000000 		.4byte	0
 3857              	.LLST1:
 3858 002c 08000000 		.4byte	.LVL1
 3859 0030 19000000 		.4byte	.LVL5-1
 3860 0034 0100     		.2byte	0x1
 3861 0036 50       		.byte	0x50
 3862 0037 00000000 		.4byte	0
 3863 003b 00000000 		.4byte	0
 3864              	.LLST2:
 3865 003f 10000000 		.4byte	.LVL2
 3866 0043 14000000 		.4byte	.LVL4
 3867 0047 0100     		.2byte	0x1
 3868 0049 53       		.byte	0x53
 3869 004a 14000000 		.4byte	.LVL4
 3870 004e 1A000000 		.4byte	.LVL6
 3871 0052 0100     		.2byte	0x1
 3872 0054 54       		.byte	0x54
 3873 0055 00000000 		.4byte	0
 3874 0059 00000000 		.4byte	0
 3875              	.LLST3:
 3876 005d 06000000 		.4byte	.LVL8
 3877 0061 11000000 		.4byte	.LVL10-1
 3878 0065 0100     		.2byte	0x1
 3879 0067 50       		.byte	0x50
 3880 0068 00000000 		.4byte	0
 3881 006c 00000000 		.4byte	0
 3882              	.LLST4:
 3883 0070 0E000000 		.4byte	.LVL9
 3884 0074 14000000 		.4byte	.LVL11
 3885 0078 0100     		.2byte	0x1
 3886 007a 54       		.byte	0x54
 3887 007b 14000000 		.4byte	.LVL11
 3888 007f 1C000000 		.4byte	.LFE4
 3889 0083 0100     		.2byte	0x1
 3890 0085 50       		.byte	0x50
 3891 0086 00000000 		.4byte	0
 3892 008a 00000000 		.4byte	0
 3893              	.LLST5:
 3894 008e 00000000 		.4byte	.LVL12
 3895 0092 07000000 		.4byte	.LVL13-1
 3896 0096 0100     		.2byte	0x1
 3897 0098 50       		.byte	0x50
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 136


 3898 0099 07000000 		.4byte	.LVL13-1
 3899 009d 0A000000 		.4byte	.LVL14
 3900 00a1 0100     		.2byte	0x1
 3901 00a3 54       		.byte	0x54
 3902 00a4 0A000000 		.4byte	.LVL14
 3903 00a8 24000000 		.4byte	.LFE5
 3904 00ac 0400     		.2byte	0x4
 3905 00ae F3       		.byte	0xf3
 3906 00af 01       		.uleb128 0x1
 3907 00b0 50       		.byte	0x50
 3908 00b1 9F       		.byte	0x9f
 3909 00b2 00000000 		.4byte	0
 3910 00b6 00000000 		.4byte	0
 3911              	.LLST6:
 3912 00ba 08000000 		.4byte	.LVL13
 3913 00be 1D000000 		.4byte	.LVL15-1
 3914 00c2 0100     		.2byte	0x1
 3915 00c4 50       		.byte	0x50
 3916 00c5 00000000 		.4byte	0
 3917 00c9 00000000 		.4byte	0
 3918              	.LLST7:
 3919 00cd 00000000 		.4byte	.LVL16
 3920 00d1 07000000 		.4byte	.LVL17-1
 3921 00d5 0100     		.2byte	0x1
 3922 00d7 50       		.byte	0x50
 3923 00d8 07000000 		.4byte	.LVL17-1
 3924 00dc 14000000 		.4byte	.LVL18
 3925 00e0 0100     		.2byte	0x1
 3926 00e2 54       		.byte	0x54
 3927 00e3 14000000 		.4byte	.LVL18
 3928 00e7 24000000 		.4byte	.LFE7
 3929 00eb 0400     		.2byte	0x4
 3930 00ed F3       		.byte	0xf3
 3931 00ee 01       		.uleb128 0x1
 3932 00ef 50       		.byte	0x50
 3933 00f0 9F       		.byte	0x9f
 3934 00f1 00000000 		.4byte	0
 3935 00f5 00000000 		.4byte	0
 3936              	.LLST8:
 3937 00f9 08000000 		.4byte	.LVL17
 3938 00fd 1D000000 		.4byte	.LVL19-1
 3939 0101 0100     		.2byte	0x1
 3940 0103 50       		.byte	0x50
 3941 0104 00000000 		.4byte	0
 3942 0108 00000000 		.4byte	0
 3943              	.LLST9:
 3944 010c 00000000 		.4byte	.LVL20
 3945 0110 04000000 		.4byte	.LVL21
 3946 0114 0100     		.2byte	0x1
 3947 0116 50       		.byte	0x50
 3948 0117 04000000 		.4byte	.LVL21
 3949 011b 14000000 		.4byte	.LFE8
 3950 011f 0100     		.2byte	0x1
 3951 0121 52       		.byte	0x52
 3952 0122 00000000 		.4byte	0
 3953 0126 00000000 		.4byte	0
 3954              	.LLST10:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 137


 3955 012a 00000000 		.4byte	.LVL26
 3956 012e 04000000 		.4byte	.LVL27
 3957 0132 0100     		.2byte	0x1
 3958 0134 50       		.byte	0x50
 3959 0135 04000000 		.4byte	.LVL27
 3960 0139 14000000 		.4byte	.LFE17
 3961 013d 0400     		.2byte	0x4
 3962 013f F3       		.byte	0xf3
 3963 0140 01       		.uleb128 0x1
 3964 0141 50       		.byte	0x50
 3965 0142 9F       		.byte	0x9f
 3966 0143 00000000 		.4byte	0
 3967 0147 00000000 		.4byte	0
 3968              	.LLST11:
 3969 014b 00000000 		.4byte	.LVL28
 3970 014f 08000000 		.4byte	.LVL29
 3971 0153 0100     		.2byte	0x1
 3972 0155 50       		.byte	0x50
 3973 0156 08000000 		.4byte	.LVL29
 3974 015a 18000000 		.4byte	.LFE18
 3975 015e 0400     		.2byte	0x4
 3976 0160 F3       		.byte	0xf3
 3977 0161 01       		.uleb128 0x1
 3978 0162 50       		.byte	0x50
 3979 0163 9F       		.byte	0x9f
 3980 0164 00000000 		.4byte	0
 3981 0168 00000000 		.4byte	0
 3982              	.LLST12:
 3983 016c 00000000 		.4byte	.LVL30
 3984 0170 04000000 		.4byte	.LVL31
 3985 0174 0100     		.2byte	0x1
 3986 0176 50       		.byte	0x50
 3987 0177 04000000 		.4byte	.LVL31
 3988 017b 14000000 		.4byte	.LFE19
 3989 017f 0400     		.2byte	0x4
 3990 0181 F3       		.byte	0xf3
 3991 0182 01       		.uleb128 0x1
 3992 0183 50       		.byte	0x50
 3993 0184 9F       		.byte	0x9f
 3994 0185 00000000 		.4byte	0
 3995 0189 00000000 		.4byte	0
 3996              	.LLST13:
 3997 018d 00000000 		.4byte	.LVL32
 3998 0191 04000000 		.4byte	.LVL33
 3999 0195 0100     		.2byte	0x1
 4000 0197 50       		.byte	0x50
 4001 0198 04000000 		.4byte	.LVL33
 4002 019c 14000000 		.4byte	.LFE20
 4003 01a0 0400     		.2byte	0x4
 4004 01a2 F3       		.byte	0xf3
 4005 01a3 01       		.uleb128 0x1
 4006 01a4 50       		.byte	0x50
 4007 01a5 9F       		.byte	0x9f
 4008 01a6 00000000 		.4byte	0
 4009 01aa 00000000 		.4byte	0
 4010              	.LLST14:
 4011 01ae 00000000 		.4byte	.LVL34
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 138


 4012 01b2 04000000 		.4byte	.LVL35
 4013 01b6 0100     		.2byte	0x1
 4014 01b8 50       		.byte	0x50
 4015 01b9 04000000 		.4byte	.LVL35
 4016 01bd 14000000 		.4byte	.LFE21
 4017 01c1 0400     		.2byte	0x4
 4018 01c3 F3       		.byte	0xf3
 4019 01c4 01       		.uleb128 0x1
 4020 01c5 50       		.byte	0x50
 4021 01c6 9F       		.byte	0x9f
 4022 01c7 00000000 		.4byte	0
 4023 01cb 00000000 		.4byte	0
 4024              	.LLST15:
 4025 01cf 00000000 		.4byte	.LVL37
 4026 01d3 23000000 		.4byte	.LVL38-1
 4027 01d7 0100     		.2byte	0x1
 4028 01d9 50       		.byte	0x50
 4029 01da 23000000 		.4byte	.LVL38-1
 4030 01de 8C000000 		.4byte	.LVL45
 4031 01e2 0100     		.2byte	0x1
 4032 01e4 54       		.byte	0x54
 4033 01e5 8C000000 		.4byte	.LVL45
 4034 01e9 9A000000 		.4byte	.LVL47
 4035 01ed 0400     		.2byte	0x4
 4036 01ef F3       		.byte	0xf3
 4037 01f0 01       		.uleb128 0x1
 4038 01f1 50       		.byte	0x50
 4039 01f2 9F       		.byte	0x9f
 4040 01f3 9A000000 		.4byte	.LVL47
 4041 01f7 9C000000 		.4byte	.LVL48
 4042 01fb 0100     		.2byte	0x1
 4043 01fd 50       		.byte	0x50
 4044 01fe 9C000000 		.4byte	.LVL48
 4045 0202 A0000000 		.4byte	.LVL49
 4046 0206 0100     		.2byte	0x1
 4047 0208 54       		.byte	0x54
 4048 0209 A0000000 		.4byte	.LVL49
 4049 020d BC000000 		.4byte	.LFE6
 4050 0211 0400     		.2byte	0x4
 4051 0213 F3       		.byte	0xf3
 4052 0214 01       		.uleb128 0x1
 4053 0215 50       		.byte	0x50
 4054 0216 9F       		.byte	0x9f
 4055 0217 00000000 		.4byte	0
 4056 021b 00000000 		.4byte	0
 4057              	.LLST16:
 4058 021f 26000000 		.4byte	.LVL39
 4059 0223 9A000000 		.4byte	.LVL47
 4060 0227 0100     		.2byte	0x1
 4061 0229 55       		.byte	0x55
 4062 022a 00000000 		.4byte	0
 4063 022e 00000000 		.4byte	0
 4064              	.LLST17:
 4065 0232 38000000 		.4byte	.LVL40
 4066 0236 40000000 		.4byte	.LVL41
 4067 023a 0100     		.2byte	0x1
 4068 023c 53       		.byte	0x53
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 139


 4069 023d 40000000 		.4byte	.LVL41
 4070 0241 44000000 		.4byte	.LVL42
 4071 0245 0700     		.2byte	0x7
 4072 0247 0C       		.byte	0xc
 4073 0248 0C0F0340 		.4byte	0x40030f0c
 4074 024c 06       		.byte	0x6
 4075 024d 9F       		.byte	0x9f
 4076 024e 00000000 		.4byte	0
 4077 0252 00000000 		.4byte	0
 4078              	.LLST18:
 4079 0256 00000000 		.4byte	.LVL50
 4080 025a 0C000000 		.4byte	.LVL52
 4081 025e 0100     		.2byte	0x1
 4082 0260 50       		.byte	0x50
 4083 0261 0C000000 		.4byte	.LVL52
 4084 0265 20000000 		.4byte	.LFE11
 4085 0269 0400     		.2byte	0x4
 4086 026b F3       		.byte	0xf3
 4087 026c 01       		.uleb128 0x1
 4088 026d 50       		.byte	0x50
 4089 026e 9F       		.byte	0x9f
 4090 026f 00000000 		.4byte	0
 4091 0273 00000000 		.4byte	0
 4092              	.LLST19:
 4093 0277 00000000 		.4byte	.LVL50
 4094 027b 0F000000 		.4byte	.LVL53-1
 4095 027f 0100     		.2byte	0x1
 4096 0281 51       		.byte	0x51
 4097 0282 0F000000 		.4byte	.LVL53-1
 4098 0286 1E000000 		.4byte	.LVL55
 4099 028a 0100     		.2byte	0x1
 4100 028c 55       		.byte	0x55
 4101 028d 1E000000 		.4byte	.LVL55
 4102 0291 20000000 		.4byte	.LFE11
 4103 0295 0400     		.2byte	0x4
 4104 0297 F3       		.byte	0xf3
 4105 0298 01       		.uleb128 0x1
 4106 0299 51       		.byte	0x51
 4107 029a 9F       		.byte	0x9f
 4108 029b 00000000 		.4byte	0
 4109 029f 00000000 		.4byte	0
 4110              	.LLST20:
 4111 02a3 00000000 		.4byte	.LVL56
 4112 02a7 0A000000 		.4byte	.LVL58
 4113 02ab 0100     		.2byte	0x1
 4114 02ad 50       		.byte	0x50
 4115 02ae 0A000000 		.4byte	.LVL58
 4116 02b2 1C000000 		.4byte	.LFE12
 4117 02b6 0400     		.2byte	0x4
 4118 02b8 F3       		.byte	0xf3
 4119 02b9 01       		.uleb128 0x1
 4120 02ba 50       		.byte	0x50
 4121 02bb 9F       		.byte	0x9f
 4122 02bc 00000000 		.4byte	0
 4123 02c0 00000000 		.4byte	0
 4124              	.LLST21:
 4125 02c4 00000000 		.4byte	.LVL60
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 140


 4126 02c8 0C000000 		.4byte	.LVL62
 4127 02cc 0100     		.2byte	0x1
 4128 02ce 50       		.byte	0x50
 4129 02cf 0C000000 		.4byte	.LVL62
 4130 02d3 22000000 		.4byte	.LFE13
 4131 02d7 0400     		.2byte	0x4
 4132 02d9 F3       		.byte	0xf3
 4133 02da 01       		.uleb128 0x1
 4134 02db 50       		.byte	0x50
 4135 02dc 9F       		.byte	0x9f
 4136 02dd 00000000 		.4byte	0
 4137 02e1 00000000 		.4byte	0
 4138              	.LLST22:
 4139 02e5 00000000 		.4byte	.LVL60
 4140 02e9 0F000000 		.4byte	.LVL63-1
 4141 02ed 0100     		.2byte	0x1
 4142 02ef 51       		.byte	0x51
 4143 02f0 0F000000 		.4byte	.LVL63-1
 4144 02f4 20000000 		.4byte	.LVL65
 4145 02f8 0100     		.2byte	0x1
 4146 02fa 55       		.byte	0x55
 4147 02fb 20000000 		.4byte	.LVL65
 4148 02ff 22000000 		.4byte	.LFE13
 4149 0303 0400     		.2byte	0x4
 4150 0305 F3       		.byte	0xf3
 4151 0306 01       		.uleb128 0x1
 4152 0307 51       		.byte	0x51
 4153 0308 9F       		.byte	0x9f
 4154 0309 00000000 		.4byte	0
 4155 030d 00000000 		.4byte	0
 4156              	.LLST23:
 4157 0311 00000000 		.4byte	.LVL66
 4158 0315 0A000000 		.4byte	.LVL68
 4159 0319 0100     		.2byte	0x1
 4160 031b 50       		.byte	0x50
 4161 031c 0A000000 		.4byte	.LVL68
 4162 0320 1E000000 		.4byte	.LFE14
 4163 0324 0400     		.2byte	0x4
 4164 0326 F3       		.byte	0xf3
 4165 0327 01       		.uleb128 0x1
 4166 0328 50       		.byte	0x50
 4167 0329 9F       		.byte	0x9f
 4168 032a 00000000 		.4byte	0
 4169 032e 00000000 		.4byte	0
 4170              	.LLST24:
 4171 0332 00000000 		.4byte	.LVL70
 4172 0336 0C000000 		.4byte	.LVL71
 4173 033a 0100     		.2byte	0x1
 4174 033c 50       		.byte	0x50
 4175 033d 0C000000 		.4byte	.LVL71
 4176 0341 4C000000 		.4byte	.LFE15
 4177 0345 0400     		.2byte	0x4
 4178 0347 F3       		.byte	0xf3
 4179 0348 01       		.uleb128 0x1
 4180 0349 50       		.byte	0x50
 4181 034a 9F       		.byte	0x9f
 4182 034b 00000000 		.4byte	0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 141


 4183 034f 00000000 		.4byte	0
 4184              	.LLST25:
 4185 0353 00000000 		.4byte	.LVL70
 4186 0357 0F000000 		.4byte	.LVL72-1
 4187 035b 0100     		.2byte	0x1
 4188 035d 51       		.byte	0x51
 4189 035e 0F000000 		.4byte	.LVL72-1
 4190 0362 4C000000 		.4byte	.LFE15
 4191 0366 0400     		.2byte	0x4
 4192 0368 F3       		.byte	0xf3
 4193 0369 01       		.uleb128 0x1
 4194 036a 51       		.byte	0x51
 4195 036b 9F       		.byte	0x9f
 4196 036c 00000000 		.4byte	0
 4197 0370 00000000 		.4byte	0
 4198              	.LLST26:
 4199 0374 26000000 		.4byte	.LVL75
 4200 0378 45000000 		.4byte	.LVL81-1
 4201 037c 0100     		.2byte	0x1
 4202 037e 50       		.byte	0x50
 4203 037f 00000000 		.4byte	0
 4204 0383 00000000 		.4byte	0
 4205              	.LLST27:
 4206 0387 22000000 		.4byte	.LVL74
 4207 038b 46000000 		.4byte	.LVL82
 4208 038f 0100     		.2byte	0x1
 4209 0391 55       		.byte	0x55
 4210 0392 00000000 		.4byte	0
 4211 0396 00000000 		.4byte	0
 4212              	.LLST28:
 4213 039a 32000000 		.4byte	.LVL76
 4214 039e 38000000 		.4byte	.LVL77
 4215 03a2 0100     		.2byte	0x1
 4216 03a4 51       		.byte	0x51
 4217 03a5 3A000000 		.4byte	.LVL78
 4218 03a9 3C000000 		.4byte	.LVL79
 4219 03ad 0100     		.2byte	0x1
 4220 03af 51       		.byte	0x51
 4221 03b0 3C000000 		.4byte	.LVL79
 4222 03b4 40000000 		.4byte	.LVL80
 4223 03b8 0100     		.2byte	0x1
 4224 03ba 53       		.byte	0x53
 4225 03bb 40000000 		.4byte	.LVL80
 4226 03bf 45000000 		.4byte	.LVL81-1
 4227 03c3 0100     		.2byte	0x1
 4228 03c5 51       		.byte	0x51
 4229 03c6 00000000 		.4byte	0
 4230 03ca 00000000 		.4byte	0
 4231              	.LLST29:
 4232 03ce 00000000 		.4byte	.LVL83
 4233 03d2 0A000000 		.4byte	.LVL84
 4234 03d6 0100     		.2byte	0x1
 4235 03d8 50       		.byte	0x50
 4236 03d9 0A000000 		.4byte	.LVL84
 4237 03dd 2C000000 		.4byte	.LFE16
 4238 03e1 0400     		.2byte	0x4
 4239 03e3 F3       		.byte	0xf3
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 142


 4240 03e4 01       		.uleb128 0x1
 4241 03e5 50       		.byte	0x50
 4242 03e6 9F       		.byte	0x9f
 4243 03e7 00000000 		.4byte	0
 4244 03eb 00000000 		.4byte	0
 4245              	.LLST30:
 4246 03ef 24000000 		.4byte	.LVL86
 4247 03f3 26000000 		.4byte	.LVL87
 4248 03f7 0100     		.2byte	0x1
 4249 03f9 50       		.byte	0x50
 4250 03fa 00000000 		.4byte	0
 4251 03fe 00000000 		.4byte	0
 4252              	.LLST31:
 4253 0402 00000000 		.4byte	.LVL88
 4254 0406 06000000 		.4byte	.LVL89
 4255 040a 0100     		.2byte	0x1
 4256 040c 50       		.byte	0x50
 4257 040d 06000000 		.4byte	.LVL89
 4258 0411 26000000 		.4byte	.LVL93
 4259 0415 0100     		.2byte	0x1
 4260 0417 54       		.byte	0x54
 4261 0418 00000000 		.4byte	0
 4262 041c 00000000 		.4byte	0
 4263              	.LLST32:
 4264 0420 00000000 		.4byte	.LVL94
 4265 0424 08000000 		.4byte	.LVL95
 4266 0428 0100     		.2byte	0x1
 4267 042a 50       		.byte	0x50
 4268 042b 08000000 		.4byte	.LVL95
 4269 042f 14000000 		.4byte	.LFE25
 4270 0433 0400     		.2byte	0x4
 4271 0435 F3       		.byte	0xf3
 4272 0436 01       		.uleb128 0x1
 4273 0437 50       		.byte	0x50
 4274 0438 9F       		.byte	0x9f
 4275 0439 00000000 		.4byte	0
 4276 043d 00000000 		.4byte	0
 4277              	.LLST33:
 4278 0441 00000000 		.4byte	.LVL97
 4279 0445 1A000000 		.4byte	.LVL98
 4280 0449 0100     		.2byte	0x1
 4281 044b 50       		.byte	0x50
 4282 044c 1A000000 		.4byte	.LVL98
 4283 0450 4C000000 		.4byte	.LFE26
 4284 0454 0400     		.2byte	0x4
 4285 0456 F3       		.byte	0xf3
 4286 0457 01       		.uleb128 0x1
 4287 0458 50       		.byte	0x50
 4288 0459 9F       		.byte	0x9f
 4289 045a 00000000 		.4byte	0
 4290 045e 00000000 		.4byte	0
 4291              	.LLST34:
 4292 0462 00000000 		.4byte	.LVL102
 4293 0466 02000000 		.4byte	.LVL103
 4294 046a 0100     		.2byte	0x1
 4295 046c 50       		.byte	0x50
 4296 046d 02000000 		.4byte	.LVL103
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 143


 4297 0471 10000000 		.4byte	.LFE33
 4298 0475 0400     		.2byte	0x4
 4299 0477 F3       		.byte	0xf3
 4300 0478 01       		.uleb128 0x1
 4301 0479 50       		.byte	0x50
 4302 047a 9F       		.byte	0x9f
 4303 047b 00000000 		.4byte	0
 4304 047f 00000000 		.4byte	0
 4305              	.LLST35:
 4306 0483 0C000000 		.4byte	.LVL106
 4307 0487 1C000000 		.4byte	.LVL109
 4308 048b 0100     		.2byte	0x1
 4309 048d 54       		.byte	0x54
 4310 048e 1E000000 		.4byte	.LVL110
 4311 0492 22000000 		.4byte	.LVL111
 4312 0496 0100     		.2byte	0x1
 4313 0498 54       		.byte	0x54
 4314 0499 00000000 		.4byte	0
 4315 049d 00000000 		.4byte	0
 4316              	.LLST36:
 4317 04a1 02000000 		.4byte	.LVL112
 4318 04a5 06000000 		.4byte	.LVL113
 4319 04a9 0200     		.2byte	0x2
 4320 04ab 30       		.byte	0x30
 4321 04ac 9F       		.byte	0x9f
 4322 04ad 06000000 		.4byte	.LVL113
 4323 04b1 1B000000 		.4byte	.LVL115-1
 4324 04b5 0100     		.2byte	0x1
 4325 04b7 53       		.byte	0x53
 4326 04b8 00000000 		.4byte	0
 4327 04bc 00000000 		.4byte	0
 4328              	.LLST37:
 4329 04c0 00000000 		.4byte	.LVL122
 4330 04c4 06000000 		.4byte	.LVL123
 4331 04c8 0100     		.2byte	0x1
 4332 04ca 50       		.byte	0x50
 4333 04cb 06000000 		.4byte	.LVL123
 4334 04cf 10000000 		.4byte	.LFE40
 4335 04d3 0400     		.2byte	0x4
 4336 04d5 F3       		.byte	0xf3
 4337 04d6 01       		.uleb128 0x1
 4338 04d7 50       		.byte	0x50
 4339 04d8 9F       		.byte	0x9f
 4340 04d9 00000000 		.4byte	0
 4341 04dd 00000000 		.4byte	0
 4342              	.LLST38:
 4343 04e1 00000000 		.4byte	.LVL124
 4344 04e5 02000000 		.4byte	.LVL125
 4345 04e9 0100     		.2byte	0x1
 4346 04eb 50       		.byte	0x50
 4347 04ec 02000000 		.4byte	.LVL125
 4348 04f0 0C000000 		.4byte	.LFE41
 4349 04f4 0400     		.2byte	0x4
 4350 04f6 F3       		.byte	0xf3
 4351 04f7 01       		.uleb128 0x1
 4352 04f8 50       		.byte	0x50
 4353 04f9 9F       		.byte	0x9f
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 144


 4354 04fa 00000000 		.4byte	0
 4355 04fe 00000000 		.4byte	0
 4356              	.LLST39:
 4357 0502 00000000 		.4byte	.LVL127
 4358 0506 0A000000 		.4byte	.LVL129
 4359 050a 0100     		.2byte	0x1
 4360 050c 50       		.byte	0x50
 4361 050d 0A000000 		.4byte	.LVL129
 4362 0511 20000000 		.4byte	.LFE44
 4363 0515 0400     		.2byte	0x4
 4364 0517 F3       		.byte	0xf3
 4365 0518 01       		.uleb128 0x1
 4366 0519 50       		.byte	0x50
 4367 051a 9F       		.byte	0x9f
 4368 051b 00000000 		.4byte	0
 4369 051f 00000000 		.4byte	0
 4370              	.LLST40:
 4371 0523 08000000 		.4byte	.LVL128
 4372 0527 12000000 		.4byte	.LVL130
 4373 052b 0100     		.2byte	0x1
 4374 052d 52       		.byte	0x52
 4375 052e 12000000 		.4byte	.LVL130
 4376 0532 20000000 		.4byte	.LFE44
 4377 0536 0100     		.2byte	0x1
 4378 0538 50       		.byte	0x50
 4379 0539 00000000 		.4byte	0
 4380 053d 00000000 		.4byte	0
 4381              	.LLST41:
 4382 0541 00000000 		.4byte	.LVL131
 4383 0545 0A000000 		.4byte	.LVL133
 4384 0549 0100     		.2byte	0x1
 4385 054b 50       		.byte	0x50
 4386 054c 0A000000 		.4byte	.LVL133
 4387 0550 20000000 		.4byte	.LFE45
 4388 0554 0400     		.2byte	0x4
 4389 0556 F3       		.byte	0xf3
 4390 0557 01       		.uleb128 0x1
 4391 0558 50       		.byte	0x50
 4392 0559 9F       		.byte	0x9f
 4393 055a 00000000 		.4byte	0
 4394 055e 00000000 		.4byte	0
 4395              	.LLST42:
 4396 0562 08000000 		.4byte	.LVL132
 4397 0566 12000000 		.4byte	.LVL134
 4398 056a 0100     		.2byte	0x1
 4399 056c 52       		.byte	0x52
 4400 056d 12000000 		.4byte	.LVL134
 4401 0571 20000000 		.4byte	.LFE45
 4402 0575 0100     		.2byte	0x1
 4403 0577 50       		.byte	0x50
 4404 0578 00000000 		.4byte	0
 4405 057c 00000000 		.4byte	0
 4406              	.LLST43:
 4407 0580 00000000 		.4byte	.LVL135
 4408 0584 0A000000 		.4byte	.LVL137
 4409 0588 0100     		.2byte	0x1
 4410 058a 50       		.byte	0x50
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 145


 4411 058b 0A000000 		.4byte	.LVL137
 4412 058f 20000000 		.4byte	.LFE46
 4413 0593 0400     		.2byte	0x4
 4414 0595 F3       		.byte	0xf3
 4415 0596 01       		.uleb128 0x1
 4416 0597 50       		.byte	0x50
 4417 0598 9F       		.byte	0x9f
 4418 0599 00000000 		.4byte	0
 4419 059d 00000000 		.4byte	0
 4420              	.LLST44:
 4421 05a1 08000000 		.4byte	.LVL136
 4422 05a5 12000000 		.4byte	.LVL138
 4423 05a9 0100     		.2byte	0x1
 4424 05ab 52       		.byte	0x52
 4425 05ac 12000000 		.4byte	.LVL138
 4426 05b0 20000000 		.4byte	.LFE46
 4427 05b4 0100     		.2byte	0x1
 4428 05b6 50       		.byte	0x50
 4429 05b7 00000000 		.4byte	0
 4430 05bb 00000000 		.4byte	0
 4431              	.LLST45:
 4432 05bf 00000000 		.4byte	.LVL139
 4433 05c3 08000000 		.4byte	.LVL140
 4434 05c7 0100     		.2byte	0x1
 4435 05c9 50       		.byte	0x50
 4436 05ca 08000000 		.4byte	.LVL140
 4437 05ce 1C000000 		.4byte	.LVL144
 4438 05d2 0400     		.2byte	0x4
 4439 05d4 F3       		.byte	0xf3
 4440 05d5 01       		.uleb128 0x1
 4441 05d6 50       		.byte	0x50
 4442 05d7 9F       		.byte	0x9f
 4443 05d8 1C000000 		.4byte	.LVL144
 4444 05dc 1E000000 		.4byte	.LVL145
 4445 05e0 0100     		.2byte	0x1
 4446 05e2 50       		.byte	0x50
 4447 05e3 1E000000 		.4byte	.LVL145
 4448 05e7 2C000000 		.4byte	.LFE47
 4449 05eb 0400     		.2byte	0x4
 4450 05ed F3       		.byte	0xf3
 4451 05ee 01       		.uleb128 0x1
 4452 05ef 50       		.byte	0x50
 4453 05f0 9F       		.byte	0x9f
 4454 05f1 00000000 		.4byte	0
 4455 05f5 00000000 		.4byte	0
 4456              	.LLST46:
 4457 05f9 00000000 		.4byte	.LVL139
 4458 05fd 10000000 		.4byte	.LVL142
 4459 0601 0100     		.2byte	0x1
 4460 0603 51       		.byte	0x51
 4461 0604 10000000 		.4byte	.LVL142
 4462 0608 1C000000 		.4byte	.LVL144
 4463 060c 0400     		.2byte	0x4
 4464 060e F3       		.byte	0xf3
 4465 060f 01       		.uleb128 0x1
 4466 0610 51       		.byte	0x51
 4467 0611 9F       		.byte	0x9f
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 146


 4468 0612 1C000000 		.4byte	.LVL144
 4469 0616 21000000 		.4byte	.LVL146-1
 4470 061a 0100     		.2byte	0x1
 4471 061c 51       		.byte	0x51
 4472 061d 21000000 		.4byte	.LVL146-1
 4473 0621 2C000000 		.4byte	.LFE47
 4474 0625 0400     		.2byte	0x4
 4475 0627 F3       		.byte	0xf3
 4476 0628 01       		.uleb128 0x1
 4477 0629 51       		.byte	0x51
 4478 062a 9F       		.byte	0x9f
 4479 062b 00000000 		.4byte	0
 4480 062f 00000000 		.4byte	0
 4481              	.LLST47:
 4482 0633 0E000000 		.4byte	.LVL141
 4483 0637 18000000 		.4byte	.LVL143
 4484 063b 0100     		.2byte	0x1
 4485 063d 52       		.byte	0x52
 4486 063e 18000000 		.4byte	.LVL143
 4487 0642 1C000000 		.4byte	.LVL144
 4488 0646 0100     		.2byte	0x1
 4489 0648 51       		.byte	0x51
 4490 0649 00000000 		.4byte	0
 4491 064d 00000000 		.4byte	0
 4492              		.section	.debug_aranges,"",%progbits
 4493 0000 94010000 		.4byte	0x194
 4494 0004 0200     		.2byte	0x2
 4495 0006 00000000 		.4byte	.Ldebug_info0
 4496 000a 04       		.byte	0x4
 4497 000b 00       		.byte	0
 4498 000c 0000     		.2byte	0
 4499 000e 0000     		.2byte	0
 4500 0010 00000000 		.4byte	.LFB0
 4501 0014 14000000 		.4byte	.LFE0-.LFB0
 4502 0018 00000000 		.4byte	.LFB1
 4503 001c 10000000 		.4byte	.LFE1-.LFB1
 4504 0020 00000000 		.4byte	.LFB2
 4505 0024 20000000 		.4byte	.LFE2-.LFB2
 4506 0028 00000000 		.4byte	.LFB3
 4507 002c 34000000 		.4byte	.LFE3-.LFB3
 4508 0030 00000000 		.4byte	.LFB4
 4509 0034 1C000000 		.4byte	.LFE4-.LFB4
 4510 0038 00000000 		.4byte	.LFB5
 4511 003c 24000000 		.4byte	.LFE5-.LFB5
 4512 0040 00000000 		.4byte	.LFB7
 4513 0044 24000000 		.4byte	.LFE7-.LFB7
 4514 0048 00000000 		.4byte	.LFB8
 4515 004c 14000000 		.4byte	.LFE8-.LFB8
 4516 0050 00000000 		.4byte	.LFB9
 4517 0054 10000000 		.4byte	.LFE9-.LFB9
 4518 0058 00000000 		.4byte	.LFB10
 4519 005c 0C000000 		.4byte	.LFE10-.LFB10
 4520 0060 00000000 		.4byte	.LFB17
 4521 0064 14000000 		.4byte	.LFE17-.LFB17
 4522 0068 00000000 		.4byte	.LFB18
 4523 006c 18000000 		.4byte	.LFE18-.LFB18
 4524 0070 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 147


 4525 0074 14000000 		.4byte	.LFE19-.LFB19
 4526 0078 00000000 		.4byte	.LFB20
 4527 007c 14000000 		.4byte	.LFE20-.LFB20
 4528 0080 00000000 		.4byte	.LFB21
 4529 0084 14000000 		.4byte	.LFE21-.LFB21
 4530 0088 00000000 		.4byte	.LFB22
 4531 008c 04000000 		.4byte	.LFE22-.LFB22
 4532 0090 00000000 		.4byte	.LFB6
 4533 0094 BC000000 		.4byte	.LFE6-.LFB6
 4534 0098 00000000 		.4byte	.LFB11
 4535 009c 20000000 		.4byte	.LFE11-.LFB11
 4536 00a0 00000000 		.4byte	.LFB12
 4537 00a4 1C000000 		.4byte	.LFE12-.LFB12
 4538 00a8 00000000 		.4byte	.LFB13
 4539 00ac 22000000 		.4byte	.LFE13-.LFB13
 4540 00b0 00000000 		.4byte	.LFB14
 4541 00b4 1E000000 		.4byte	.LFE14-.LFB14
 4542 00b8 00000000 		.4byte	.LFB15
 4543 00bc 4C000000 		.4byte	.LFE15-.LFB15
 4544 00c0 00000000 		.4byte	.LFB16
 4545 00c4 2C000000 		.4byte	.LFE16-.LFB16
 4546 00c8 00000000 		.4byte	.LFB23
 4547 00cc 18000000 		.4byte	.LFE23-.LFB23
 4548 00d0 00000000 		.4byte	.LFB24
 4549 00d4 30000000 		.4byte	.LFE24-.LFB24
 4550 00d8 00000000 		.4byte	.LFB25
 4551 00dc 14000000 		.4byte	.LFE25-.LFB25
 4552 00e0 00000000 		.4byte	.LFB26
 4553 00e4 4C000000 		.4byte	.LFE26-.LFB26
 4554 00e8 00000000 		.4byte	.LFB30
 4555 00ec 10000000 		.4byte	.LFE30-.LFB30
 4556 00f0 00000000 		.4byte	.LFB31
 4557 00f4 10000000 		.4byte	.LFE31-.LFB31
 4558 00f8 00000000 		.4byte	.LFB29
 4559 00fc 18000000 		.4byte	.LFE29-.LFB29
 4560 0100 00000000 		.4byte	.LFB32
 4561 0104 10000000 		.4byte	.LFE32-.LFB32
 4562 0108 00000000 		.4byte	.LFB33
 4563 010c 10000000 		.4byte	.LFE33-.LFB33
 4564 0110 00000000 		.4byte	.LFB34
 4565 0114 10000000 		.4byte	.LFE34-.LFB34
 4566 0118 00000000 		.4byte	.LFB35
 4567 011c 10000000 		.4byte	.LFE35-.LFB35
 4568 0120 00000000 		.4byte	.LFB36
 4569 0124 20000000 		.4byte	.LFE36-.LFB36
 4570 0128 00000000 		.4byte	.LFB37
 4571 012c 10000000 		.4byte	.LFE37-.LFB37
 4572 0130 00000000 		.4byte	.LFB38
 4573 0134 10000000 		.4byte	.LFE38-.LFB38
 4574 0138 00000000 		.4byte	.LFB42
 4575 013c 28000000 		.4byte	.LFE42-.LFB42
 4576 0140 00000000 		.4byte	.LFB39
 4577 0144 0C000000 		.4byte	.LFE39-.LFB39
 4578 0148 00000000 		.4byte	.LFB28
 4579 014c 44000000 		.4byte	.LFE28-.LFB28
 4580 0150 00000000 		.4byte	.LFB27
 4581 0154 20000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 148


 4582 0158 00000000 		.4byte	.LFB40
 4583 015c 10000000 		.4byte	.LFE40-.LFB40
 4584 0160 00000000 		.4byte	.LFB41
 4585 0164 0C000000 		.4byte	.LFE41-.LFB41
 4586 0168 00000000 		.4byte	.LFB43
 4587 016c 70000000 		.4byte	.LFE43-.LFB43
 4588 0170 00000000 		.4byte	.LFB44
 4589 0174 20000000 		.4byte	.LFE44-.LFB44
 4590 0178 00000000 		.4byte	.LFB45
 4591 017c 20000000 		.4byte	.LFE45-.LFB45
 4592 0180 00000000 		.4byte	.LFB46
 4593 0184 20000000 		.4byte	.LFE46-.LFB46
 4594 0188 00000000 		.4byte	.LFB47
 4595 018c 2C000000 		.4byte	.LFE47-.LFB47
 4596 0190 00000000 		.4byte	0
 4597 0194 00000000 		.4byte	0
 4598              		.section	.debug_ranges,"",%progbits
 4599              	.Ldebug_ranges0:
 4600 0000 00000000 		.4byte	.LFB0
 4601 0004 14000000 		.4byte	.LFE0
 4602 0008 00000000 		.4byte	.LFB1
 4603 000c 10000000 		.4byte	.LFE1
 4604 0010 00000000 		.4byte	.LFB2
 4605 0014 20000000 		.4byte	.LFE2
 4606 0018 00000000 		.4byte	.LFB3
 4607 001c 34000000 		.4byte	.LFE3
 4608 0020 00000000 		.4byte	.LFB4
 4609 0024 1C000000 		.4byte	.LFE4
 4610 0028 00000000 		.4byte	.LFB5
 4611 002c 24000000 		.4byte	.LFE5
 4612 0030 00000000 		.4byte	.LFB7
 4613 0034 24000000 		.4byte	.LFE7
 4614 0038 00000000 		.4byte	.LFB8
 4615 003c 14000000 		.4byte	.LFE8
 4616 0040 00000000 		.4byte	.LFB9
 4617 0044 10000000 		.4byte	.LFE9
 4618 0048 00000000 		.4byte	.LFB10
 4619 004c 0C000000 		.4byte	.LFE10
 4620 0050 00000000 		.4byte	.LFB17
 4621 0054 14000000 		.4byte	.LFE17
 4622 0058 00000000 		.4byte	.LFB18
 4623 005c 18000000 		.4byte	.LFE18
 4624 0060 00000000 		.4byte	.LFB19
 4625 0064 14000000 		.4byte	.LFE19
 4626 0068 00000000 		.4byte	.LFB20
 4627 006c 14000000 		.4byte	.LFE20
 4628 0070 00000000 		.4byte	.LFB21
 4629 0074 14000000 		.4byte	.LFE21
 4630 0078 00000000 		.4byte	.LFB22
 4631 007c 04000000 		.4byte	.LFE22
 4632 0080 00000000 		.4byte	.LFB6
 4633 0084 BC000000 		.4byte	.LFE6
 4634 0088 00000000 		.4byte	.LFB11
 4635 008c 20000000 		.4byte	.LFE11
 4636 0090 00000000 		.4byte	.LFB12
 4637 0094 1C000000 		.4byte	.LFE12
 4638 0098 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 149


 4639 009c 22000000 		.4byte	.LFE13
 4640 00a0 00000000 		.4byte	.LFB14
 4641 00a4 1E000000 		.4byte	.LFE14
 4642 00a8 00000000 		.4byte	.LFB15
 4643 00ac 4C000000 		.4byte	.LFE15
 4644 00b0 00000000 		.4byte	.LFB16
 4645 00b4 2C000000 		.4byte	.LFE16
 4646 00b8 00000000 		.4byte	.LFB23
 4647 00bc 18000000 		.4byte	.LFE23
 4648 00c0 00000000 		.4byte	.LFB24
 4649 00c4 30000000 		.4byte	.LFE24
 4650 00c8 00000000 		.4byte	.LFB25
 4651 00cc 14000000 		.4byte	.LFE25
 4652 00d0 00000000 		.4byte	.LFB26
 4653 00d4 4C000000 		.4byte	.LFE26
 4654 00d8 00000000 		.4byte	.LFB30
 4655 00dc 10000000 		.4byte	.LFE30
 4656 00e0 00000000 		.4byte	.LFB31
 4657 00e4 10000000 		.4byte	.LFE31
 4658 00e8 00000000 		.4byte	.LFB29
 4659 00ec 18000000 		.4byte	.LFE29
 4660 00f0 00000000 		.4byte	.LFB32
 4661 00f4 10000000 		.4byte	.LFE32
 4662 00f8 00000000 		.4byte	.LFB33
 4663 00fc 10000000 		.4byte	.LFE33
 4664 0100 00000000 		.4byte	.LFB34
 4665 0104 10000000 		.4byte	.LFE34
 4666 0108 00000000 		.4byte	.LFB35
 4667 010c 10000000 		.4byte	.LFE35
 4668 0110 00000000 		.4byte	.LFB36
 4669 0114 20000000 		.4byte	.LFE36
 4670 0118 00000000 		.4byte	.LFB37
 4671 011c 10000000 		.4byte	.LFE37
 4672 0120 00000000 		.4byte	.LFB38
 4673 0124 10000000 		.4byte	.LFE38
 4674 0128 00000000 		.4byte	.LFB42
 4675 012c 28000000 		.4byte	.LFE42
 4676 0130 00000000 		.4byte	.LFB39
 4677 0134 0C000000 		.4byte	.LFE39
 4678 0138 00000000 		.4byte	.LFB28
 4679 013c 44000000 		.4byte	.LFE28
 4680 0140 00000000 		.4byte	.LFB27
 4681 0144 20000000 		.4byte	.LFE27
 4682 0148 00000000 		.4byte	.LFB40
 4683 014c 10000000 		.4byte	.LFE40
 4684 0150 00000000 		.4byte	.LFB41
 4685 0154 0C000000 		.4byte	.LFE41
 4686 0158 00000000 		.4byte	.LFB43
 4687 015c 70000000 		.4byte	.LFE43
 4688 0160 00000000 		.4byte	.LFB44
 4689 0164 20000000 		.4byte	.LFE44
 4690 0168 00000000 		.4byte	.LFB45
 4691 016c 20000000 		.4byte	.LFE45
 4692 0170 00000000 		.4byte	.LFB46
 4693 0174 20000000 		.4byte	.LFE46
 4694 0178 00000000 		.4byte	.LFB47
 4695 017c 2C000000 		.4byte	.LFE47
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 150


 4696 0180 00000000 		.4byte	0
 4697 0184 00000000 		.4byte	0
 4698              		.section	.debug_line,"",%progbits
 4699              	.Ldebug_line0:
 4700 0000 A9040000 		.section	.debug_str,"MS",%progbits,1
 4700      02004D00 
 4700      00000201 
 4700      FB0E0D00 
 4700      01010101 
 4701              	.LASF54:
 4702 0000 72616D56 		.ascii	"ramVectorTable\000"
 4702      6563746F 
 4702      72546162 
 4702      6C6500
 4703              	.LASF10:
 4704 000f 75696E74 		.ascii	"uint16\000"
 4704      313600
 4705              	.LASF38:
 4706 0016 696E7453 		.ascii	"intState\000"
 4706      74617465 
 4706      00
 4707              	.LASF25:
 4708 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4708      73436C6B 
 4708      57726974 
 4708      65486663 
 4708      6C6B4469 
 4709              	.LASF102:
 4710 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4710      73436C6B 
 4710      50756D70 
 4710      436F6E66 
 4710      696700
 4711              	.LASF53:
 4712 004b 6F6C6449 		.ascii	"oldIsr\000"
 4712      737200
 4713              	.LASF85:
 4714 0052 72657456 		.ascii	"retVal\000"
 4714      616C00
 4715              	.LASF37:
 4716 0059 43794469 		.ascii	"CyDisableInts\000"
 4716      7361626C 
 4716      65496E74 
 4716      7300
 4717              	.LASF106:
 4718 0067 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4718      43313120 
 4718      352E342E 
 4718      31203230 
 4718      31363036 
 4719 009a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4719      20726576 
 4719      6973696F 
 4719      6E203233 
 4719      37373135 
 4720 00cd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4720      66756E63 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 151


 4720      74696F6E 
 4720      2D736563 
 4720      74696F6E 
 4721              	.LASF7:
 4722 00f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4722      206C6F6E 
 4722      6720756E 
 4722      7369676E 
 4722      65642069 
 4723              	.LASF101:
 4724 010c 43795379 		.ascii	"CySysTickInitVar\000"
 4724      73546963 
 4724      6B496E69 
 4724      74566172 
 4724      00
 4725              	.LASF39:
 4726 011d 4379456E 		.ascii	"CyEnableInts\000"
 4726      61626C65 
 4726      496E7473 
 4726      00
 4727              	.LASF95:
 4728 012a 696E7465 		.ascii	"interfaceNumber\000"
 4728      72666163 
 4728      654E756D 
 4728      62657200 
 4729              	.LASF63:
 4730 013a 4379536F 		.ascii	"CySoftwareReset\000"
 4730      66747761 
 4730      72655265 
 4730      73657400 
 4731              	.LASF70:
 4732 014a 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4732      73546963 
 4732      6B456E61 
 4732      626C6549 
 4732      6E746572 
 4733              	.LASF43:
 4734 0163 4379496E 		.ascii	"CyIntGetState\000"
 4734      74476574 
 4734      53746174 
 4734      6500
 4735              	.LASF6:
 4736 0171 6C6F6E67 		.ascii	"long long int\000"
 4736      206C6F6E 
 4736      6720696E 
 4736      7400
 4737              	.LASF0:
 4738 017f 7369676E 		.ascii	"signed char\000"
 4738      65642063 
 4738      68617200 
 4739              	.LASF49:
 4740 018b 66726571 		.ascii	"freq\000"
 4740      00
 4741              	.LASF68:
 4742 0190 43794465 		.ascii	"CyDelayFreq\000"
 4742      6C617946 
 4742      72657100 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 152


 4743              	.LASF23:
 4744 019c 696E7465 		.ascii	"interruptState\000"
 4744      72727570 
 4744      74537461 
 4744      746500
 4745              	.LASF74:
 4746 01ab 43795379 		.ascii	"CySysTickGetReload\000"
 4746      73546963 
 4746      6B476574 
 4746      52656C6F 
 4746      616400
 4747              	.LASF4:
 4748 01be 6C6F6E67 		.ascii	"long int\000"
 4748      20696E74 
 4748      00
 4749              	.LASF44:
 4750 01c7 4379496E 		.ascii	"CyIntDisable\000"
 4750      74446973 
 4750      61626C65 
 4750      00
 4751              	.LASF86:
 4752 01d4 43795379 		.ascii	"CySysTickGetCallback\000"
 4752      73546963 
 4752      6B476574 
 4752      43616C6C 
 4752      6261636B 
 4753              	.LASF9:
 4754 01e9 75696E74 		.ascii	"uint8\000"
 4754      3800
 4755              	.LASF98:
 4756 01ef 63796465 		.ascii	"cydelayFreqKhz\000"
 4756      6C617946 
 4756      7265714B 
 4756      687A00
 4757              	.LASF28:
 4758 01fe 656E6162 		.ascii	"enable\000"
 4758      6C6500
 4759              	.LASF13:
 4760 0205 646F7562 		.ascii	"double\000"
 4760      6C6500
 4761              	.LASF60:
 4762 020c 73686966 		.ascii	"shift\000"
 4762      7400
 4763              	.LASF11:
 4764 0212 75696E74 		.ascii	"uint32\000"
 4764      333200
 4765              	.LASF40:
 4766 0219 6D61736B 		.ascii	"mask\000"
 4766      00
 4767              	.LASF33:
 4768 021e 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4768      73436C6B 
 4768      47657453 
 4768      7973636C 
 4768      6B536F75 
 4769              	.LASF62:
 4770 0236 4379496E 		.ascii	"CyIntGetPriority\000"
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 153


 4770      74476574 
 4770      5072696F 
 4770      72697479 
 4770      00
 4771              	.LASF100:
 4772 0247 63796465 		.ascii	"cydelay32kMs\000"
 4772      6C617933 
 4772      326B4D73 
 4772      00
 4773              	.LASF81:
 4774 0254 43795379 		.ascii	"CySysTickInit\000"
 4774      73546963 
 4774      6B496E69 
 4774      7400
 4775              	.LASF61:
 4776 0262 76616C75 		.ascii	"value\000"
 4776      6500
 4777              	.LASF77:
 4778 0268 636C6F63 		.ascii	"clockSource\000"
 4778      6B536F75 
 4778      72636500 
 4779              	.LASF87:
 4780 0274 43794765 		.ascii	"CyGetUniqueId\000"
 4780      74556E69 
 4780      71756549 
 4780      6400
 4781              	.LASF79:
 4782 0282 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4782      73546963 
 4782      6B476574 
 4782      436F756E 
 4782      74466C61 
 4783              	.LASF8:
 4784 0298 756E7369 		.ascii	"unsigned int\000"
 4784      676E6564 
 4784      20696E74 
 4784      00
 4785              	.LASF80:
 4786 02a5 43795379 		.ascii	"CySysTickClear\000"
 4786      73546963 
 4786      6B436C65 
 4786      617200
 4787              	.LASF5:
 4788 02b4 6C6F6E67 		.ascii	"long unsigned int\000"
 4788      20756E73 
 4788      69676E65 
 4788      6420696E 
 4788      7400
 4789              	.LASF22:
 4790 02c6 43795379 		.ascii	"CySysClkImoStop\000"
 4790      73436C6B 
 4790      496D6F53 
 4790      746F7000 
 4791              	.LASF103:
 4792 02d6 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4792      74657243 
 4792      72697469 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 154


 4792      63616C53 
 4792      65637469 
 4793              	.LASF45:
 4794 02ed 4379496E 		.ascii	"CyIntSetPending\000"
 4794      74536574 
 4794      50656E64 
 4794      696E6700 
 4795              	.LASF34:
 4796 02fd 43795379 		.ascii	"CySysGetResetReason\000"
 4796      73476574 
 4796      52657365 
 4796      74526561 
 4796      736F6E00 
 4797              	.LASF3:
 4798 0311 73686F72 		.ascii	"short unsigned int\000"
 4798      7420756E 
 4798      7369676E 
 4798      65642069 
 4798      6E7400
 4799              	.LASF91:
 4800 0324 72656754 		.ascii	"regTmp\000"
 4800      6D7000
 4801              	.LASF76:
 4802 032b 43795379 		.ascii	"CySysTickSetClockSource\000"
 4802      73546963 
 4802      6B536574 
 4802      436C6F63 
 4802      6B536F75 
 4803              	.LASF56:
 4804 0343 4379496E 		.ascii	"CyIntSetVector\000"
 4804      74536574 
 4804      56656374 
 4804      6F7200
 4805              	.LASF42:
 4806 0352 6E756D62 		.ascii	"number\000"
 4806      657200
 4807              	.LASF59:
 4808 0359 7072696F 		.ascii	"priority\000"
 4808      72697479 
 4808      00
 4809              	.LASF48:
 4810 0362 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4810      73436C6B 
 4810      57726974 
 4810      65496D6F 
 4810      46726571 
 4811              	.LASF92:
 4812 0377 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 4812      73536574 
 4812      466C6173 
 4812      68416363 
 4812      65737341 
 4813              	.LASF51:
 4814 0396 4379496E 		.ascii	"CyIntSetSysVector\000"
 4814      74536574 
 4814      53797356 
 4814      6563746F 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 155


 4814      7200
 4815              	.LASF26:
 4816 03a8 43795379 		.ascii	"CySysEnablePumpClock\000"
 4816      73456E61 
 4816      626C6550 
 4816      756D7043 
 4816      6C6F636B 
 4817              	.LASF16:
 4818 03bd 72656733 		.ascii	"reg32\000"
 4818      3200
 4819              	.LASF82:
 4820 03c3 43795379 		.ascii	"CySysTickStart\000"
 4820      73546963 
 4820      6B537461 
 4820      727400
 4821              	.LASF36:
 4822 03d2 72657475 		.ascii	"returnStatus\000"
 4822      726E5374 
 4822      61747573 
 4822      00
 4823              	.LASF90:
 4824 03df 736F7572 		.ascii	"source\000"
 4824      636500
 4825              	.LASF19:
 4826 03e6 73697A65 		.ascii	"sizetype\000"
 4826      74797065 
 4826      00
 4827              	.LASF94:
 4828 03ef 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 4828      73536574 
 4828      50657269 
 4828      70686572 
 4828      616C4163 
 4829              	.LASF46:
 4830 0413 4379496E 		.ascii	"CyIntClearPending\000"
 4830      74436C65 
 4830      61725065 
 4830      6E64696E 
 4830      6700
 4831              	.LASF18:
 4832 0425 6C6F6E67 		.ascii	"long double\000"
 4832      20646F75 
 4832      626C6500 
 4833              	.LASF52:
 4834 0431 61646472 		.ascii	"address\000"
 4834      65737300 
 4835              	.LASF29:
 4836 0439 73797363 		.ascii	"sysclkSource\000"
 4836      6C6B536F 
 4836      75726365 
 4836      00
 4837              	.LASF84:
 4838 0446 66756E63 		.ascii	"function\000"
 4838      74696F6E 
 4838      00
 4839              	.LASF75:
 4840 044f 43795379 		.ascii	"CySysTickGetValue\000"
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 156


 4840      73546963 
 4840      6B476574 
 4840      56616C75 
 4840      6500
 4841              	.LASF97:
 4842 0461 63796465 		.ascii	"cydelayFreqHz\000"
 4842      6C617946 
 4842      72657148 
 4842      7A00
 4843              	.LASF58:
 4844 046f 4379496E 		.ascii	"CyIntSetPriority\000"
 4844      74536574 
 4844      5072696F 
 4844      72697479 
 4844      00
 4845              	.LASF12:
 4846 0480 666C6F61 		.ascii	"float\000"
 4846      7400
 4847              	.LASF104:
 4848 0486 43794578 		.ascii	"CyExitCriticalSection\000"
 4848      69744372 
 4848      69746963 
 4848      616C5365 
 4848      6374696F 
 4849              	.LASF20:
 4850 049c 63795379 		.ascii	"cySysTickCallback\000"
 4850      73546963 
 4850      6B43616C 
 4850      6C626163 
 4850      6B00
 4851              	.LASF57:
 4852 04ae 4379496E 		.ascii	"CyIntGetVector\000"
 4852      74476574 
 4852      56656374 
 4852      6F7200
 4853              	.LASF65:
 4854 04bd 6D696C6C 		.ascii	"milliseconds\000"
 4854      69736563 
 4854      6F6E6473 
 4854      00
 4855              	.LASF105:
 4856 04ca 43794465 		.ascii	"CyDelayCycles\000"
 4856      6C617943 
 4856      79636C65 
 4856      7300
 4857              	.LASF15:
 4858 04d8 72656738 		.ascii	"reg8\000"
 4858      00
 4859              	.LASF47:
 4860 04dd 43794861 		.ascii	"CyHalt\000"
 4860      6C7400
 4861              	.LASF89:
 4862 04e4 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 4862      73536574 
 4862      52616D41 
 4862      63636573 
 4862      73417262 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 157


 4863              	.LASF1:
 4864 0501 756E7369 		.ascii	"unsigned char\000"
 4864      676E6564 
 4864      20636861 
 4864      7200
 4865              	.LASF2:
 4866 050f 73686F72 		.ascii	"short int\000"
 4866      7420696E 
 4866      7400
 4867              	.LASF41:
 4868 0519 4379496E 		.ascii	"CyIntEnable\000"
 4868      74456E61 
 4868      626C6500 
 4869              	.LASF55:
 4870 0525 4379496E 		.ascii	"CyIntGetSysVector\000"
 4870      74476574 
 4870      53797356 
 4870      6563746F 
 4870      7200
 4871              	.LASF27:
 4872 0537 636C6B53 		.ascii	"clkSelect\000"
 4872      656C6563 
 4872      7400
 4873              	.LASF66:
 4874 0541 43794465 		.ascii	"CyDelayUs\000"
 4874      6C617955 
 4874      7300
 4875              	.LASF35:
 4876 054b 72656173 		.ascii	"reason\000"
 4876      6F6E00
 4877              	.LASF14:
 4878 0552 63686172 		.ascii	"char\000"
 4878      00
 4879              	.LASF17:
 4880 0557 63796973 		.ascii	"cyisraddress\000"
 4880      72616464 
 4880      72657373 
 4880      00
 4881              	.LASF71:
 4882 0564 43795379 		.ascii	"CySysTickEnable\000"
 4882      73546963 
 4882      6B456E61 
 4882      626C6500 
 4883              	.LASF32:
 4884 0574 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 4884      73436C6B 
 4884      57726974 
 4884      65486663 
 4884      6C6B4469 
 4885              	.LASF108:
 4886 058a 433A5C55 		.ascii	"C:\\Users\\Ryan\\ownCloud\\Projects\\EEforEveryone\\"
 4886      73657273 
 4886      5C527961 
 4886      6E5C6F77 
 4886      6E436C6F 
 4887 05b8 32303232 		.ascii	"2022\\2201_MOTOR\\sw\\4_PSoC\\2201_Motor\\2201_Moto"
 4887      5C323230 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 158


 4887      315F4D4F 
 4887      544F525C 
 4887      73775C34 
 4888 05e6 722E6379 		.ascii	"r.cydsn\000"
 4888      64736E00 
 4889              	.LASF30:
 4890 05ee 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4890      73436C6B 
 4890      57726974 
 4890      65537973 
 4890      636C6B44 
 4891              	.LASF83:
 4892 0605 43795379 		.ascii	"CySysTickSetCallback\000"
 4892      73546963 
 4892      6B536574 
 4892      43616C6C 
 4892      6261636B 
 4893              	.LASF96:
 4894 061a 43795379 		.ascii	"CySysTickCallbacks\000"
 4894      73546963 
 4894      6B43616C 
 4894      6C626163 
 4894      6B7300
 4895              	.LASF50:
 4896 062d 696D6F54 		.ascii	"imoTrim1Value\000"
 4896      72696D31 
 4896      56616C75 
 4896      6500
 4897              	.LASF88:
 4898 063b 756E6971 		.ascii	"uniqueId\000"
 4898      75654964 
 4898      00
 4899              	.LASF64:
 4900 0644 43794465 		.ascii	"CyDelay\000"
 4900      6C617900 
 4901              	.LASF78:
 4902 064c 43795379 		.ascii	"CySysTickGetClockSource\000"
 4902      73546963 
 4902      6B476574 
 4902      436C6F63 
 4902      6B536F75 
 4903              	.LASF72:
 4904 0664 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4904      73546963 
 4904      6B446973 
 4904      61626C65 
 4904      496E7465 
 4905              	.LASF99:
 4906 067e 63796465 		.ascii	"cydelayFreqMhz\000"
 4906      6C617946 
 4906      7265714D 
 4906      687A00
 4907              	.LASF93:
 4908 068d 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 4908      73536574 
 4908      446D6163 
 4908      41636365 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc3Ji8XC.s 			page 159


 4908      73734172 
 4909              	.LASF69:
 4910 06ab 43795379 		.ascii	"CySysTickStop\000"
 4910      73546963 
 4910      6B53746F 
 4910      7000
 4911              	.LASF31:
 4912 06b9 64697669 		.ascii	"divider\000"
 4912      64657200 
 4913              	.LASF21:
 4914 06c1 43795379 		.ascii	"CySysClkImoStart\000"
 4914      73436C6B 
 4914      496D6F53 
 4914      74617274 
 4914      00
 4915              	.LASF107:
 4916 06d2 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4916      72617465 
 4916      645F536F 
 4916      75726365 
 4916      5C50536F 
 4917              	.LASF67:
 4918 06f1 6D696372 		.ascii	"microseconds\000"
 4918      6F736563 
 4918      6F6E6473 
 4918      00
 4919              	.LASF24:
 4920 06fe 746D7052 		.ascii	"tmpReg\000"
 4920      656700
 4921              	.LASF73:
 4922 0705 43795379 		.ascii	"CySysTickSetReload\000"
 4922      73546963 
 4922      6B536574 
 4922      52656C6F 
 4922      616400
 4923              	.LASF109:
 4924 0718 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4924      73546963 
 4924      6B536572 
 4924      76696365 
 4924      43616C6C 
 4925              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
